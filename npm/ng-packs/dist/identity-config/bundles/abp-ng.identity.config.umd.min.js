!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@angular/core"),require("@angular/router")):"function"==typeof define&&define.amd?define("@abp/ng.identity.config",["exports","@abp/ng.core","@angular/core","@angular/router"],t):t(((e=e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng.identity=e.abp.ng.identity||{},e.abp.ng.identity.config={}),e.ng_core,e.ng.core,e.ng.router)}(this,(function(e,t,n,r){"use strict";var i=function(){function e(e,n){this.router=e,this.restService=n,t.addAbpRoutes([{name:"AbpUiNavigation::Menu:Administration",path:"",order:1,wrapper:!0,iconClass:"fa fa-wrench"},{name:"AbpIdentity::Menu:IdentityManagement",path:"identity",order:1,parentName:"AbpUiNavigation::Menu:Administration",layout:"application",iconClass:"fa fa-id-card-o",children:[{path:"roles",name:"AbpIdentity::Roles",order:1,requiredPolicy:"AbpIdentity.Roles"},{path:"users",name:"AbpIdentity::Users",order:2,requiredPolicy:"AbpIdentity.Users"}]}])}return e.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:r.Router},{type:t.RestService}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(r.Router),n.ɵɵinject(t.RestService))},token:e,providedIn:"root"}),e}();var o=t.noop,a=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{providers:[{provide:n.APP_INITIALIZER,deps:[i],useFactory:o,multi:!0}]}]}],e}();e.IdentityConfigModule=a,e.IdentityConfigService=i,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.identity.config.umd.min.js.map