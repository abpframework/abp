{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.account/lib/components/login/login.component.ts","ng://@abp/ng.account/lib/components/manage-profile/manage-profile.component.ts","ng://@abp/ng.account/lib/services/account.service.ts","ng://@abp/ng.account/lib/components/register/register.component.ts","ng://@abp/ng.account/lib/account-routing.module.ts","ng://@abp/ng.account/lib/components/change-password/change-password.component.ts","ng://@abp/ng.account/lib/components/personal-settings/personal-settings.component.ts","ng://@abp/ng.account/lib/components/tenant-box/tenant-box.component.ts","ng://@abp/ng.account/lib/tokens/options.token.ts","ng://@abp/ng.account/lib/components/auth-wrapper/auth-wrapper.component.ts","ng://@abp/ng.account/lib/account.module.ts","ng://@abp/ng.account/lib/constants/routes.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__metadata","metadataKey","metadataValue","Reflect","metadata","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","maxLength","forms","Validators","required","minLength","LoginComponent","fb","oauthService","store","toasterService","options","configure","selectSnapshot","ConfigState","getOne","oAuthConfig","loadDiscoveryDocument","form","group","username","password","remember","onSubmit","_this","invalid","inProgress","tenant","SessionState","getTenant","from","fetchTokenUsingPasswordFlow","get","HttpHeaders","id","__tenant","pipe","switchMap","dispatch","GetAppConfiguration","tap","redirectUrl","snq","window","history","state","Navigate","catchError","err","error_description","message","life","throwError","finalize","subscribe","Component","args","selector","template","FormBuilder","OAuthService","Store","ToasterService","Optional","type","Inject","ManageProfileComponent","selectedTab","animations","trigger","transition","useAnimation","fadeIn","AccountService","rest","findTenant","tenantName","request","method","url","register","body","skipHandleError","Injectable","providedIn","RestService","email","RegisterComponent","accountService","ngOnInit","passwordRules","getSettings","passwordRulesArr","requiredLength","toLowerCase","Number","isInteger","validatePassword","newUser","userName","emailAddress","appName","take","routes","path","pathMatch","redirectTo","component","DynamicLayoutComponent","children","AccountRoutingModule","NgModule","imports","RouterModule","forChild","exports","PASSWORD_FIELDS","ChangePasswordComponent","mapErrorsFn","errors","groupErrors","control","indexOf","name","concat","filter","_a","key","newPassword","validators","repeatNewPassword","comparePasswords","ChangePassword","currentPassword","reset","success","PersonalSettingsComponent","buildForm","GetProfile","withLatestFrom","profile$","profile","surname","phoneNumber","submit","UpdateProfile","decorators","target","desc","d","c","getOwnPropertyDescriptor","decorate","defineProperty","tslib_1.__decorate","Select","ProfileState","getProfile","Observable","TenantBoxComponent","onSwitch","isModalVisible","save","tenantId","messageLocalizationParams","SetTenant","optionsFactory","ACCOUNT_OPTIONS","InjectionToken","AuthWrapperComponent","Input","AccountModule","declarations","CoreModule","ThemeSharedModule","TableModule","NgbDropdownModule","NgxValidateCoreModule","invisible","layout","order","provide","useValue","useFactory","deps"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { GetAppConfiguration, ConfigState, SessionState } from '@abp/ng.core';\nimport { Component, Inject, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Navigate } from '@ngxs/router-plugin';\nimport { Store } from '@ngxs/store';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { from, throwError } from 'rxjs';\nimport { Options } from '../../models/options';\nimport { ToasterService } from '@abp/ng.theme.shared';\nimport { catchError, finalize, switchMap, tap } from 'rxjs/operators';\nimport snq from 'snq';\nimport { HttpHeaders } from '@angular/common/http';\n\nconst { maxLength, minLength, required } = Validators;\n\n@Component({\n  selector: 'abp-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private oauthService: OAuthService,\n    private store: Store,\n    private toasterService: ToasterService,\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: Options,\n  ) {\n    this.oauthService.configure(this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig);\n    this.oauthService.loadDiscoveryDocument();\n\n    this.form = this.fb.group({\n      username: ['', [required, maxLength(255)]],\n      password: ['', [required, maxLength(32)]],\n      remember: [false],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n    // this.oauthService.setStorage(this.form.value.remember ? localStorage : sessionStorage);\n\n    this.inProgress = true;\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\n    from(\n      this.oauthService.fetchTokenUsingPasswordFlow(\n        this.form.get('username').value,\n        this.form.get('password').value,\n        new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\n      ),\n    )\n      .pipe(\n        switchMap(() => this.store.dispatch(new GetAppConfiguration())),\n        tap(() => {\n          const redirectUrl = snq(() => window.history.state).redirectUrl || (this.options || {}).redirectUrl || '/';\n          this.store.dispatch(new Navigate([redirectUrl]));\n        }),\n        catchError(err => {\n          this.toasterService.error(\n            snq(() => err.error.error_description) ||\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\n            'Error',\n            { life: 7000 },\n          );\n          return throwError(err);\n        }),\n        finalize(() => (this.inProgress = false)),\n      )\n      .subscribe();\n  }\n}\n","import { fadeIn } from '@abp/ng.theme.shared';\nimport { transition, trigger, useAnimation } from '@angular/animations';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'abp-manage-profile',\n  templateUrl: './manage-profile.component.html',\n  animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],\n})\nexport class ManageProfileComponent {\n  selectedTab = 0;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService, Rest } from '@abp/ng.core';\nimport { RegisterResponse, RegisterRequest, TenantIdResponse } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  constructor(private rest: RestService) {}\n\n  findTenant(tenantName: string): Observable<TenantIdResponse> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/abp/multi-tenancy/tenants/by-name/${tenantName}`,\n    };\n\n    return this.rest.request<null, TenantIdResponse>(request);\n  }\n\n  register(body: RegisterRequest): Observable<RegisterResponse> {\n    const request: Rest.Request<RegisterRequest> = {\n      method: 'POST',\n      url: '/api/account/register',\n      body,\n    };\n\n    return this.rest.request<RegisterRequest, RegisterResponse>(request, { skipHandleError: true });\n  }\n}\n","import { ConfigState, GetAppConfiguration, ABP, SessionState } from '@abp/ng.core';\nimport { ToasterService } from '@abp/ng.theme.shared';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Navigate } from '@ngxs/router-plugin';\nimport { Store } from '@ngxs/store';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { from, throwError } from 'rxjs';\nimport { catchError, finalize, switchMap, take, tap } from 'rxjs/operators';\nimport snq from 'snq';\nimport { RegisterRequest } from '../../models';\nimport { AccountService } from '../../services/account.service';\nimport { PasswordRules, validatePassword } from '@ngx-validate/core';\nimport { HttpHeaders } from '@angular/common/http';\nconst { maxLength, minLength, required, email } = Validators;\n\n@Component({\n  selector: 'abp-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private accountService: AccountService,\n    private oauthService: OAuthService,\n    private store: Store,\n    private toasterService: ToasterService,\n  ) {\n    this.oauthService.configure(\n      this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig,\n    );\n    this.oauthService.loadDiscoveryDocument();\n  }\n\n  ngOnInit() {\n    const passwordRules: ABP.Dictionary<string> = this.store.selectSnapshot(\n      ConfigState.getSettings('Identity.Password'),\n    );\n    const passwordRulesArr = [] as PasswordRules;\n    let requiredLength = 1;\n\n    if ((passwordRules['Abp.Identity.Password.RequireDigit'] || '').toLowerCase() === 'true') {\n      passwordRulesArr.push('number');\n    }\n\n    if ((passwordRules['Abp.Identity.Password.RequireLowercase'] || '').toLowerCase() === 'true') {\n      passwordRulesArr.push('small');\n    }\n\n    if ((passwordRules['Abp.Identity.Password.RequireUppercase'] || '').toLowerCase() === 'true') {\n      passwordRulesArr.push('capital');\n    }\n\n    if (+(passwordRules['Abp.Identity.Password.RequiredUniqueChars'] || 0) > 0) {\n      passwordRulesArr.push('special');\n    }\n\n    if (Number.isInteger(+passwordRules['Abp.Identity.Password.RequiredLength'])) {\n      requiredLength = +passwordRules['Abp.Identity.Password.RequiredLength'];\n    }\n\n    this.form = this.fb.group({\n      username: ['', [required, maxLength(255)]],\n      password: [\n        '',\n        [required, validatePassword(passwordRulesArr), minLength(requiredLength), maxLength(32)],\n      ],\n      email: ['', [required, email]],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n\n    this.inProgress = true;\n\n    const newUser = {\n      userName: this.form.get('username').value,\n      password: this.form.get('password').value,\n      emailAddress: this.form.get('email').value,\n      appName: 'Angular',\n    } as RegisterRequest;\n\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\n\n    this.accountService\n      .register(newUser)\n      .pipe(\n        switchMap(() =>\n          from(\n            this.oauthService.fetchTokenUsingPasswordFlow(\n              newUser.userName,\n              newUser.password,\n              new HttpHeaders({\n                ...(tenant && tenant.id && { __tenant: tenant.id }),\n              }),\n            ),\n          ),\n        ),\n        switchMap(() => this.store.dispatch(new GetAppConfiguration())),\n        tap(() => this.store.dispatch(new Navigate(['/']))),\n        take(1),\n        catchError(err => {\n          this.toasterService.error(\n            snq(() => err.error.error_description) ||\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\n            'Error',\n            { life: 7000 },\n          );\n          return throwError(err);\n        }),\n        finalize(() => (this.inProgress = false)),\n      )\n      .subscribe();\n  }\n}\n","import { DynamicLayoutComponent } from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'register', component: RegisterComponent },\n      {\n        path: 'manage-profile',\n        component: ManageProfileComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountRoutingModule {}\n","import { ChangePassword, ConfigState, ABP } from '@abp/ng.core';\nimport { ToasterService } from '@abp/ng.theme.shared';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { comparePasswords, Validation, PasswordRules, validatePassword } from '@ngx-validate/core';\nimport { Store } from '@ngxs/store';\nimport snq from 'snq';\nimport { finalize } from 'rxjs/operators';\n\nconst { minLength, required, maxLength } = Validators;\n\nconst PASSWORD_FIELDS = ['newPassword', 'repeatNewPassword'];\n\n@Component({\n  selector: 'abp-change-password-form',\n  templateUrl: './change-password.component.html',\n})\nexport class ChangePasswordComponent implements OnInit {\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  mapErrorsFn: Validation.MapErrorsFn = (errors, groupErrors, control) => {\n    if (PASSWORD_FIELDS.indexOf(control.name) < 0) return errors;\n\n    return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\n  };\n\n  constructor(private fb: FormBuilder, private store: Store, private toasterService: ToasterService) {}\n\n  ngOnInit(): void {\n    const passwordRules: ABP.Dictionary<string> = this.store.selectSnapshot(\n      ConfigState.getSettings('Identity.Password'),\n    );\n    const passwordRulesArr = [] as PasswordRules;\n    let requiredLength = 1;\n\n    if ((passwordRules['Abp.Identity.Password.RequireDigit'] || '').toLowerCase() === 'true') {\n      passwordRulesArr.push('number');\n    }\n\n    if ((passwordRules['Abp.Identity.Password.RequireLowercase'] || '').toLowerCase() === 'true') {\n      passwordRulesArr.push('small');\n    }\n\n    if ((passwordRules['Abp.Identity.Password.RequireUppercase'] || '').toLowerCase() === 'true') {\n      passwordRulesArr.push('capital');\n    }\n\n    if (+(passwordRules['Abp.Identity.Password.RequiredUniqueChars'] || 0) > 0) {\n      passwordRulesArr.push('special');\n    }\n\n    if (Number.isInteger(+passwordRules['Abp.Identity.Password.RequiredLength'])) {\n      requiredLength = +passwordRules['Abp.Identity.Password.RequiredLength'];\n    }\n\n    this.form = this.fb.group(\n      {\n        password: ['', required],\n        newPassword: [\n          '',\n          {\n            validators: [required, validatePassword(passwordRulesArr), minLength(requiredLength), maxLength(32)],\n          },\n        ],\n        repeatNewPassword: [\n          '',\n          { validators: [required, validatePassword(passwordRulesArr), minLength(requiredLength), maxLength(32)] },\n        ],\n      },\n      {\n        validators: [comparePasswords(PASSWORD_FIELDS)],\n      },\n    );\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n    this.inProgress = true;\n    this.store\n      .dispatch(\n        new ChangePassword({\n          currentPassword: this.form.get('password').value,\n          newPassword: this.form.get('newPassword').value,\n        }),\n      )\n      .pipe(finalize(() => (this.inProgress = false)))\n      .subscribe({\n        next: () => {\n          this.form.reset();\n          this.toasterService.success('AbpAccount::PasswordChangedMessage', 'Success', { life: 5000 });\n        },\n        error: err => {\n          this.toasterService.error(snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'), 'Error', {\n            life: 7000,\n          });\n        },\n      });\n  }\n}\n","import { GetProfile, Profile, ProfileState, UpdateProfile } from '@abp/ng.core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { take, withLatestFrom, finalize } from 'rxjs/operators';\nimport { ToasterService } from '@abp/ng.theme.shared';\n\nconst { maxLength, required, email } = Validators;\n\n@Component({\n  selector: 'abp-personal-settings-form',\n  templateUrl: './personal-settings.component.html',\n})\nexport class PersonalSettingsComponent implements OnInit {\n  @Select(ProfileState.getProfile)\n  profile$: Observable<Profile.Response>;\n\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  constructor(private fb: FormBuilder, private store: Store, private toasterService: ToasterService) {}\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.store\n      .dispatch(new GetProfile())\n      .pipe(\n        withLatestFrom(this.profile$),\n        take(1),\n      )\n      .subscribe(([, profile]) => {\n        this.form = this.fb.group({\n          userName: [profile.userName, [required, maxLength(256)]],\n          email: [profile.email, [required, email, maxLength(256)]],\n          name: [profile.name || '', [maxLength(64)]],\n          surname: [profile.surname || '', [maxLength(64)]],\n          phoneNumber: [profile.phoneNumber || '', [maxLength(16)]],\n        });\n      });\n  }\n\n  submit() {\n    if (this.form.invalid) return;\n    this.inProgress = true;\n    this.store\n      .dispatch(new UpdateProfile(this.form.value))\n      .pipe(finalize(() => (this.inProgress = false)))\n      .subscribe(() => {\n        this.toasterService.success('AbpAccount::PersonalSettingsSaved', 'Success', { life: 5000 });\n      });\n  }\n}\n","import { ABP, SetTenant, SessionState } from '@abp/ng.core';\nimport { ToasterService } from '@abp/ng.theme.shared';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { throwError } from 'rxjs';\nimport { catchError, take, finalize } from 'rxjs/operators';\nimport snq from 'snq';\nimport { AccountService } from '../../services/account.service';\n\n@Component({\n  selector: 'abp-tenant-box',\n  templateUrl: './tenant-box.component.html',\n})\nexport class TenantBoxComponent implements OnInit {\n  tenant = {} as ABP.BasicItem;\n\n  tenantName: string;\n\n  isModalVisible: boolean;\n\n  inProgress: boolean;\n\n  constructor(private store: Store, private toasterService: ToasterService, private accountService: AccountService) {}\n\n  ngOnInit() {\n    this.tenant = this.store.selectSnapshot(SessionState.getTenant) || ({} as ABP.BasicItem);\n    this.tenantName = this.tenant.name || '';\n  }\n\n  onSwitch() {\n    this.isModalVisible = true;\n  }\n\n  save() {\n    if (this.tenant.name && !this.inProgress) {\n      this.inProgress = true;\n      this.accountService\n        .findTenant(this.tenant.name)\n        .pipe(\n          finalize(() => (this.inProgress = false)),\n          take(1),\n          catchError(err => {\n            this.toasterService.error(\n              snq(() => err.error.error_description, 'AbpUi::DefaultErrorMessage'),\n              'AbpUi::Error',\n            );\n            return throwError(err);\n          }),\n        )\n        .subscribe(({ success, tenantId }) => {\n          if (success) {\n            this.tenant = {\n              id: tenantId,\n              name: this.tenant.name,\n            };\n            this.tenantName = this.tenant.name;\n            this.isModalVisible = false;\n          } else {\n            this.toasterService.error('AbpUiMultiTenancy::GivenTenantIsNotAvailable', 'AbpUi::Error', {\n              messageLocalizationParams: [this.tenant.name],\n            });\n            this.tenant = {} as ABP.BasicItem;\n          }\n          this.store.dispatch(new SetTenant(success ? this.tenant : null));\n        });\n    } else {\n      this.store.dispatch(new SetTenant(null));\n      this.tenantName = null;\n      this.isModalVisible = false;\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Options } from '../models/options';\n\nexport function optionsFactory(options: Options) {\n  return {\n    redirectUrl: '/',\n    ...options,\n  };\n}\n\nexport const ACCOUNT_OPTIONS = new InjectionToken('ACCOUNT_OPTIONS');\n","import { Component, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'abp-auth-wrapper',\n  templateUrl: './auth-wrapper.component.html',\n})\nexport class AuthWrapperComponent {\n  @Input()\n  mainContentRef: TemplateRef<any>;\n\n  @Input()\n  cancelContentRef: TemplateRef<any>;\n}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule, Provider } from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\nimport { TableModule } from 'primeng/table';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\nimport { PersonalSettingsComponent } from './components/personal-settings/personal-settings.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { TenantBoxComponent } from './components/tenant-box/tenant-box.component';\nimport { Options } from './models/options';\nimport { ACCOUNT_OPTIONS, optionsFactory } from './tokens/options.token';\nimport { AuthWrapperComponent } from './components/auth-wrapper/auth-wrapper.component';\n\n@NgModule({\n  declarations: [\n    AuthWrapperComponent,\n    LoginComponent,\n    RegisterComponent,\n    TenantBoxComponent,\n    ChangePasswordComponent,\n    ManageProfileComponent,\n    PersonalSettingsComponent,\n  ],\n  imports: [CoreModule, AccountRoutingModule, ThemeSharedModule, TableModule, NgbDropdownModule, NgxValidateCoreModule],\n  exports: [],\n})\nexport class AccountModule {}\n\n/**\n *\n * @deprecated since version 0.9\n */\nexport function AccountProviders(options = {} as Options): Provider[] {\n  return [\n    { provide: ACCOUNT_OPTIONS, useValue: options },\n    {\n      provide: 'ACCOUNT_OPTIONS',\n      useFactory: optionsFactory,\n      deps: [ACCOUNT_OPTIONS],\n    },\n  ];\n}\n","import { ABP, eLayoutType } from '@abp/ng.core';\n\n/**\n *\n * @deprecated since version 0.9\n */\nexport const ACCOUNT_ROUTES = {\n  routes: [\n    {\n      name: 'Account',\n      path: 'account',\n      invisible: true,\n      layout: eLayoutType.application,\n      children: [{ path: 'login', name: 'Login', order: 1 }, { path: 'register', name: 'Register', order: 2 }],\n    },\n  ] as ABP.FullRoute[],\n};\n"]}