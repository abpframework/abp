{"version":3,"file":"abp-ng.account.js","sources":["ng://@abp/ng.account/lib/components/login/login.component.ts","ng://@abp/ng.account/lib/components/manage-profile/manage-profile.component.ts","ng://@abp/ng.account/lib/services/account.service.ts","ng://@abp/ng.account/lib/components/register/register.component.ts","ng://@abp/ng.account/lib/account-routing.module.ts","ng://@abp/ng.account/lib/components/change-password/change-password.component.ts","ng://@abp/ng.account/lib/components/personal-settings/personal-settings.component.ts","ng://@abp/ng.account/lib/components/tenant-box/tenant-box.component.ts","ng://@abp/ng.account/lib/tokens/options.token.ts","ng://@abp/ng.account/lib/components/auth-wrapper/auth-wrapper.component.ts","ng://@abp/ng.account/lib/account.module.ts","ng://@abp/ng.account/lib/constants/routes.ts","ng://@abp/ng.account/lib/models/options.ts","ng://@abp/ng.account/lib/models/user.ts","ng://@abp/ng.account/lib/models/tenant.ts"],"sourcesContent":["import { GetAppConfiguration, ConfigState } from '@abp/ng.core';\nimport { Component, Inject, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Navigate } from '@ngxs/router-plugin';\nimport { Store } from '@ngxs/store';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { from, throwError } from 'rxjs';\nimport { Options } from '../../models/options';\nimport { ToasterService } from '@abp/ng.theme.shared';\nimport { catchError, finalize, switchMap, tap } from 'rxjs/operators';\nimport snq from 'snq';\n\nconst { maxLength, minLength, required } = Validators;\n\n@Component({\n  selector: 'abp-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private oauthService: OAuthService,\n    private store: Store,\n    private toasterService: ToasterService,\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: Options,\n  ) {\n    this.oauthService.configure(this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig);\n    this.oauthService.loadDiscoveryDocument();\n\n    this.form = this.fb.group({\n      username: ['', [required, maxLength(255)]],\n      password: ['', [required, maxLength(32)]],\n      remember: [false],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n    // this.oauthService.setStorage(this.form.value.remember ? localStorage : sessionStorage);\n\n    this.inProgress = true;\n    from(\n      this.oauthService.fetchTokenUsingPasswordFlow(this.form.get('username').value, this.form.get('password').value),\n    )\n      .pipe(\n        switchMap(() => this.store.dispatch(new GetAppConfiguration())),\n        tap(() => {\n          const redirectUrl = snq(() => window.history.state).redirectUrl || (this.options || {}).redirectUrl || '/';\n          this.store.dispatch(new Navigate([redirectUrl]));\n        }),\n        catchError(err => {\n          this.toasterService.error(\n            snq(() => err.error.error_description) ||\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\n            'Error',\n            { life: 7000 },\n          );\n          return throwError(err);\n        }),\n        finalize(() => (this.inProgress = false)),\n      )\n      .subscribe();\n  }\n}\n","import { fadeIn } from '@abp/ng.theme.shared';\nimport { transition, trigger, useAnimation } from '@angular/animations';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'abp-manage-profile',\n  templateUrl: './manage-profile.component.html',\n  animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],\n})\nexport class ManageProfileComponent {\n  selectedTab = 0;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService, Rest } from '@abp/ng.core';\nimport { RegisterResponse, RegisterRequest, TenantIdResponse } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  constructor(private rest: RestService) {}\n\n  findTenant(tenantName: string): Observable<TenantIdResponse> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/abp/multi-tenancy/tenants/by-name/${tenantName}`,\n    };\n\n    return this.rest.request<null, TenantIdResponse>(request);\n  }\n\n  register(body: RegisterRequest): Observable<RegisterResponse> {\n    const request: Rest.Request<RegisterRequest> = {\n      method: 'POST',\n      url: '/api/account/register',\n      body,\n    };\n\n    return this.rest.request<RegisterRequest, RegisterResponse>(request, { skipHandleError: true });\n  }\n}\n","import { ConfigState, GetAppConfiguration } from '@abp/ng.core';\nimport { ToasterService } from '@abp/ng.theme.shared';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Navigate } from '@ngxs/router-plugin';\nimport { Store } from '@ngxs/store';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { from, throwError } from 'rxjs';\nimport { catchError, finalize, switchMap, take, tap } from 'rxjs/operators';\nimport snq from 'snq';\nimport { RegisterRequest } from '../../models';\nimport { AccountService } from '../../services/account.service';\nconst { maxLength, minLength, required, email } = Validators;\n\n@Component({\n  selector: 'abp-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent {\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private accountService: AccountService,\n    private oauthService: OAuthService,\n    private store: Store,\n    private toasterService: ToasterService,\n  ) {\n    this.oauthService.configure(this.store.selectSnapshot(ConfigState.getOne('environment')).oAuthConfig);\n    this.oauthService.loadDiscoveryDocument();\n\n    this.form = this.fb.group({\n      username: ['', [required, maxLength(255)]],\n      password: ['', [required, maxLength(32)]],\n      email: ['', [required, email]],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n\n    this.inProgress = true;\n\n    const newUser = {\n      userName: this.form.get('username').value,\n      password: this.form.get('password').value,\n      emailAddress: this.form.get('email').value,\n      appName: 'Angular',\n    } as RegisterRequest;\n\n    this.accountService\n      .register(newUser)\n      .pipe(\n        switchMap(() => from(this.oauthService.fetchTokenUsingPasswordFlow(newUser.userName, newUser.password))),\n        switchMap(() => this.store.dispatch(new GetAppConfiguration())),\n        tap(() => this.store.dispatch(new Navigate(['/']))),\n        take(1),\n        catchError(err => {\n          this.toasterService.error(\n            snq(() => err.error.error_description) ||\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\n            'Error',\n            { life: 7000 },\n          );\n          return throwError(err);\n        }),\n        finalize(() => (this.inProgress = false)),\n      )\n      .subscribe();\n  }\n}\n","import { DynamicLayoutComponent } from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'register', component: RegisterComponent },\n      {\n        path: 'manage-profile',\n        component: ManageProfileComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountRoutingModule {}\n","import { ChangePassword } from '@abp/ng.core';\nimport { ToasterService } from '@abp/ng.theme.shared';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { comparePasswords, Validation } from '@ngx-validate/core';\nimport { Store } from '@ngxs/store';\nimport snq from 'snq';\nimport { finalize } from 'rxjs/operators';\n\nconst { minLength, required } = Validators;\n\nconst PASSWORD_FIELDS = ['newPassword', 'repeatNewPassword'];\n\n@Component({\n  selector: 'abp-change-password-form',\n  templateUrl: './change-password.component.html',\n})\nexport class ChangePasswordComponent implements OnInit {\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  mapErrorsFn: Validation.MapErrorsFn = (errors, groupErrors, control) => {\n    if (PASSWORD_FIELDS.indexOf(control.name) < 0) return errors;\n\n    return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\n  };\n\n  constructor(private fb: FormBuilder, private store: Store, private toasterService: ToasterService) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group(\n      {\n        password: ['', required],\n        newPassword: ['', required],\n        repeatNewPassword: ['', required],\n      },\n      {\n        validators: [comparePasswords(PASSWORD_FIELDS)],\n      },\n    );\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n    this.inProgress = true;\n    this.store\n      .dispatch(\n        new ChangePassword({\n          currentPassword: this.form.get('password').value,\n          newPassword: this.form.get('newPassword').value,\n        }),\n      )\n      .pipe(finalize(() => (this.inProgress = false)))\n      .subscribe({\n        next: () => {\n          this.form.reset();\n          this.toasterService.success('AbpAccount::PasswordChangedMessage', 'Success', { life: 5000 });\n        },\n        error: err => {\n          this.toasterService.error(snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'), 'Error', {\n            life: 7000,\n          });\n        },\n      });\n  }\n}\n","import { GetProfile, Profile, ProfileState, UpdateProfile } from '@abp/ng.core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { take, withLatestFrom, finalize } from 'rxjs/operators';\nimport { ToasterService } from '@abp/ng.theme.shared';\n\nconst { maxLength, required, email } = Validators;\n\n@Component({\n  selector: 'abp-personal-settings-form',\n  templateUrl: './personal-settings.component.html',\n})\nexport class PersonalSettingsComponent implements OnInit {\n  @Select(ProfileState.getProfile)\n  profile$: Observable<Profile.Response>;\n\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  constructor(private fb: FormBuilder, private store: Store, private toasterService: ToasterService) {}\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.store\n      .dispatch(new GetProfile())\n      .pipe(\n        withLatestFrom(this.profile$),\n        take(1),\n      )\n      .subscribe(([, profile]) => {\n        this.form = this.fb.group({\n          userName: [profile.userName, [required, maxLength(256)]],\n          email: [profile.email, [required, email, maxLength(256)]],\n          name: [profile.name || '', [maxLength(64)]],\n          surname: [profile.surname || '', [maxLength(64)]],\n          phoneNumber: [profile.phoneNumber || '', [maxLength(16)]],\n        });\n      });\n  }\n\n  submit() {\n    if (this.form.invalid) return;\n    this.inProgress = true;\n    this.store\n      .dispatch(new UpdateProfile(this.form.value))\n      .pipe(finalize(() => (this.inProgress = false)))\n      .subscribe(() => {\n        this.toasterService.success('AbpAccount::PersonalSettingsSaved', 'Success', { life: 5000 });\n      });\n  }\n}\n","import { ABP, SetTenant, SessionState } from '@abp/ng.core';\nimport { ToasterService } from '@abp/ng.theme.shared';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { throwError } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport snq from 'snq';\nimport { AccountService } from '../../services/account.service';\n\n@Component({\n  selector: 'abp-tenant-box',\n  templateUrl: './tenant-box.component.html'\n})\nexport class TenantBoxComponent implements OnInit {\n  constructor(\n    private store: Store,\n    private toasterService: ToasterService,\n    private accountService: AccountService\n  ) {}\n\n  tenant = {} as ABP.BasicItem;\n\n  tenantName: string;\n\n  isModalVisible: boolean;\n\n  ngOnInit() {\n    this.tenant =\n      this.store.selectSnapshot(SessionState.getTenant) ||\n      ({} as ABP.BasicItem);\n    this.tenantName = this.tenant.name || '';\n  }\n\n  onSwitch() {\n    this.isModalVisible = true;\n  }\n\n  save() {\n    if (this.tenant.name) {\n      this.accountService\n        .findTenant(this.tenant.name)\n        .pipe(\n          take(1),\n          catchError(err => {\n            this.toasterService.error(\n              snq(\n                () => err.error.error_description,\n                'AbpUi::DefaultErrorMessage'\n              ),\n              'AbpUi::Error'\n            );\n            return throwError(err);\n          })\n        )\n        .subscribe(({ success, tenantId }) => {\n          if (success) {\n            this.tenant = {\n              id: tenantId,\n              name: this.tenant.name\n            };\n            this.tenantName = this.tenant.name;\n            this.isModalVisible = false;\n          } else {\n            this.toasterService.error(\n              'AbpUiMultiTenancy::GivenTenantIsNotAvailable',\n              'AbpUi::Error',\n              {\n                messageLocalizationParams: [this.tenant.name]\n              }\n            );\n            this.tenant = {} as ABP.BasicItem;\n          }\n          this.store.dispatch(new SetTenant(success ? this.tenant : null));\n        });\n    } else {\n      this.store.dispatch(new SetTenant(null));\n      this.tenantName = null;\n      this.isModalVisible = false;\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Options } from '../models/options';\n\nexport function optionsFactory(options: Options) {\n  return {\n    redirectUrl: '/',\n    ...options,\n  };\n}\n\nexport const ACCOUNT_OPTIONS = new InjectionToken('ACCOUNT_OPTIONS');\n","import { Component, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'abp-auth-wrapper',\n  templateUrl: './auth-wrapper.component.html',\n})\nexport class AuthWrapperComponent {\n  @Input()\n  mainContentRef: TemplateRef<any>;\n\n  @Input()\n  cancelContentRef: TemplateRef<any>;\n}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule, Provider } from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\nimport { TableModule } from 'primeng/table';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\nimport { PersonalSettingsComponent } from './components/personal-settings/personal-settings.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { TenantBoxComponent } from './components/tenant-box/tenant-box.component';\nimport { Options } from './models/options';\nimport { ACCOUNT_OPTIONS, optionsFactory } from './tokens/options.token';\nimport { AuthWrapperComponent } from './components/auth-wrapper/auth-wrapper.component';\n\n@NgModule({\n  declarations: [\n    AuthWrapperComponent,\n    LoginComponent,\n    RegisterComponent,\n    TenantBoxComponent,\n    ChangePasswordComponent,\n    ManageProfileComponent,\n    PersonalSettingsComponent,\n  ],\n  imports: [CoreModule, AccountRoutingModule, ThemeSharedModule, TableModule, NgbDropdownModule, NgxValidateCoreModule],\n  exports: [],\n})\nexport class AccountModule {}\n\n/**\n *\n * @deprecated since version 0.9\n */\nexport function AccountProviders(options = {} as Options): Provider[] {\n  return [\n    { provide: ACCOUNT_OPTIONS, useValue: options },\n    {\n      provide: 'ACCOUNT_OPTIONS',\n      useFactory: optionsFactory,\n      deps: [ACCOUNT_OPTIONS],\n    },\n  ];\n}\n","import { ABP, eLayoutType } from '@abp/ng.core';\n\n/**\n *\n * @deprecated since version 0.9\n */\nexport const ACCOUNT_ROUTES = {\n  routes: [\n    {\n      name: 'Account',\n      path: 'account',\n      invisible: true,\n      layout: eLayoutType.application,\n      children: [{ path: 'login', name: 'Login', order: 1 }, { path: 'register', name: 'Register', order: 2 }],\n    },\n  ] as ABP.FullRoute[],\n};\n","export interface Options {\n  redirectUrl?: string;\n}\n","export interface RegisterRequest {\n  userName: string;\n  emailAddress: string;\n  password: string;\n  appName?: string;\n}\n\nexport interface RegisterResponse {\n  tenantId: string;\n  userName: string;\n  name: string;\n  surname: string;\n  email: string;\n  emailConfirmed: boolean;\n  phoneNumber: string;\n  phoneNumberConfirmed: boolean;\n  twoFactorEnabled: boolean;\n  lockoutEnabled: boolean;\n  lockoutEnd: string;\n  concurrencyStamp: string;\n  isDeleted: boolean;\n  deleterId: string;\n  deletionTime: string;\n  lastModificationTime: string;\n  lastModifierId: string;\n  creationTime: string;\n  creatorId: string;\n  id: string;\n}\n","export interface TenantIdResponse {\n  success: boolean;\n  tenantId: string;\n}\n"],"names":["maxLength","minLength","required","email","tslib_1.__decorate"],"mappings":"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"}