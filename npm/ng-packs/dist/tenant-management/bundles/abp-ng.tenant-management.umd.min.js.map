{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.tenant-management/lib/actions/tenant-management.actions.ts","ng://@abp/ng.tenant-management/lib/services/tenant-management.service.ts","ng://@abp/ng.tenant-management/lib/states/tenant-management.state.ts","ng://@abp/ng.tenant-management/lib/components/tenants/tenants.component.ts","ng://@abp/ng.tenant-management/lib/tenant-management-routing.module.ts","ng://@abp/ng.tenant-management/lib/tenant-management.module.ts","ng://@abp/ng.tenant-management/lib/constants/routes.ts","ng://@abp/ng.tenant-management/lib/models/tenant-management.ts","ng://@abp/ng.tenant-management/lib/services/tenant-management-state.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","GetTenants","payload","type","GetTenantById","CreateTenant","UpdateTenant","DeleteTenant","TenantManagementService","rest","getTenant","params","request","method","url","getTenantById","id","deleteTenant","createTenant","body","updateTenant","getDefaultConnectionString","responseType","updateDefaultConnectionString","defaultConnectionString","deleteDefaultConnectionString","Injectable","args","providedIn","RestService","TenantManagementState","tenantManagementService","get","_a","result","items","getTenantsTotalCount","totalCount","_b","patchState","pipe","tap","getById","selectedItem","delete","dispatch","switchMap","add","update","_this","getState","tslib_1.__decorate","Action","Selector","State","name","defaults","TenantsComponent","confirmationService","tenantService","fb","store","selectedModalContent","visibleFeatures","pageQuery","loading","modalBusy","sortOrder","sortKey","defaultConnectionStringForm","value","ngOnInit","onSearch","filter","createTenantForm","tenantForm","group","selected","Validators","required","maxLength","createDefaultConnectionStringForm","useSharedDatabase","_useSharedDatabase","openModal","title","template","isModalVisible","onEditConnectionString","pluck","subscribe","fetchedConnectionString","connectionStringModalTemplate","onAddTenant","tenantModalTemplate","onEditTenant","save","saveTenant","saveConnectionString","connectionString","take","finalize","valid","warn","messageLocalizationParams","status","onPageChange","data","skipCount","first","maxResultCount","rows","Component","selector","ConfirmationService","FormBuilder","Store","ViewChild","static","Select","Observable","routes","path","redirectTo","pathMatch","component","DynamicLayoutComponent","canActivate","AuthGuard","PermissionGuard","requiredPolicy","children","TenantManagementRoutingModule","NgModule","imports","RouterModule","forChild","exports","TenantManagementModule","declarations","NgxsModule","forFeature","NgxValidateCoreModule","CoreModule","TableModule","ThemeSharedModule","NgbDropdownModule","FeatureManagementModule","TenantManagement","Item","AddRequest","UpdateRequest","DefaultConnectionStringRequest","TenantManagementStateService","getTenants","selectSnapshot","parentName","layout","iconClass","order"],"mappings":";;;;;;;;;;;;;;oFA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YAezB,SAASQ,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HC,EAAvHC,EAAId,UAAUC,OAAQc,EAAID,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOlB,OAAOsB,yBAAyBN,EAAQC,GAAOC,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAAST,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAId,EAAIW,EAAWR,OAAS,EAAGH,GAAK,EAAGA,KAASe,EAAIJ,EAAWX,MAAIiB,GAAKD,EAAI,EAAID,EAAEE,GAAKD,EAAI,EAAID,EAAEH,EAAQC,EAAKI,GAAKF,EAAEH,EAAQC,KAASI,GAChJ,OAAOD,EAAI,GAAKC,GAAKrB,OAAOyB,eAAeT,EAAQC,EAAKI,GAAIA,EAOzD,SAASK,EAAWC,EAAaC,GACpC,GAAuB,iBAAZL,SAAoD,mBAArBA,QAAQM,SAAyB,OAAON,QAAQM,SAASF,EAAaC,GC7DpH,IAAAE,EAAA,WAEE,SAAAA,EAAmBC,GAAAlB,KAAAkB,QAAAA,EACrB,OAFkBD,EAAAE,KAAO,gCAEzBF,EAHA,GAKA,IAAAG,EAAA,WAEE,SAAAA,EAAmBF,GAAAlB,KAAAkB,QAAAA,EACrB,OAFkBE,EAAAD,KAAO,sCAEzBC,EAHA,GAKA,IAAAC,EAAA,WAEE,SAAAA,EAAmBH,GAAAlB,KAAAkB,QAAAA,EACrB,OAFkBG,EAAAF,KAAO,mCAEzBE,EAHA,GAKA,IAAAC,EAAA,WAEE,SAAAA,EAAmBJ,GAAAlB,KAAAkB,QAAAA,EACrB,OAFkBI,EAAAH,KAAO,mCAEzBG,EAHA,GAKA,IAAAC,EAAA,WAEE,SAAAA,EAAmBL,GAAAlB,KAAAkB,QAAAA,EACrB,OAFkBK,EAAAJ,KAAO,mCAEzBI,EAHA,GCvBA,IAAAC,EAAA,WASE,SAAAA,EAAoBC,GAAAzB,KAAAyB,KAAAA,SAEpBD,EAAA5B,UAAA8B,UAAA,SAAUC,QAAA,IAAAA,IAAAA,EAAA,QACFC,EAA8B,CAClCC,OAAQ,MACRC,IAAK,6BACLH,OAAMA,GAGR,OAAO3B,KAAKyB,KAAKG,QAAyCA,IAG5DJ,EAAA5B,UAAAmC,cAAA,SAAcC,OACNJ,EAA8B,CAClCC,OAAQ,MACRC,IAAK,8BAA8BE,GAGrC,OAAOhC,KAAKyB,KAAKG,QAA6BA,IAGhDJ,EAAA5B,UAAAqC,aAAA,SAAaD,OACLJ,EAA8B,CAClCC,OAAQ,SACRC,IAAK,8BAA8BE,GAGrC,OAAOhC,KAAKyB,KAAKG,QAAoBA,IAGvCJ,EAAA5B,UAAAsC,aAAA,SAAaC,OACLP,EAAqD,CACzDC,OAAQ,OACRC,IAAK,6BACLK,KAAIA,GAGN,OAAOnC,KAAKyB,KAAKG,QAAoDA,IAGvEJ,EAAA5B,UAAAwC,aAAA,SAAaD,OACLL,EAAM,8BAA8BK,EAAKH,UACxCG,EAAKH,OAENJ,EAAwD,CAC5DC,OAAQ,MACRC,IAAGA,EACHK,KAAIA,GAGN,OAAOnC,KAAKyB,KAAKG,QAAoDA,IAGvEJ,EAAA5B,UAAAyC,2BAAA,SAA2BL,OAGnBJ,EAAyE,CAC7EC,OAAQ,MACRS,aAAY,OACZR,IALU,8BAA8BE,EAAE,8BAO5C,OAAOhC,KAAKyB,KAAKG,QAAiEA,IAGpFJ,EAAA5B,UAAA2C,8BAAA,SAA8BrB,OAGtBU,EAAyE,CAC7EC,OAAQ,MACRC,IAJU,8BAA8BZ,EAAQc,GAAE,6BAKlDL,OAAQ,CAAEa,wBAAyBtB,EAAQsB,0BAE7C,OAAOxC,KAAKyB,KAAKG,QAA8DA,IAGjFJ,EAAA5B,UAAA6C,8BAAA,SAA8BT,OAGtBJ,EAAyE,CAC7EC,OAAQ,SACRC,IAJU,8BAA8BE,EAAE,8BAM5C,OAAOhC,KAAKyB,KAAKG,QAA8DA,wBAtFlFc,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAJLC,EAAAA,iJAFT,oBC4BE,SAAAC,EAAoBC,GAAA/C,KAAA+C,wBAAAA,EAyCtB,OAlDSD,EAAAE,IAAP,SAAWC,GACT,OADWA,EAAAC,OACGC,OAAS,IAIlBL,EAAAM,qBAAP,SAA4BH,GAC1B,OAD4BA,EAAAC,OACdG,YAMhBP,EAAAlD,UAAAoD,IAAA,SAAIC,EAAsDK,OAApDC,EAAAN,EAAAM,WAAsDrC,EAAAoC,EAAApC,QAC1D,OAAOlB,KAAK+C,wBAAwBrB,UAAUR,GAASsC,KACrDC,EAAAA,KAAG,SAACP,GACF,OAAAK,EAAW,CACTL,OAAMA,SAOdJ,EAAAlD,UAAA8D,QAAA,SAAQT,EAAsDK,OAApDC,EAAAN,EAAAM,WAAsDrC,EAAAoC,EAAApC,QAC9D,OAAOlB,KAAK+C,wBAAwBhB,cAAcb,GAASsC,KACzDC,EAAAA,KAAG,SAACE,GACF,OAAAJ,EAAW,CACTI,aAAYA,SAOpBb,EAAAlD,UAAAgE,OAAA,SAAOX,EAAoDK,OAAlDO,EAAAZ,EAAAY,SAAoD3C,EAAAoC,EAAApC,QAC3D,OAAOlB,KAAK+C,wBAAwBd,aAAaf,GAASsC,KAAKM,EAAAA,WAAS,WAAO,OAAAD,EAAS,IAAI5C,QAI9F6B,EAAAlD,UAAAmE,IAAA,SAAId,EAAoDK,OAAlDO,EAAAZ,EAAAY,SAAoD3C,EAAAoC,EAAApC,QACxD,OAAOlB,KAAK+C,wBAAwBb,aAAahB,GAASsC,KAAKM,EAAAA,WAAS,WAAO,OAAAD,EAAS,IAAI5C,QAI9F6B,EAAAlD,UAAAoE,OAAA,SAAOf,EAA8DK,GADrE,IAAAW,EAAAjE,KACS6D,EAAAZ,EAAAY,SAAUK,EAAAjB,EAAAiB,SAAoDhD,EAAAoC,EAAApC,QACrE,OAAO2C,EAAS,IAAIzC,EAAcF,EAAQc,KAAKwB,KAC7CM,EAAAA,WAAS,WAAO,OAAAG,EAAKlB,wBAAwBX,aAAYlD,EAAA,GAAMgF,IAAWP,aAAiBzC,OAC3F4C,EAAAA,WAAS,WAAO,OAAAD,EAAS,IAAI5C,iDAtCYO,KAG7C2C,EAAAA,CADCC,EAAAA,OAAOnD,2DAC+DA,2DAWvEkD,EAAAA,CADCC,EAAAA,OAAOhD,2DACmEA,+DAW3E+C,EAAAA,CADCC,EAAAA,OAAO7C,2DACgEA,8DAKxE4C,EAAAA,CADCC,EAAAA,OAAO/C,2DAC6DA,2DAKrE8C,EAAAA,CADCC,EAAAA,OAAO9C,2DAC0EA,8DA5ClF6C,EAAAA,CADCE,EAAAA,iHAMDF,EAAAA,CADCE,EAAAA,mIANUvB,EAAqB7C,EAAA,CAJjCqE,EAAAA,MAA8B,CAC7BC,KAAM,wBACNC,SAAQ,CAAItB,OAAQ,GAAIS,aAAc,6BAaOnC,KAXlCsB,MCMb,IAAA2B,EAAA,WAqDE,SAAAA,EACUC,EACAC,EACAC,EACAC,GAHA7E,KAAA0E,oBAAAA,EACA1E,KAAA2E,cAAAA,EACA3E,KAAA4E,GAAAA,EACA5E,KAAA6E,MAAAA,EApCV7E,KAAA8E,qBAAoB,GAEpB9E,KAAA+E,iBAAkB,EAMlB/E,KAAAgF,UAAiC,GAEjChF,KAAAiF,SAAU,EAEVjF,KAAAkF,WAAY,EAEZlF,KAAAmF,UAAY,GAEZnF,KAAAoF,QAAU,GAoKZ,OAlKEjG,OAAAyB,eAAI6D,EAAA7E,UAAA,oBAAiB,KAArB,WACE,OAAOI,KAAKqF,4BAA4BrC,IAAI,qBAAqBsC,uCAGnEnG,OAAAyB,eAAI6D,EAAA7E,UAAA,mBAAgB,KAApB,WACE,OAAOI,KAAKqF,4BAA4BrC,IAAI,2BAA2BsC,uCAgBzEb,EAAA7E,UAAA2F,SAAA,WACEvF,KAAKgD,OAGPyB,EAAA7E,UAAA4F,SAAA,SAASF,GACPtF,KAAKgF,UAAUS,OAASH,EACxBtF,KAAKgD,OAGCyB,EAAA7E,UAAA8F,iBAAR,WACE1F,KAAK2F,WAAa3F,KAAK4E,GAAGgB,MAAM,CAC9BrB,KAAM,CAACvE,KAAK6F,SAAStB,MAAQ,GAAI,CAACuB,EAAAA,WAAWC,SAAUD,EAAAA,WAAWE,UAAU,UAIxEvB,EAAA7E,UAAAqG,kCAAR,WACEjG,KAAKqF,4BAA8BrF,KAAK4E,GAAGgB,MAAM,CAC/CM,kBAAmBlG,KAAKmG,mBACxB3D,wBAAyB,CAACxC,KAAKwC,yBAA2B,OAI9DiC,EAAA7E,UAAAwG,UAAA,SAAUC,EAAeC,EAA4BnF,GACnDnB,KAAK8E,qBAAuB,CAC1BuB,MAAKA,EACLC,SAAQA,EACRnF,KAAIA,GAGNnB,KAAKuG,gBAAiB,GAGxB9B,EAAA7E,UAAA4G,uBAAA,SAAuBxE,GAAvB,IAAAiC,EAAAjE,KACEA,KAAK6E,MACFhB,SAAS,IAAIzC,EAAcY,IAC3BwB,KACCiD,EAAAA,MAAM,wBAAyB,gBAC/B3C,EAAAA,WAAS,SAAC+B,GAER,OADA5B,EAAK4B,SAAWA,EACT5B,EAAKU,cAActC,2BAA2BL,OAGxD0E,WAAS,SAACC,GACT1C,EAAKkC,oBAAqBQ,EAC1B1C,EAAKzB,wBAA0BmE,GAAoD,GACnF1C,EAAKgC,oCACLhC,EAAKmC,UAAU,yCAA0CnC,EAAK2C,8BAA+B,mBAInGnC,EAAA7E,UAAAiH,YAAA,WACE7G,KAAK6F,SAAQ,GACb7F,KAAK0F,mBACL1F,KAAKoG,UAAU,iCAAkCpG,KAAK8G,oBAAqB,eAG7ErC,EAAA7E,UAAAmH,aAAA,SAAa/E,GAAb,IAAAiC,EAAAjE,KACEA,KAAK6E,MACFhB,SAAS,IAAIzC,EAAcY,IAC3BwB,KAAKiD,EAAAA,MAAM,wBAAyB,iBACpCC,WAAS,SAACb,GACT5B,EAAK4B,SAAWA,EAChB5B,EAAKyB,mBACLzB,EAAKmC,UAAU,4BAA6BnC,EAAK6C,oBAAqB,kBAI5ErC,EAAA7E,UAAAoH,KAAA,WACU,IAAA7F,EAAAnB,KAAA8E,qBAAA3D,KACHA,IACQ,eAATA,EAAuBnB,KAAKiH,aACd,gBAAT9F,GAAwBnB,KAAKkH,yBAGxCzC,EAAA7E,UAAAsH,qBAAA,WAAA,IAAAjD,EAAAjE,KACEA,KAAKkF,WAAY,EACblF,KAAKkG,oBAAuBlG,KAAKkG,oBAAsBlG,KAAKmH,iBAC9DnH,KAAK2E,cACFlC,8BAA8BzC,KAAK6F,SAAS7D,IAC5CwB,KACC4D,EAAAA,KAAK,GACLC,EAAAA,UAAQ,WAAO,OAACpD,EAAKiB,WAAY,MAElCwB,WAAS,WACRzC,EAAKsC,gBAAiB,KAG1BvG,KAAK2E,cACFpC,8BAA8B,CAAEP,GAAIhC,KAAK6F,SAAS7D,GAAIQ,wBAAyBxC,KAAKmH,mBACpF3D,KACC4D,EAAAA,KAAK,GACLC,EAAAA,UAAQ,WAAO,OAACpD,EAAKiB,WAAY,MAElCwB,WAAS,WACRzC,EAAKsC,gBAAiB,MAK9B9B,EAAA7E,UAAAqH,WAAA,WAAA,IAAAhD,EAAAjE,KACOA,KAAK2F,WAAW2B,QACrBtH,KAAKkF,WAAY,EAEjBlF,KAAK6E,MACFhB,SACC7D,KAAK6F,SAAS7D,GACV,IAAIV,EAAYpC,EAAA,GAAMc,KAAK2F,WAAWL,MAAK,CAAEtD,GAAIhC,KAAK6F,SAAS7D,MAC/D,IAAIX,EAAarB,KAAK2F,WAAWL,QAEtC9B,KAAK6D,EAAAA,UAAQ,WAAO,OAACpD,EAAKiB,WAAY,MACtCwB,WAAS,WACRzC,EAAKsC,gBAAiB,OAI5B9B,EAAA7E,UAAAgE,OAAA,SAAO5B,EAAYuC,GAAnB,IAAAN,EAAAjE,KACEA,KAAK0E,oBACF6C,KAAK,yDAA0D,kCAAmC,CACjGC,0BAA2B,CAACjD,KAE7BmC,WAAS,SAAEe,GACA,YAANA,GACFxD,EAAKY,MAAMhB,SAAS,IAAItC,EAAaS,QAK7CyC,EAAA7E,UAAA8H,aAAA,SAAaC,GACX3H,KAAKgF,UAAU4C,UAAYD,EAAKE,MAChC7H,KAAKgF,UAAU8C,eAAiBH,EAAKI,KAErC/H,KAAKgD,OAGPyB,EAAA7E,UAAAoD,IAAA,WAAA,IAAAiB,EAAAjE,KACEA,KAAKiF,SAAU,EACfjF,KAAK6E,MACFhB,SAAS,IAAI5C,EAAWjB,KAAKgF,YAC7BxB,KAAK6D,EAAAA,UAAQ,WAAO,OAACpD,EAAKgB,SAAU,MACpCyB,iCAvMNsB,EAAAA,UAASrF,KAAA,CAAC,CACTsF,SAAU,cACV3B,SAAA,+pNAxBO4B,EAAAA,2BAaA1G,SAXA2G,EAAAA,mBACQC,EAAAA,sDAkEdC,EAAAA,UAAS1F,KAAA,CAAC,sBAAuB,CAAE2F,QAAQ,2CAG3CD,EAAAA,UAAS1F,KAAA,CAAC,gCAAiC,CAAE2F,QAAQ,OA5CtDnE,EAAAA,CADCoE,EAAAA,OAAOzF,EAAsBE,qBACvBwF,EAAAA,yCAGPrE,EAAAA,CADCoE,EAAAA,OAAOzF,EAAsBM,sCACjBoF,EAAAA,+CAgMf/D,EAzMA,GCvBA,IAKMgE,EAAiB,CACrB,CAAEC,KAAM,GAAIC,WAAY,UAAWC,UAAW,QAC9C,CACEF,KAAM,UACNG,UAAWC,EAAAA,uBACXC,YAAa,CAACC,EAAAA,UAAWC,EAAAA,iBACzBtB,KAAM,CAAEuB,eAAgB,+BACxBC,SAAU,CAAC,CAAET,KAAM,GAAIG,UAAWpE,MAItC2E,EAAA,WAAA,SAAAA,KAI4C,2BAJ3CC,EAAAA,SAAQ1G,KAAA,CAAC,CACR2G,QAAS,CAACC,EAAAA,aAAaC,SAASf,IAChCgB,QAAS,CAACF,EAAAA,kBAEgCH,EAJ5C,GChBAM,EAAA,WAYA,SAAAA,KAaqC,2BAbpCL,EAAAA,SAAQ1G,KAAA,CAAC,CACRgH,aAAc,CAAClF,GACf6E,QAAS,CACPF,EACAQ,EAAAA,WAAWC,WAAW,CAAC/G,IACvBgH,EAAAA,sBACAC,EAAAA,WACAC,EAAAA,YACAC,EAAAA,kBACAC,EAAAA,kBACAC,EAAAA,6BAGiCT,EAzBrC,GCMA,ICJiBU,GAAjB,SAAiBA,GACf,SAAA9F,KAOA,SAAA+F,KAKA,SAAAC,KAIA,SAAAC,KAIA,SAAAC,4FArBF,CAAiBJ,IAAAA,EAAgB,KCFjC,IAAAK,EAAA,WAQE,SAAAA,EAAoB5F,GAAA7E,KAAA6E,MAAAA,SAEpB4F,EAAA7K,UAAA8K,WAAA,WACE,OAAO1K,KAAK6E,MAAM8F,eAAe7H,EAAsBE,MAGzDyH,EAAA7K,UAAAwD,qBAAA,WACE,OAAOpD,KAAK6E,MAAM8F,eAAe7H,EAAsBM,2CAX1DV,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAJLwF,EAAAA,qIADT,iGFMwC,CACtCK,OAAM,CACJ,CACElE,KAAM,6CACNmE,KAAM,oBACNkC,WAAY,uCACZC,OAAM,cACNC,UAAW,cACX3B,SAAU,CACR,CACET,KAAM,UACNnE,KAAM,+BACNwG,MAAO,EACP7B,eAAgB,0FDY1B,WACE,MAAO","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { TenantManagement } from '../models/tenant-management';\nimport { ABP } from '@abp/ng.core';\n\nexport class GetTenants {\n  static readonly type = '[TenantManagement] Get Tenant';\n  constructor(public payload?: ABP.PageQueryParams) {}\n}\n\nexport class GetTenantById {\n  static readonly type = '[TenantManagement] Get Tenant By Id';\n  constructor(public payload: string) {}\n}\n\nexport class CreateTenant {\n  static readonly type = '[TenantManagement] Create Tenant';\n  constructor(public payload: TenantManagement.AddRequest) {}\n}\n\nexport class UpdateTenant {\n  static readonly type = '[TenantManagement] Update Tenant';\n  constructor(public payload: TenantManagement.UpdateRequest) {}\n}\n\nexport class DeleteTenant {\n  static readonly type = '[TenantManagement] Delete Tenant';\n  constructor(public payload: string) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService, Rest, ABP } from '@abp/ng.core';\nimport { TenantManagement } from '../models/tenant-management';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TenantManagementService {\n  constructor(private rest: RestService) {}\n\n  getTenant(params = {} as ABP.PageQueryParams): Observable<TenantManagement.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/multi-tenancy/tenants',\n      params\n    };\n\n    return this.rest.request<null, TenantManagement.Response>(request);\n  }\n\n  getTenantById(id: string): Observable<ABP.BasicItem> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/multi-tenancy/tenants/${id}`\n    };\n\n    return this.rest.request<null, ABP.BasicItem>(request);\n  }\n\n  deleteTenant(id: string): Observable<null> {\n    const request: Rest.Request<null> = {\n      method: 'DELETE',\n      url: `/api/multi-tenancy/tenants/${id}`\n    };\n\n    return this.rest.request<null, null>(request);\n  }\n\n  createTenant(body: TenantManagement.AddRequest): Observable<ABP.BasicItem> {\n    const request: Rest.Request<TenantManagement.AddRequest> = {\n      method: 'POST',\n      url: '/api/multi-tenancy/tenants',\n      body\n    };\n\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\n  }\n\n  updateTenant(body: TenantManagement.UpdateRequest): Observable<ABP.BasicItem> {\n    const url = `/api/multi-tenancy/tenants/${body.id}`;\n    delete body.id;\n\n    const request: Rest.Request<TenantManagement.UpdateRequest> = {\n      method: 'PUT',\n      url,\n      body\n    };\n\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\n  }\n\n  getDefaultConnectionString(id: string): Observable<string> {\n    const url = `/api/multi-tenancy/tenants/${id}/default-connection-string`;\n\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\n      method: 'GET',\n      responseType: Rest.ResponseType.Text,\n      url\n    };\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, string>(request);\n  }\n\n  updateDefaultConnectionString(payload: TenantManagement.DefaultConnectionStringRequest): Observable<any> {\n    const url = `/api/multi-tenancy/tenants/${payload.id}/default-connection-string`;\n\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\n      method: 'PUT',\n      url,\n      params: { defaultConnectionString: payload.defaultConnectionString }\n    };\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request);\n  }\n\n  deleteDefaultConnectionString(id: string): Observable<string> {\n    const url = `/api/multi-tenancy/tenants/${id}/default-connection-string`;\n\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\n      method: 'DELETE',\n      url\n    };\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request);\n  }\n}\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { switchMap, tap } from 'rxjs/operators';\nimport {\n  CreateTenant,\n  DeleteTenant,\n  GetTenants,\n  GetTenantById,\n  UpdateTenant,\n} from '../actions/tenant-management.actions';\nimport { TenantManagement } from '../models/tenant-management';\nimport { TenantManagementService } from '../services/tenant-management.service';\nimport { ABP } from '@abp/ng.core';\n\n@State<TenantManagement.State>({\n  name: 'TenantManagementState',\n  defaults: { result: {}, selectedItem: {} } as TenantManagement.State,\n})\nexport class TenantManagementState {\n  @Selector()\n  static get({ result }: TenantManagement.State): ABP.BasicItem[] {\n    return result.items || [];\n  }\n\n  @Selector()\n  static getTenantsTotalCount({ result }: TenantManagement.State): number {\n    return result.totalCount;\n  }\n\n  constructor(private tenantManagementService: TenantManagementService) {}\n\n  @Action(GetTenants)\n  get({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenants) {\n    return this.tenantManagementService.getTenant(payload).pipe(\n      tap(result =>\n        patchState({\n          result,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetTenantById)\n  getById({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenantById) {\n    return this.tenantManagementService.getTenantById(payload).pipe(\n      tap(selectedItem =>\n        patchState({\n          selectedItem,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteTenant)\n  delete({ dispatch }: StateContext<TenantManagement.State>, { payload }: DeleteTenant) {\n    return this.tenantManagementService.deleteTenant(payload).pipe(switchMap(() => dispatch(new GetTenants())));\n  }\n\n  @Action(CreateTenant)\n  add({ dispatch }: StateContext<TenantManagement.State>, { payload }: CreateTenant) {\n    return this.tenantManagementService.createTenant(payload).pipe(switchMap(() => dispatch(new GetTenants())));\n  }\n\n  @Action(UpdateTenant)\n  update({ dispatch, getState }: StateContext<TenantManagement.State>, { payload }: UpdateTenant) {\n    return dispatch(new GetTenantById(payload.id)).pipe(\n      switchMap(() => this.tenantManagementService.updateTenant({ ...getState().selectedItem, ...payload })),\n      switchMap(() => dispatch(new GetTenants())),\n    );\n  }\n}\n","import { ABP } from '@abp/ng.core';\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\nimport {\n  CreateTenant,\n  DeleteTenant,\n  GetTenantById,\n  GetTenants,\n  UpdateTenant,\n} from '../../actions/tenant-management.actions';\nimport { TenantManagementService } from '../../services/tenant-management.service';\nimport { TenantManagementState } from '../../states/tenant-management.state';\n\ninterface SelectedModalContent {\n  type: string;\n  title: string;\n  template: TemplateRef<any>;\n}\n\n@Component({\n  selector: 'abp-tenants',\n  templateUrl: './tenants.component.html',\n})\nexport class TenantsComponent implements OnInit {\n  @Select(TenantManagementState.get)\n  data$: Observable<ABP.BasicItem[]>;\n\n  @Select(TenantManagementState.getTenantsTotalCount)\n  totalCount$: Observable<number>;\n\n  selected: ABP.BasicItem;\n\n  tenantForm: FormGroup;\n\n  defaultConnectionStringForm: FormGroup;\n\n  defaultConnectionString: string;\n\n  isModalVisible: boolean;\n\n  selectedModalContent = {} as SelectedModalContent;\n\n  visibleFeatures = false;\n\n  providerKey: string;\n\n  _useSharedDatabase: boolean;\n\n  pageQuery: ABP.PageQueryParams = {};\n\n  loading = false;\n\n  modalBusy = false;\n\n  sortOrder = '';\n\n  sortKey = '';\n\n  get useSharedDatabase(): boolean {\n    return this.defaultConnectionStringForm.get('useSharedDatabase').value;\n  }\n\n  get connectionString(): string {\n    return this.defaultConnectionStringForm.get('defaultConnectionString').value;\n  }\n\n  @ViewChild('tenantModalTemplate', { static: false })\n  tenantModalTemplate: TemplateRef<any>;\n\n  @ViewChild('connectionStringModalTemplate', { static: false })\n  connectionStringModalTemplate: TemplateRef<any>;\n\n  constructor(\n    private confirmationService: ConfirmationService,\n    private tenantService: TenantManagementService,\n    private fb: FormBuilder,\n    private store: Store,\n  ) {}\n\n  ngOnInit() {\n    this.get();\n  }\n\n  onSearch(value) {\n    this.pageQuery.filter = value;\n    this.get();\n  }\n\n  private createTenantForm() {\n    this.tenantForm = this.fb.group({\n      name: [this.selected.name || '', [Validators.required, Validators.maxLength(256)]],\n    });\n  }\n\n  private createDefaultConnectionStringForm() {\n    this.defaultConnectionStringForm = this.fb.group({\n      useSharedDatabase: this._useSharedDatabase,\n      defaultConnectionString: [this.defaultConnectionString || ''],\n    });\n  }\n\n  openModal(title: string, template: TemplateRef<any>, type: string) {\n    this.selectedModalContent = {\n      title,\n      template,\n      type,\n    };\n\n    this.isModalVisible = true;\n  }\n\n  onEditConnectionString(id: string) {\n    this.store\n      .dispatch(new GetTenantById(id))\n      .pipe(\n        pluck('TenantManagementState', 'selectedItem'),\n        switchMap(selected => {\n          this.selected = selected;\n          return this.tenantService.getDefaultConnectionString(id);\n        }),\n      )\n      .subscribe(fetchedConnectionString => {\n        this._useSharedDatabase = fetchedConnectionString ? false : true;\n        this.defaultConnectionString = fetchedConnectionString ? fetchedConnectionString : '';\n        this.createDefaultConnectionStringForm();\n        this.openModal('AbpTenantManagement::ConnectionStrings', this.connectionStringModalTemplate, 'saveConnStr');\n      });\n  }\n\n  onAddTenant() {\n    this.selected = {} as ABP.BasicItem;\n    this.createTenantForm();\n    this.openModal('AbpTenantManagement::NewTenant', this.tenantModalTemplate, 'saveTenant');\n  }\n\n  onEditTenant(id: string) {\n    this.store\n      .dispatch(new GetTenantById(id))\n      .pipe(pluck('TenantManagementState', 'selectedItem'))\n      .subscribe(selected => {\n        this.selected = selected;\n        this.createTenantForm();\n        this.openModal('AbpTenantManagement::Edit', this.tenantModalTemplate, 'saveTenant');\n      });\n  }\n\n  save() {\n    const { type } = this.selectedModalContent;\n    if (!type) return;\n    if (type === 'saveTenant') this.saveTenant();\n    else if (type === 'saveConnStr') this.saveConnectionString();\n  }\n\n  saveConnectionString() {\n    this.modalBusy = true;\n    if (this.useSharedDatabase || (!this.useSharedDatabase && !this.connectionString)) {\n      this.tenantService\n        .deleteDefaultConnectionString(this.selected.id)\n        .pipe(\n          take(1),\n          finalize(() => (this.modalBusy = false)),\n        )\n        .subscribe(() => {\n          this.isModalVisible = false;\n        });\n    } else {\n      this.tenantService\n        .updateDefaultConnectionString({ id: this.selected.id, defaultConnectionString: this.connectionString })\n        .pipe(\n          take(1),\n          finalize(() => (this.modalBusy = false)),\n        )\n        .subscribe(() => {\n          this.isModalVisible = false;\n        });\n    }\n  }\n\n  saveTenant() {\n    if (!this.tenantForm.valid) return;\n    this.modalBusy = true;\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateTenant({ ...this.tenantForm.value, id: this.selected.id })\n          : new CreateTenant(this.tenantForm.value),\n      )\n      .pipe(finalize(() => (this.modalBusy = false)))\n      .subscribe(() => {\n        this.isModalVisible = false;\n      });\n  }\n\n  delete(id: string, name: string) {\n    this.confirmationService\n      .warn('AbpTenantManagement::TenantDeletionConfirmationMessage', 'AbpTenantManagement::AreYouSure', {\n        messageLocalizationParams: [name],\n      })\n      .subscribe((status: Toaster.Status) => {\n        if (status === Toaster.Status.confirm) {\n          this.store.dispatch(new DeleteTenant(id));\n        }\n      });\n  }\n\n  onPageChange(data) {\n    this.pageQuery.skipCount = data.first;\n    this.pageQuery.maxResultCount = data.rows;\n\n    this.get();\n  }\n\n  get() {\n    this.loading = true;\n    this.store\n      .dispatch(new GetTenants(this.pageQuery))\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe();\n  }\n}\n","import { AuthGuard, DynamicLayoutComponent, PermissionGuard } from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TenantsComponent } from './components/tenants/tenants.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'tenants', pathMatch: 'full' },\n  {\n    path: 'tenants',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard],\n    data: { requiredPolicy: 'AbpTenantManagement.Tenants' },\n    children: [{ path: '', component: TenantsComponent }],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TenantManagementRoutingModule {}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule, Provider } from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxsModule } from '@ngxs/store';\nimport { TableModule } from 'primeng/table';\nimport { TenantsComponent } from './components/tenants/tenants.component';\nimport { TenantManagementState } from './states/tenant-management.state';\nimport { TenantManagementRoutingModule } from './tenant-management-routing.module';\nimport { FeatureManagementModule } from '@abp/ng.feature-management';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\n\n@NgModule({\n  declarations: [TenantsComponent],\n  imports: [\n    TenantManagementRoutingModule,\n    NgxsModule.forFeature([TenantManagementState]),\n    NgxValidateCoreModule,\n    CoreModule,\n    TableModule,\n    ThemeSharedModule,\n    NgbDropdownModule,\n    FeatureManagementModule,\n  ],\n})\nexport class TenantManagementModule {}\n\n/**\n *\n * @deprecated since version 0.9.0\n */\nexport function TenantManagementProviders(): Provider[] {\n  return [];\n}\n","import { ABP, eLayoutType } from '@abp/ng.core';\n\n/**\n *\n * @deprecated since version 0.9.0\n */\nexport const TENANT_MANAGEMENT_ROUTES = {\n  routes: [\n    {\n      name: 'AbpTenantManagement::Menu:TenantManagement',\n      path: 'tenant-management',\n      parentName: 'AbpUiNavigation::Menu:Administration',\n      layout: eLayoutType.application,\n      iconClass: 'fa fa-users',\n      children: [\n        {\n          path: 'tenants',\n          name: 'AbpTenantManagement::Tenants',\n          order: 1,\n          requiredPolicy: 'AbpTenantManagement.Tenants',\n        },\n      ],\n    },\n  ] as ABP.FullRoute[],\n};\n","import { ABP } from '@abp/ng.core';\n\nexport namespace TenantManagement {\n  export interface State {\n    result: Response;\n    selectedItem: Item;\n  }\n\n  export type Response = ABP.PagedResponse<Item>;\n\n  export interface Item {\n    id: string;\n    name: string;\n  }\n\n  export interface AddRequest {\n    name: string;\n  }\n\n  export interface UpdateRequest extends AddRequest {\n    id: string;\n  }\n\n  export interface DefaultConnectionStringRequest {\n    id: string;\n    defaultConnectionString: string;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { TenantManagementState } from '../states/tenant-management.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TenantManagementStateService {\n  constructor(private store: Store) {}\n\n  getTenants() {\n    return this.store.selectSnapshot(TenantManagementState.get);\n  }\n\n  getTenantsTotalCount() {\n    return this.store.selectSnapshot(TenantManagementState.getTenantsTotalCount);\n  }\n}\n"]}