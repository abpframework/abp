{"version":3,"file":"abp-ng.tenant-management.js","sources":["ng://@abp/ng.tenant-management/lib/actions/tenant-management.actions.ts","ng://@abp/ng.tenant-management/lib/services/tenant-management.service.ts","ng://@abp/ng.tenant-management/lib/states/tenant-management.state.ts","ng://@abp/ng.tenant-management/lib/components/tenants/tenants.component.ts","ng://@abp/ng.tenant-management/lib/tenant-management-routing.module.ts","ng://@abp/ng.tenant-management/lib/tenant-management.module.ts","ng://@abp/ng.tenant-management/lib/constants/routes.ts","ng://@abp/ng.tenant-management/lib/models/tenant-management.ts","ng://@abp/ng.tenant-management/lib/services/tenant-management-state.service.ts"],"sourcesContent":["import { TenantManagement } from '../models/tenant-management';\r\nimport { ABP } from '@abp/ng.core';\r\n\r\nexport class GetTenants {\r\n  static readonly type = '[TenantManagement] Get Tenant';\r\n  constructor(public payload?: ABP.PageQueryParams) {}\r\n}\r\n\r\nexport class GetTenantById {\r\n  static readonly type = '[TenantManagement] Get Tenant By Id';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CreateTenant {\r\n  static readonly type = '[TenantManagement] Create Tenant';\r\n  constructor(public payload: TenantManagement.AddRequest) {}\r\n}\r\n\r\nexport class UpdateTenant {\r\n  static readonly type = '[TenantManagement] Update Tenant';\r\n  constructor(public payload: TenantManagement.UpdateRequest) {}\r\n}\r\n\r\nexport class DeleteTenant {\r\n  static readonly type = '[TenantManagement] Delete Tenant';\r\n  constructor(public payload: string) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest, ABP } from '@abp/ng.core';\r\nimport { TenantManagement } from '../models/tenant-management';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TenantManagementService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  getTenant(params = {} as ABP.PageQueryParams): Observable<TenantManagement.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/multi-tenancy/tenants',\r\n      params\r\n    };\r\n\r\n    return this.rest.request<null, TenantManagement.Response>(request);\r\n  }\r\n\r\n  getTenantById(id: string): Observable<ABP.BasicItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/multi-tenancy/tenants/${id}`\r\n    };\r\n\r\n    return this.rest.request<null, ABP.BasicItem>(request);\r\n  }\r\n\r\n  deleteTenant(id: string): Observable<null> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'DELETE',\r\n      url: `/api/multi-tenancy/tenants/${id}`\r\n    };\r\n\r\n    return this.rest.request<null, null>(request);\r\n  }\r\n\r\n  createTenant(body: TenantManagement.AddRequest): Observable<ABP.BasicItem> {\r\n    const request: Rest.Request<TenantManagement.AddRequest> = {\r\n      method: 'POST',\r\n      url: '/api/multi-tenancy/tenants',\r\n      body\r\n    };\r\n\r\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\r\n  }\r\n\r\n  updateTenant(body: TenantManagement.UpdateRequest): Observable<ABP.BasicItem> {\r\n    const url = `/api/multi-tenancy/tenants/${body.id}`;\r\n    delete body.id;\r\n\r\n    const request: Rest.Request<TenantManagement.UpdateRequest> = {\r\n      method: 'PUT',\r\n      url,\r\n      body\r\n    };\r\n\r\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\r\n  }\r\n\r\n  getDefaultConnectionString(id: string): Observable<string> {\r\n    const url = `/api/multi-tenancy/tenants/${id}/default-connection-string`;\r\n\r\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\r\n      method: 'GET',\r\n      responseType: Rest.ResponseType.Text,\r\n      url\r\n    };\r\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, string>(request);\r\n  }\r\n\r\n  updateDefaultConnectionString(payload: TenantManagement.DefaultConnectionStringRequest): Observable<any> {\r\n    const url = `/api/multi-tenancy/tenants/${payload.id}/default-connection-string`;\r\n\r\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\r\n      method: 'PUT',\r\n      url,\r\n      params: { defaultConnectionString: payload.defaultConnectionString }\r\n    };\r\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request);\r\n  }\r\n\r\n  deleteDefaultConnectionString(id: string): Observable<string> {\r\n    const url = `/api/multi-tenancy/tenants/${id}/default-connection-string`;\r\n\r\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\r\n      method: 'DELETE',\r\n      url\r\n    };\r\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request);\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport {\r\n  CreateTenant,\r\n  DeleteTenant,\r\n  GetTenants,\r\n  GetTenantById,\r\n  UpdateTenant,\r\n} from '../actions/tenant-management.actions';\r\nimport { TenantManagement } from '../models/tenant-management';\r\nimport { TenantManagementService } from '../services/tenant-management.service';\r\nimport { ABP } from '@abp/ng.core';\r\n\r\n@State<TenantManagement.State>({\r\n  name: 'TenantManagementState',\r\n  defaults: { result: {}, selectedItem: {} } as TenantManagement.State,\r\n})\r\nexport class TenantManagementState {\r\n  @Selector()\r\n  static get({ result }: TenantManagement.State): ABP.BasicItem[] {\r\n    return result.items || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getTenantsTotalCount({ result }: TenantManagement.State): number {\r\n    return result.totalCount;\r\n  }\r\n\r\n  constructor(private tenantManagementService: TenantManagementService) {}\r\n\r\n  @Action(GetTenants)\r\n  get({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenants) {\r\n    return this.tenantManagementService.getTenant(payload).pipe(\r\n      tap(result =>\r\n        patchState({\r\n          result,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(GetTenantById)\r\n  getById({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenantById) {\r\n    return this.tenantManagementService.getTenantById(payload).pipe(\r\n      tap(selectedItem =>\r\n        patchState({\r\n          selectedItem,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(DeleteTenant)\r\n  delete({ dispatch }: StateContext<TenantManagement.State>, { payload }: DeleteTenant) {\r\n    return this.tenantManagementService.deleteTenant(payload).pipe(switchMap(() => dispatch(new GetTenants())));\r\n  }\r\n\r\n  @Action(CreateTenant)\r\n  add({ dispatch }: StateContext<TenantManagement.State>, { payload }: CreateTenant) {\r\n    return this.tenantManagementService.createTenant(payload).pipe(switchMap(() => dispatch(new GetTenants())));\r\n  }\r\n\r\n  @Action(UpdateTenant)\r\n  update({ dispatch, getState }: StateContext<TenantManagement.State>, { payload }: UpdateTenant) {\r\n    return this.tenantManagementService\r\n      .updateTenant({ ...getState().selectedItem, ...payload })\r\n      .pipe(switchMap(() => dispatch(new GetTenants())));\r\n  }\r\n}\r\n","import { ABP } from '@abp/ng.core';\r\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, TemplateRef, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\r\nimport {\r\n  CreateTenant,\r\n  DeleteTenant,\r\n  GetTenantById,\r\n  GetTenants,\r\n  UpdateTenant,\r\n} from '../../actions/tenant-management.actions';\r\nimport { TenantManagementService } from '../../services/tenant-management.service';\r\nimport { TenantManagementState } from '../../states/tenant-management.state';\r\n\r\ninterface SelectedModalContent {\r\n  type: 'saveConnStr' | 'saveTenant';\r\n  title: string;\r\n  template: TemplateRef<any>;\r\n}\r\n\r\n@Component({\r\n  selector: 'abp-tenants',\r\n  templateUrl: './tenants.component.html',\r\n})\r\nexport class TenantsComponent implements OnInit {\r\n  @Select(TenantManagementState.get)\r\n  data$: Observable<ABP.BasicItem[]>;\r\n\r\n  @Select(TenantManagementState.getTenantsTotalCount)\r\n  totalCount$: Observable<number>;\r\n\r\n  selected: ABP.BasicItem;\r\n\r\n  tenantForm: FormGroup;\r\n\r\n  defaultConnectionStringForm: FormGroup;\r\n\r\n  defaultConnectionString: string;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  selectedModalContent = {} as SelectedModalContent;\r\n\r\n  visibleFeatures = false;\r\n\r\n  providerKey: string;\r\n\r\n  _useSharedDatabase: boolean;\r\n\r\n  pageQuery: ABP.PageQueryParams = {};\r\n\r\n  loading = false;\r\n\r\n  modalBusy = false;\r\n\r\n  sortOrder = '';\r\n\r\n  sortKey = '';\r\n\r\n  get useSharedDatabase(): boolean {\r\n    return this.defaultConnectionStringForm.get('useSharedDatabase').value;\r\n  }\r\n\r\n  get connectionString(): string {\r\n    return this.defaultConnectionStringForm.get('defaultConnectionString').value;\r\n  }\r\n\r\n  @ViewChild('tenantModalTemplate', { static: false })\r\n  tenantModalTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild('connectionStringModalTemplate', { static: false })\r\n  connectionStringModalTemplate: TemplateRef<any>;\r\n\r\n  get isDisabledSaveButton(): boolean {\r\n    if (!this.selectedModalContent) return false;\r\n\r\n    if (this.selectedModalContent.type === 'saveConnStr' && this.defaultConnectionStringForm.invalid) {\r\n      return true;\r\n    } else if (this.selectedModalContent.type === 'saveTenant' && this.tenantForm.invalid) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private confirmationService: ConfirmationService,\r\n    private tenantService: TenantManagementService,\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.get();\r\n  }\r\n\r\n  onSearch(value) {\r\n    this.pageQuery.filter = value;\r\n    this.get();\r\n  }\r\n\r\n  private createTenantForm() {\r\n    this.tenantForm = this.fb.group({\r\n      name: [this.selected.name || '', [Validators.required, Validators.maxLength(256)]],\r\n    });\r\n  }\r\n\r\n  private createDefaultConnectionStringForm() {\r\n    this.defaultConnectionStringForm = this.fb.group({\r\n      useSharedDatabase: this._useSharedDatabase,\r\n      defaultConnectionString: [this.defaultConnectionString || ''],\r\n    });\r\n  }\r\n\r\n  openModal(title: string, template: TemplateRef<any>, type: 'saveConnStr' | 'saveTenant') {\r\n    this.selectedModalContent = {\r\n      title,\r\n      template,\r\n      type,\r\n    };\r\n\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  onEditConnectionString(id: string) {\r\n    this.store\r\n      .dispatch(new GetTenantById(id))\r\n      .pipe(\r\n        pluck('TenantManagementState', 'selectedItem'),\r\n        switchMap(selected => {\r\n          this.selected = selected;\r\n          return this.tenantService.getDefaultConnectionString(id);\r\n        }),\r\n      )\r\n      .subscribe(fetchedConnectionString => {\r\n        this._useSharedDatabase = fetchedConnectionString ? false : true;\r\n        this.defaultConnectionString = fetchedConnectionString ? fetchedConnectionString : '';\r\n        this.createDefaultConnectionStringForm();\r\n        this.openModal('AbpTenantManagement::ConnectionStrings', this.connectionStringModalTemplate, 'saveConnStr');\r\n      });\r\n  }\r\n\r\n  addTenant() {\r\n    this.selected = {} as ABP.BasicItem;\r\n    this.createTenantForm();\r\n    this.openModal('AbpTenantManagement::NewTenant', this.tenantModalTemplate, 'saveTenant');\r\n  }\r\n\r\n  editTenant(id: string) {\r\n    this.store\r\n      .dispatch(new GetTenantById(id))\r\n      .pipe(pluck('TenantManagementState', 'selectedItem'))\r\n      .subscribe(selected => {\r\n        this.selected = selected;\r\n        this.createTenantForm();\r\n        this.openModal('AbpTenantManagement::Edit', this.tenantModalTemplate, 'saveTenant');\r\n      });\r\n  }\r\n\r\n  save() {\r\n    const { type } = this.selectedModalContent;\r\n    if (!type) return;\r\n    if (type === 'saveTenant') this.saveTenant();\r\n    else if (type === 'saveConnStr') this.saveConnectionString();\r\n  }\r\n\r\n  saveConnectionString() {\r\n    if (this.modalBusy) return;\r\n\r\n    this.modalBusy = true;\r\n    if (this.useSharedDatabase || (!this.useSharedDatabase && !this.connectionString)) {\r\n      this.tenantService\r\n        .deleteDefaultConnectionString(this.selected.id)\r\n        .pipe(\r\n          take(1),\r\n          finalize(() => (this.modalBusy = false)),\r\n        )\r\n        .subscribe(() => {\r\n          this.isModalVisible = false;\r\n        });\r\n    } else {\r\n      this.tenantService\r\n        .updateDefaultConnectionString({ id: this.selected.id, defaultConnectionString: this.connectionString })\r\n        .pipe(\r\n          take(1),\r\n          finalize(() => (this.modalBusy = false)),\r\n        )\r\n        .subscribe(() => {\r\n          this.isModalVisible = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  saveTenant() {\r\n    if (!this.tenantForm.valid || this.modalBusy) return;\r\n    this.modalBusy = true;\r\n\r\n    this.store\r\n      .dispatch(\r\n        this.selected.id\r\n          ? new UpdateTenant({ ...this.selected, ...this.tenantForm.value, id: this.selected.id })\r\n          : new CreateTenant(this.tenantForm.value),\r\n      )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n      });\r\n  }\r\n\r\n  delete(id: string, name: string) {\r\n    this.confirmationService\r\n      .warn('AbpTenantManagement::TenantDeletionConfirmationMessage', 'AbpTenantManagement::AreYouSure', {\r\n        messageLocalizationParams: [name],\r\n      })\r\n      .subscribe((status: Toaster.Status) => {\r\n        if (status === Toaster.Status.confirm) {\r\n          this.store.dispatch(new DeleteTenant(id));\r\n        }\r\n      });\r\n  }\r\n\r\n  onPageChange(data) {\r\n    this.pageQuery.skipCount = data.first;\r\n    this.pageQuery.maxResultCount = data.rows;\r\n\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    this.loading = true;\r\n    this.store\r\n      .dispatch(new GetTenants(this.pageQuery))\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe();\r\n  }\r\n\r\n  onSharedDatabaseChange(value: boolean) {\r\n    if (!value) {\r\n      setTimeout(() => {\r\n        const defaultConnectionString = document.getElementById('defaultConnectionString') as HTMLInputElement;\r\n        if (defaultConnectionString) {\r\n          defaultConnectionString.focus();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n}\r\n","import { AuthGuard, DynamicLayoutComponent, PermissionGuard } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TenantsComponent } from './components/tenants/tenants.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'tenants', pathMatch: 'full' },\r\n  {\r\n    path: 'tenants',\r\n    component: DynamicLayoutComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    data: { requiredPolicy: 'AbpTenantManagement.Tenants' },\r\n    children: [{ path: '', component: TenantsComponent }],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TenantManagementRoutingModule {}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule, Provider } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TenantsComponent } from './components/tenants/tenants.component';\r\nimport { TenantManagementState } from './states/tenant-management.state';\r\nimport { TenantManagementRoutingModule } from './tenant-management-routing.module';\r\nimport { FeatureManagementModule } from '@abp/ng.feature-management';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\n\r\n@NgModule({\r\n  declarations: [TenantsComponent],\r\n  imports: [\r\n    TenantManagementRoutingModule,\r\n    NgxsModule.forFeature([TenantManagementState]),\r\n    NgxValidateCoreModule,\r\n    CoreModule,\r\n    TableModule,\r\n    ThemeSharedModule,\r\n    NgbDropdownModule,\r\n    FeatureManagementModule,\r\n  ],\r\n})\r\nexport class TenantManagementModule {}\r\n\r\n/**\r\n *\r\n * @deprecated since version 0.9.0\r\n */\r\nexport function TenantManagementProviders(): Provider[] {\r\n  return [];\r\n}\r\n","import { ABP, eLayoutType } from '@abp/ng.core';\r\n\r\n/**\r\n *\r\n * @deprecated since version 0.9.0\r\n */\r\nexport const TENANT_MANAGEMENT_ROUTES = {\r\n  routes: [\r\n    {\r\n      name: 'AbpTenantManagement::Menu:TenantManagement',\r\n      path: 'tenant-management',\r\n      parentName: 'AbpUiNavigation::Menu:Administration',\r\n      layout: eLayoutType.application,\r\n      iconClass: 'fa fa-users',\r\n      children: [\r\n        {\r\n          path: 'tenants',\r\n          name: 'AbpTenantManagement::Tenants',\r\n          order: 1,\r\n          requiredPolicy: 'AbpTenantManagement.Tenants',\r\n        },\r\n      ],\r\n    },\r\n  ] as ABP.FullRoute[],\r\n};\r\n","import { ABP } from '@abp/ng.core';\r\n\r\nexport namespace TenantManagement {\r\n  export interface State {\r\n    result: Response;\r\n    selectedItem: Item;\r\n  }\r\n\r\n  export type Response = ABP.PagedResponse<Item>;\r\n\r\n  export interface Item {\r\n    id: string;\r\n    name: string;\r\n  }\r\n\r\n  export interface AddRequest {\r\n    name: string;\r\n  }\r\n\r\n  export interface UpdateRequest extends AddRequest {\r\n    id: string;\r\n  }\r\n\r\n  export interface DefaultConnectionStringRequest {\r\n    id: string;\r\n    defaultConnectionString: string;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { TenantManagementState } from '../states/tenant-management.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TenantManagementStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  get() {\r\n    return this.store.selectSnapshot(TenantManagementState.get);\r\n  }\r\n\r\n  getTenantsTotalCount() {\r\n    return this.store.selectSnapshot(TenantManagementState.getTenantsTotalCount);\r\n  }\r\n}\r\n"],"names":["tslib_1.__decorate"],"mappings":"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"}
