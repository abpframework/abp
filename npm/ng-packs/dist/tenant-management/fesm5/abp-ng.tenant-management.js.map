{"version":3,"file":"abp-ng.tenant-management.js","sources":["ng://@abp/ng.tenant-management/lib/actions/tenant-management.actions.ts","ng://@abp/ng.tenant-management/lib/services/tenant-management.service.ts","ng://@abp/ng.tenant-management/lib/states/tenant-management.state.ts","ng://@abp/ng.tenant-management/lib/components/tenants/tenants.component.ts","ng://@abp/ng.tenant-management/lib/tenant-management-routing.module.ts","ng://@abp/ng.tenant-management/lib/tenant-management.module.ts","ng://@abp/ng.tenant-management/lib/constants/routes.ts","ng://@abp/ng.tenant-management/lib/models/tenant-management.ts","ng://@abp/ng.tenant-management/lib/services/tenant-management-state.service.ts"],"sourcesContent":["import { TenantManagement } from '../models/tenant-management';\nimport { ABP } from '@abp/ng.core';\n\nexport class GetTenants {\n  static readonly type = '[TenantManagement] Get Tenant';\n  constructor(public payload?: ABP.PageQueryParams) {}\n}\n\nexport class GetTenantById {\n  static readonly type = '[TenantManagement] Get Tenant By Id';\n  constructor(public payload: string) {}\n}\n\nexport class CreateTenant {\n  static readonly type = '[TenantManagement] Create Tenant';\n  constructor(public payload: TenantManagement.AddRequest) {}\n}\n\nexport class UpdateTenant {\n  static readonly type = '[TenantManagement] Update Tenant';\n  constructor(public payload: TenantManagement.UpdateRequest) {}\n}\n\nexport class DeleteTenant {\n  static readonly type = '[TenantManagement] Delete Tenant';\n  constructor(public payload: string) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService, Rest, ABP } from '@abp/ng.core';\nimport { TenantManagement } from '../models/tenant-management';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TenantManagementService {\n  constructor(private rest: RestService) {}\n\n  getTenant(params = {} as ABP.PageQueryParams): Observable<TenantManagement.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/multi-tenancy/tenants',\n      params\n    };\n\n    return this.rest.request<null, TenantManagement.Response>(request);\n  }\n\n  getTenantById(id: string): Observable<ABP.BasicItem> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/multi-tenancy/tenants/${id}`\n    };\n\n    return this.rest.request<null, ABP.BasicItem>(request);\n  }\n\n  deleteTenant(id: string): Observable<null> {\n    const request: Rest.Request<null> = {\n      method: 'DELETE',\n      url: `/api/multi-tenancy/tenants/${id}`\n    };\n\n    return this.rest.request<null, null>(request);\n  }\n\n  createTenant(body: TenantManagement.AddRequest): Observable<ABP.BasicItem> {\n    const request: Rest.Request<TenantManagement.AddRequest> = {\n      method: 'POST',\n      url: '/api/multi-tenancy/tenants',\n      body\n    };\n\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\n  }\n\n  updateTenant(body: TenantManagement.UpdateRequest): Observable<ABP.BasicItem> {\n    const url = `/api/multi-tenancy/tenants/${body.id}`;\n    delete body.id;\n\n    const request: Rest.Request<TenantManagement.UpdateRequest> = {\n      method: 'PUT',\n      url,\n      body\n    };\n\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\n  }\n\n  getDefaultConnectionString(id: string): Observable<string> {\n    const url = `/api/multi-tenancy/tenants/${id}/default-connection-string`;\n\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\n      method: 'GET',\n      responseType: Rest.ResponseType.Text,\n      url\n    };\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, string>(request);\n  }\n\n  updateDefaultConnectionString(payload: TenantManagement.DefaultConnectionStringRequest): Observable<any> {\n    const url = `/api/multi-tenancy/tenants/${payload.id}/default-connection-string`;\n\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\n      method: 'PUT',\n      url,\n      params: { defaultConnectionString: payload.defaultConnectionString }\n    };\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request);\n  }\n\n  deleteDefaultConnectionString(id: string): Observable<string> {\n    const url = `/api/multi-tenancy/tenants/${id}/default-connection-string`;\n\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\n      method: 'DELETE',\n      url\n    };\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request);\n  }\n}\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { switchMap, tap } from 'rxjs/operators';\nimport {\n  CreateTenant,\n  DeleteTenant,\n  GetTenants,\n  GetTenantById,\n  UpdateTenant,\n} from '../actions/tenant-management.actions';\nimport { TenantManagement } from '../models/tenant-management';\nimport { TenantManagementService } from '../services/tenant-management.service';\nimport { ABP } from '@abp/ng.core';\n\n@State<TenantManagement.State>({\n  name: 'TenantManagementState',\n  defaults: { result: {}, selectedItem: {} } as TenantManagement.State,\n})\nexport class TenantManagementState {\n  @Selector()\n  static get({ result }: TenantManagement.State): ABP.BasicItem[] {\n    return result.items || [];\n  }\n\n  @Selector()\n  static getTenantsTotalCount({ result }: TenantManagement.State): number {\n    return result.totalCount;\n  }\n\n  constructor(private tenantManagementService: TenantManagementService) {}\n\n  @Action(GetTenants)\n  get({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenants) {\n    return this.tenantManagementService.getTenant(payload).pipe(\n      tap(result =>\n        patchState({\n          result,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetTenantById)\n  getById({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenantById) {\n    return this.tenantManagementService.getTenantById(payload).pipe(\n      tap(selectedItem =>\n        patchState({\n          selectedItem,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteTenant)\n  delete(_, { payload }: DeleteTenant) {\n    return this.tenantManagementService.deleteTenant(payload);\n  }\n\n  @Action(CreateTenant)\n  add(_, { payload }: CreateTenant) {\n    return this.tenantManagementService.createTenant(payload);\n  }\n\n  @Action(UpdateTenant)\n  update({ getState }: StateContext<TenantManagement.State>, { payload }: UpdateTenant) {\n    return this.tenantManagementService.updateTenant({ ...getState().selectedItem, ...payload });\n  }\n}\n","import { ABP } from '@abp/ng.core';\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\nimport { Component, OnInit, TemplateRef, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\nimport {\n  CreateTenant,\n  DeleteTenant,\n  GetTenantById,\n  GetTenants,\n  UpdateTenant,\n} from '../../actions/tenant-management.actions';\nimport { TenantManagementService } from '../../services/tenant-management.service';\nimport { TenantManagementState } from '../../states/tenant-management.state';\n\ninterface SelectedModalContent {\n  type: 'saveConnStr' | 'saveTenant';\n  title: string;\n  template: TemplateRef<any>;\n}\n\n@Component({\n  selector: 'abp-tenants',\n  templateUrl: './tenants.component.html',\n})\nexport class TenantsComponent implements OnInit {\n  @Select(TenantManagementState.get)\n  data$: Observable<ABP.BasicItem[]>;\n\n  @Select(TenantManagementState.getTenantsTotalCount)\n  totalCount$: Observable<number>;\n\n  selected: ABP.BasicItem;\n\n  tenantForm: FormGroup;\n\n  defaultConnectionStringForm: FormGroup;\n\n  defaultConnectionString: string;\n\n  isModalVisible: boolean;\n\n  selectedModalContent = {} as SelectedModalContent;\n\n  visibleFeatures = false;\n\n  providerKey: string;\n\n  _useSharedDatabase: boolean;\n\n  pageQuery: ABP.PageQueryParams = {};\n\n  loading = false;\n\n  modalBusy = false;\n\n  sortOrder = '';\n\n  sortKey = '';\n\n  get useSharedDatabase(): boolean {\n    return this.defaultConnectionStringForm.get('useSharedDatabase').value;\n  }\n\n  get connectionString(): string {\n    return this.defaultConnectionStringForm.get('defaultConnectionString').value;\n  }\n\n  @ViewChild('tenantModalTemplate', { static: false })\n  tenantModalTemplate: TemplateRef<any>;\n\n  @ViewChild('connectionStringModalTemplate', { static: false })\n  connectionStringModalTemplate: TemplateRef<any>;\n\n  get isDisabledSaveButton(): boolean {\n    if (!this.selectedModalContent) return false;\n\n    if (\n      this.selectedModalContent.type === 'saveConnStr' &&\n      this.defaultConnectionStringForm &&\n      this.defaultConnectionStringForm.invalid\n    ) {\n      return true;\n    } else if (\n      this.selectedModalContent.type === 'saveTenant' &&\n      this.tenantForm &&\n      this.tenantForm.invalid\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  constructor(\n    private confirmationService: ConfirmationService,\n    private tenantService: TenantManagementService,\n    private fb: FormBuilder,\n    private store: Store,\n  ) {}\n\n  ngOnInit() {\n    this.get();\n  }\n\n  onSearch(value) {\n    this.pageQuery.filter = value;\n    this.get();\n  }\n\n  private createTenantForm() {\n    this.tenantForm = this.fb.group({\n      name: [this.selected.name || '', [Validators.required, Validators.maxLength(256)]],\n    });\n  }\n\n  private createDefaultConnectionStringForm() {\n    this.defaultConnectionStringForm = this.fb.group({\n      useSharedDatabase: this._useSharedDatabase,\n      defaultConnectionString: [this.defaultConnectionString || ''],\n    });\n  }\n\n  openModal(title: string, template: TemplateRef<any>, type: 'saveConnStr' | 'saveTenant') {\n    this.selectedModalContent = {\n      title,\n      template,\n      type,\n    };\n\n    this.isModalVisible = true;\n  }\n\n  onEditConnectionString(id: string) {\n    this.store\n      .dispatch(new GetTenantById(id))\n      .pipe(\n        pluck('TenantManagementState', 'selectedItem'),\n        switchMap(selected => {\n          this.selected = selected;\n          return this.tenantService.getDefaultConnectionString(id);\n        }),\n      )\n      .subscribe(fetchedConnectionString => {\n        this._useSharedDatabase = fetchedConnectionString ? false : true;\n        this.defaultConnectionString = fetchedConnectionString ? fetchedConnectionString : '';\n        this.createDefaultConnectionStringForm();\n        this.openModal(\n          'AbpTenantManagement::ConnectionStrings',\n          this.connectionStringModalTemplate,\n          'saveConnStr',\n        );\n      });\n  }\n\n  addTenant() {\n    this.selected = {} as ABP.BasicItem;\n    this.createTenantForm();\n    this.openModal('AbpTenantManagement::NewTenant', this.tenantModalTemplate, 'saveTenant');\n  }\n\n  editTenant(id: string) {\n    this.store\n      .dispatch(new GetTenantById(id))\n      .pipe(pluck('TenantManagementState', 'selectedItem'))\n      .subscribe(selected => {\n        this.selected = selected;\n        this.createTenantForm();\n        this.openModal('AbpTenantManagement::Edit', this.tenantModalTemplate, 'saveTenant');\n      });\n  }\n\n  save() {\n    const { type } = this.selectedModalContent;\n    if (!type) return;\n    if (type === 'saveTenant') this.saveTenant();\n    else if (type === 'saveConnStr') this.saveConnectionString();\n  }\n\n  saveConnectionString() {\n    if (this.modalBusy) return;\n\n    this.modalBusy = true;\n    if (this.useSharedDatabase || (!this.useSharedDatabase && !this.connectionString)) {\n      this.tenantService\n        .deleteDefaultConnectionString(this.selected.id)\n        .pipe(\n          take(1),\n          finalize(() => (this.modalBusy = false)),\n        )\n        .subscribe(() => {\n          this.isModalVisible = false;\n        });\n    } else {\n      this.tenantService\n        .updateDefaultConnectionString({\n          id: this.selected.id,\n          defaultConnectionString: this.connectionString,\n        })\n        .pipe(\n          take(1),\n          finalize(() => (this.modalBusy = false)),\n        )\n        .subscribe(() => {\n          this.isModalVisible = false;\n        });\n    }\n  }\n\n  saveTenant() {\n    if (!this.tenantForm.valid || this.modalBusy) return;\n    this.modalBusy = true;\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateTenant({ ...this.selected, ...this.tenantForm.value, id: this.selected.id })\n          : new CreateTenant(this.tenantForm.value),\n      )\n      .pipe(finalize(() => (this.modalBusy = false)))\n      .subscribe(() => {\n        this.isModalVisible = false;\n        this.get();\n      });\n  }\n\n  delete(id: string, name: string) {\n    this.confirmationService\n      .warn(\n        'AbpTenantManagement::TenantDeletionConfirmationMessage',\n        'AbpTenantManagement::AreYouSure',\n        {\n          messageLocalizationParams: [name],\n        },\n      )\n      .subscribe((status: Toaster.Status) => {\n        if (status === Toaster.Status.confirm) {\n          this.store.dispatch(new DeleteTenant(id)).subscribe(() => this.get());\n        }\n      });\n  }\n\n  onPageChange(data) {\n    this.pageQuery.skipCount = data.first;\n    this.pageQuery.maxResultCount = data.rows;\n\n    this.get();\n  }\n\n  get() {\n    this.loading = true;\n    this.store\n      .dispatch(new GetTenants(this.pageQuery))\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe();\n  }\n\n  onSharedDatabaseChange(value: boolean) {\n    if (!value) {\n      setTimeout(() => {\n        const defaultConnectionString = document.getElementById(\n          'defaultConnectionString',\n        ) as HTMLInputElement;\n        if (defaultConnectionString) {\n          defaultConnectionString.focus();\n        }\n      }, 0);\n    }\n  }\n}\n","import { AuthGuard, DynamicLayoutComponent, PermissionGuard } from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TenantsComponent } from './components/tenants/tenants.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'tenants', pathMatch: 'full' },\n  {\n    path: 'tenants',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard],\n    data: { requiredPolicy: 'AbpTenantManagement.Tenants' },\n    children: [{ path: '', component: TenantsComponent }],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TenantManagementRoutingModule {}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule, Provider } from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxsModule } from '@ngxs/store';\nimport { TableModule } from 'primeng/table';\nimport { TenantsComponent } from './components/tenants/tenants.component';\nimport { TenantManagementState } from './states/tenant-management.state';\nimport { TenantManagementRoutingModule } from './tenant-management-routing.module';\nimport { FeatureManagementModule } from '@abp/ng.feature-management';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\n\n@NgModule({\n  declarations: [TenantsComponent],\n  imports: [\n    TenantManagementRoutingModule,\n    NgxsModule.forFeature([TenantManagementState]),\n    NgxValidateCoreModule,\n    CoreModule,\n    TableModule,\n    ThemeSharedModule,\n    NgbDropdownModule,\n    FeatureManagementModule,\n  ],\n})\nexport class TenantManagementModule {}\n\n/**\n *\n * @deprecated since version 0.9.0\n */\nexport function TenantManagementProviders(): Provider[] {\n  return [];\n}\n","import { ABP, eLayoutType } from '@abp/ng.core';\n\n/**\n *\n * @deprecated since version 0.9.0\n */\nexport const TENANT_MANAGEMENT_ROUTES = {\n  routes: [\n    {\n      name: 'AbpTenantManagement::Menu:TenantManagement',\n      path: 'tenant-management',\n      parentName: 'AbpUiNavigation::Menu:Administration',\n      layout: eLayoutType.application,\n      iconClass: 'fa fa-users',\n      children: [\n        {\n          path: 'tenants',\n          name: 'AbpTenantManagement::Tenants',\n          order: 1,\n          requiredPolicy: 'AbpTenantManagement.Tenants',\n        },\n      ],\n    },\n  ] as ABP.FullRoute[],\n};\n","import { ABP } from '@abp/ng.core';\n\nexport namespace TenantManagement {\n  export interface State {\n    result: Response;\n    selectedItem: Item;\n  }\n\n  export type Response = ABP.PagedResponse<Item>;\n\n  export interface Item {\n    id: string;\n    name: string;\n  }\n\n  export interface AddRequest {\n    name: string;\n  }\n\n  export interface UpdateRequest extends AddRequest {\n    id: string;\n  }\n\n  export interface DefaultConnectionStringRequest {\n    id: string;\n    defaultConnectionString: string;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { TenantManagementState } from '../states/tenant-management.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TenantManagementStateService {\n  constructor(private store: Store) {}\n\n  get() {\n    return this.store.selectSnapshot(TenantManagementState.get);\n  }\n\n  getTenantsTotalCount() {\n    return this.store.selectSnapshot(TenantManagementState.getTenantsTotalCount);\n  }\n}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}