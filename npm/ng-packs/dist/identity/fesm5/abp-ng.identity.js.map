{"version":3,"file":"abp-ng.identity.js","sources":["ng://@abp/ng.identity/lib/actions/identity.actions.ts","ng://@abp/ng.identity/lib/services/identity.service.ts","ng://@abp/ng.identity/lib/states/identity.state.ts","ng://@abp/ng.identity/lib/components/roles/roles.component.ts","ng://@abp/ng.identity/lib/components/users/users.component.ts","ng://@abp/ng.identity/lib/identity-routing.module.ts","ng://@abp/ng.identity/lib/identity.module.ts","ng://@abp/ng.identity/lib/constants/routes.ts","ng://@abp/ng.identity/lib/models/identity.ts"],"sourcesContent":["import { Identity } from '../models/identity';\r\nimport { ABP } from '@abp/ng.core';\r\n\r\nexport class GetRoles {\r\n  static readonly type = '[Identity] Get Roles';\r\n  constructor(public payload?: ABP.PageQueryParams) {}\r\n}\r\n\r\nexport class GetRoleById {\r\n  static readonly type = '[Identity] Get Role By Id';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class DeleteRole {\r\n  static readonly type = '[Identity] Delete Role';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CreateRole {\r\n  static readonly type = '[Identity] Create Role';\r\n  constructor(public payload: Identity.RoleSaveRequest) {}\r\n}\r\n\r\nexport class UpdateRole {\r\n  static readonly type = '[Identity] Update Role';\r\n  constructor(public payload: Identity.RoleItem) {}\r\n}\r\n\r\nexport class GetUsers {\r\n  static readonly type = '[Identity] Get Users';\r\n  constructor(public payload?: ABP.PageQueryParams) {}\r\n}\r\n\r\nexport class GetUserById {\r\n  static readonly type = '[Identity] Get User By Id';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class DeleteUser {\r\n  static readonly type = '[Identity] Delete User';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CreateUser {\r\n  static readonly type = '[Identity] Create User';\r\n  constructor(public payload: Identity.UserSaveRequest) {}\r\n}\r\n\r\nexport class UpdateUser {\r\n  static readonly type = '[Identity] Update User';\r\n  constructor(public payload: Identity.UserSaveRequest & { id: string }) {}\r\n}\r\n\r\nexport class GetUserRoles {\r\n  static readonly type = '[Identity] Get User Roles';\r\n  constructor(public payload: string) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest, ABP } from '@abp/ng.core';\r\nimport { Identity } from '../models/identity';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  getRoles(params = {} as ABP.PageQueryParams): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/roles',\r\n      params,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request);\r\n  }\r\n\r\n  getRoleById(id: string): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/roles/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleItem>(request);\r\n  }\r\n\r\n  deleteRole(id: string): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'DELETE',\r\n      url: `/api/identity/roles/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleItem>(request);\r\n  }\r\n\r\n  createRole(body: Identity.RoleSaveRequest): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<Identity.RoleSaveRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/roles',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.RoleSaveRequest, Identity.RoleItem>(request);\r\n  }\r\n\r\n  updateRole(body: Identity.RoleItem): Observable<Identity.RoleItem> {\r\n    const url = `/api/identity/roles/${body.id}`;\r\n    delete body.id;\r\n\r\n    const request: Rest.Request<Identity.RoleItem> = {\r\n      method: 'PUT',\r\n      url,\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.RoleItem, Identity.RoleItem>(request);\r\n  }\r\n\r\n  getUsers(params = {} as ABP.PageQueryParams): Observable<Identity.UserResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/users',\r\n      params,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.UserResponse>(request);\r\n  }\r\n\r\n  getUserById(id: string): Observable<Identity.UserItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.UserItem>(request);\r\n  }\r\n\r\n  getUserRoles(id: string): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}/roles`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request);\r\n  }\r\n\r\n  deleteUser(id: string): Observable<null> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'DELETE',\r\n      url: `/api/identity/users/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, null>(request);\r\n  }\r\n\r\n  createUser(body: Identity.UserSaveRequest): Observable<Identity.UserItem> {\r\n    const request: Rest.Request<Identity.UserSaveRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/users',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.UserSaveRequest, Identity.UserItem>(request);\r\n  }\r\n\r\n  updateUser(body: Identity.UserItem): Observable<Identity.UserItem> {\r\n    const url = `/api/identity/users/${body.id}`;\r\n    delete body.id;\r\n\r\n    const request: Rest.Request<Identity.UserItem> = {\r\n      method: 'PUT',\r\n      url,\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.UserItem, Identity.UserItem>(request);\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { switchMap, tap, pluck } from 'rxjs/operators';\r\nimport {\r\n  CreateRole,\r\n  CreateUser,\r\n  DeleteRole,\r\n  DeleteUser,\r\n  GetRoleById,\r\n  GetRoles,\r\n  GetUserById,\r\n  GetUsers,\r\n  UpdateRole,\r\n  UpdateUser,\r\n  GetUserRoles,\r\n} from '../actions/identity.actions';\r\nimport { Identity } from '../models/identity';\r\nimport { IdentityService } from '../services/identity.service';\r\n\r\n@State<Identity.State>({\r\n  name: 'IdentityState',\r\n  defaults: { roles: {}, selectedRole: {}, users: {}, selectedUser: {} } as Identity.State,\r\n})\r\nexport class IdentityState {\r\n  @Selector()\r\n  static getRoles({ roles }: Identity.State): Identity.RoleItem[] {\r\n    return roles.items || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getRolesTotalCount({ roles }: Identity.State): number {\r\n    return roles.totalCount || 0;\r\n  }\r\n\r\n  @Selector()\r\n  static getUsers({ users }: Identity.State): Identity.UserItem[] {\r\n    return users.items || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getUsersTotalCount({ users }: Identity.State): number {\r\n    return users.totalCount || 0;\r\n  }\r\n\r\n  constructor(private identityService: IdentityService) {}\r\n\r\n  @Action(GetRoles)\r\n  getRoles({ patchState }: StateContext<Identity.State>, { payload }: GetRoles) {\r\n    return this.identityService.getRoles(payload).pipe(\r\n      tap(roles =>\r\n        patchState({\r\n          roles,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(GetRoleById)\r\n  getRole({ patchState }: StateContext<Identity.State>, { payload }: GetRoleById) {\r\n    return this.identityService.getRoleById(payload).pipe(\r\n      tap(selectedRole =>\r\n        patchState({\r\n          selectedRole,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(DeleteRole)\r\n  deleteRole({ dispatch }: StateContext<Identity.State>, { payload }: GetRoleById) {\r\n    return this.identityService.deleteRole(payload).pipe(switchMap(() => dispatch(new GetRoles())));\r\n  }\r\n\r\n  @Action(CreateRole)\r\n  addRole({ dispatch }: StateContext<Identity.State>, { payload }: CreateRole) {\r\n    return this.identityService.createRole(payload).pipe(switchMap(() => dispatch(new GetRoles())));\r\n  }\r\n\r\n  @Action(UpdateRole)\r\n  updateRole({ getState, dispatch }: StateContext<Identity.State>, { payload }: UpdateRole) {\r\n    return this.identityService\r\n      .updateRole({ ...getState().selectedRole, ...payload })\r\n      .pipe(switchMap(() => dispatch(new GetRoles())));\r\n  }\r\n\r\n  @Action(GetUsers)\r\n  getUsers({ patchState }: StateContext<Identity.State>, { payload }: GetUsers) {\r\n    return this.identityService.getUsers(payload).pipe(\r\n      tap(users =>\r\n        patchState({\r\n          users,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(GetUserById)\r\n  getUser({ patchState }: StateContext<Identity.State>, { payload }: GetUserById) {\r\n    return this.identityService.getUserById(payload).pipe(\r\n      tap(selectedUser =>\r\n        patchState({\r\n          selectedUser,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(DeleteUser)\r\n  deleteUser({ dispatch }: StateContext<Identity.State>, { payload }: GetUserById) {\r\n    return this.identityService.deleteUser(payload).pipe(switchMap(() => dispatch(new GetUsers())));\r\n  }\r\n\r\n  @Action(CreateUser)\r\n  addUser({ dispatch }: StateContext<Identity.State>, { payload }: CreateUser) {\r\n    return this.identityService.createUser(payload).pipe(switchMap(() => dispatch(new GetUsers())));\r\n  }\r\n\r\n  @Action(UpdateUser)\r\n  updateUser({ getState, dispatch }: StateContext<Identity.State>, { payload }: UpdateUser) {\r\n    return this.identityService\r\n      .updateUser({ ...getState().selectedUser, ...payload })\r\n      .pipe(switchMap(() => dispatch(new GetUsers())));\r\n  }\r\n\r\n  @Action(GetUserRoles)\r\n  getUserRoles({ patchState }: StateContext<Identity.State>, { payload }: GetUserRoles) {\r\n    return this.identityService.getUserRoles(payload).pipe(\r\n      pluck('items'),\r\n      tap(selectedUserRoles =>\r\n        patchState({\r\n          selectedUserRoles,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n}\r\n","import { ABP } from '@abp/ng.core';\r\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\r\nimport { Component, TemplateRef, ViewChild, OnInit, ContentChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, pluck } from 'rxjs/operators';\r\nimport { CreateRole, DeleteRole, GetRoleById, GetRoles, UpdateRole } from '../../actions/identity.actions';\r\nimport { Identity } from '../../models/identity';\r\nimport { IdentityState } from '../../states/identity.state';\r\n\r\n@Component({\r\n  selector: 'abp-roles',\r\n  templateUrl: './roles.component.html',\r\n})\r\nexport class RolesComponent implements OnInit {\r\n  @Select(IdentityState.getRoles)\r\n  data$: Observable<Identity.RoleItem[]>;\r\n\r\n  @Select(IdentityState.getRolesTotalCount)\r\n  totalCount$: Observable<number>;\r\n\r\n  form: FormGroup;\r\n\r\n  selected: Identity.RoleItem;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  visiblePermissions = false;\r\n\r\n  providerKey: string;\r\n\r\n  pageQuery: ABP.PageQueryParams = {};\r\n\r\n  loading = false;\r\n\r\n  modalBusy = false;\r\n\r\n  sortOrder = '';\r\n\r\n  sortKey = '';\r\n\r\n  @ViewChild('formRef', { static: false, read: ElementRef })\r\n  formRef: ElementRef<HTMLFormElement>;\r\n\r\n  constructor(private confirmationService: ConfirmationService, private fb: FormBuilder, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.get();\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.fb.group({\r\n      name: new FormControl({ value: this.selected.name || '', disabled: this.selected.isStatic }, [\r\n        Validators.required,\r\n        Validators.maxLength(256),\r\n      ]),\r\n      isDefault: [this.selected.isDefault || false],\r\n      isPublic: [this.selected.isPublic || false],\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.createForm();\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as Identity.RoleItem;\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.store\r\n      .dispatch(new GetRoleById(id))\r\n      .pipe(pluck('IdentityState', 'selectedRole'))\r\n      .subscribe(selectedRole => {\r\n        this.selected = selectedRole;\r\n        this.openModal();\r\n      });\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid) return;\r\n    this.modalBusy = true;\r\n\r\n    this.store\r\n      .dispatch(\r\n        this.selected.id\r\n          ? new UpdateRole({ ...this.selected, ...this.form.value, id: this.selected.id })\r\n          : new CreateRole(this.form.value),\r\n      )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n      });\r\n  }\r\n\r\n  delete(id: string, name: string) {\r\n    this.confirmationService\r\n      .warn('AbpIdentity::RoleDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\r\n        messageLocalizationParams: [name],\r\n      })\r\n      .subscribe((status: Toaster.Status) => {\r\n        if (status === Toaster.Status.confirm) {\r\n          this.store.dispatch(new DeleteRole(id));\r\n        }\r\n      });\r\n  }\r\n\r\n  onPageChange(data) {\r\n    this.pageQuery.skipCount = data.first;\r\n    this.pageQuery.maxResultCount = data.rows;\r\n\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    this.loading = true;\r\n    this.store\r\n      .dispatch(new GetRoles(this.pageQuery))\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe();\r\n  }\r\n\r\n  onClickSaveButton() {\r\n    this.formRef.nativeElement.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\r\n  }\r\n}\r\n","import { ABP, ConfigState } from '@abp/ng.core';\r\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\r\nimport { Component, TemplateRef, TrackByFunction, ViewChild, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport {\r\n  CreateUser,\r\n  DeleteUser,\r\n  GetUserById,\r\n  GetUserRoles,\r\n  GetUsers,\r\n  UpdateUser,\r\n  GetRoles,\r\n} from '../../actions/identity.actions';\r\nimport { Identity } from '../../models/identity';\r\nimport { IdentityState } from '../../states/identity.state';\r\nimport { PasswordRules, validatePassword } from '@ngx-validate/core';\r\n@Component({\r\n  selector: 'abp-users',\r\n  templateUrl: './users.component.html',\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  @Select(IdentityState.getUsers)\r\n  data$: Observable<Identity.UserItem[]>;\r\n\r\n  @Select(IdentityState.getUsersTotalCount)\r\n  totalCount$: Observable<number>;\r\n\r\n  @ViewChild('modalContent', { static: false })\r\n  modalContent: TemplateRef<any>;\r\n\r\n  form: FormGroup;\r\n\r\n  selected: Identity.UserItem;\r\n\r\n  selectedUserRoles: Identity.RoleItem[];\r\n\r\n  roles: Identity.RoleItem[];\r\n\r\n  visiblePermissions = false;\r\n\r\n  providerKey: string;\r\n\r\n  pageQuery: ABP.PageQueryParams = {};\r\n\r\n  isModalVisible: boolean;\r\n\r\n  loading = false;\r\n\r\n  modalBusy = false;\r\n\r\n  sortOrder = '';\r\n\r\n  sortKey = '';\r\n\r\n  passwordRulesArr = [] as PasswordRules;\r\n\r\n  requiredPasswordLength = 1;\r\n\r\n  trackByFn: TrackByFunction<AbstractControl> = (index, item) => Object.keys(item)[0] || index;\r\n\r\n  get roleGroups(): FormGroup[] {\r\n    return snq(() => (this.form.get('roleNames') as FormArray).controls as FormGroup[], []);\r\n  }\r\n\r\n  constructor(private confirmationService: ConfirmationService, private fb: FormBuilder, private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.get();\r\n\r\n    const passwordRules: ABP.Dictionary<string> = this.store.selectSnapshot(\r\n      ConfigState.getSettings('Identity.Password'),\r\n    );\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireDigit'] || '').toLowerCase() === 'true') {\r\n      this.passwordRulesArr.push('number');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireLowercase'] || '').toLowerCase() === 'true') {\r\n      this.passwordRulesArr.push('small');\r\n    }\r\n\r\n    if ((passwordRules['Abp.Identity.Password.RequireUppercase'] || '').toLowerCase() === 'true') {\r\n      this.passwordRulesArr.push('capital');\r\n    }\r\n\r\n    if (+(passwordRules['Abp.Identity.Password.RequiredUniqueChars'] || 0) > 0) {\r\n      this.passwordRulesArr.push('special');\r\n    }\r\n\r\n    if (Number.isInteger(+passwordRules['Abp.Identity.Password.RequiredLength'])) {\r\n      this.requiredPasswordLength = +passwordRules['Abp.Identity.Password.RequiredLength'];\r\n    }\r\n  }\r\n\r\n  onSearch(value) {\r\n    this.pageQuery.filter = value;\r\n    this.get();\r\n  }\r\n\r\n  buildForm() {\r\n    this.store.dispatch(new GetRoles()).subscribe(() => {\r\n      this.roles = this.store.selectSnapshot(IdentityState.getRoles);\r\n      this.form = this.fb.group({\r\n        userName: [this.selected.userName || '', [Validators.required, Validators.maxLength(256)]],\r\n        email: [this.selected.email || '', [Validators.required, Validators.email, Validators.maxLength(256)]],\r\n        name: [this.selected.name || '', [Validators.maxLength(64)]],\r\n        surname: [this.selected.surname || '', [Validators.maxLength(64)]],\r\n        phoneNumber: [this.selected.phoneNumber || '', [Validators.maxLength(16)]],\r\n        lockoutEnabled: [this.selected.twoFactorEnabled || (this.selected.id ? false : true)],\r\n        twoFactorEnabled: [this.selected.twoFactorEnabled || (this.selected.id ? false : true)],\r\n        roleNames: this.fb.array(\r\n          this.roles.map(role =>\r\n            this.fb.group({\r\n              [role.name]: [!!snq(() => this.selectedUserRoles.find(userRole => userRole.id === role.id))],\r\n            }),\r\n          ),\r\n        ),\r\n      });\r\n\r\n      const passwordValidators = [\r\n        validatePassword(this.passwordRulesArr),\r\n        Validators.minLength(this.requiredPasswordLength),\r\n        Validators.maxLength(32),\r\n      ];\r\n\r\n      this.form.addControl('password', new FormControl('', [...passwordValidators]));\r\n\r\n      if (!this.selected.userName) {\r\n        this.form.get('password').setValidators([...passwordValidators, Validators.required]);\r\n        this.form.get('password').updateValueAndValidity();\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.buildForm();\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as Identity.UserItem;\r\n    this.selectedUserRoles = [] as Identity.RoleItem[];\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.store\r\n      .dispatch(new GetUserById(id))\r\n      .pipe(\r\n        switchMap(() => this.store.dispatch(new GetUserRoles(id))),\r\n        pluck('IdentityState'),\r\n        take(1),\r\n      )\r\n      .subscribe((state: Identity.State) => {\r\n        this.selected = state.selectedUser;\r\n        this.selectedUserRoles = state.selectedUserRoles;\r\n        this.openModal();\r\n      });\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid || this.modalBusy) return;\r\n    this.modalBusy = true;\r\n\r\n    const { roleNames } = this.form.value;\r\n    const mappedRoleNames = snq(\r\n      () => roleNames.filter(role => !!role[Object.keys(role)[0]]).map(role => Object.keys(role)[0]),\r\n      [],\r\n    );\r\n\r\n    this.store\r\n      .dispatch(\r\n        this.selected.id\r\n          ? new UpdateUser({\r\n              ...this.selected,\r\n              ...this.form.value,\r\n              id: this.selected.id,\r\n              roleNames: mappedRoleNames,\r\n            })\r\n          : new CreateUser({\r\n              ...this.form.value,\r\n              roleNames: mappedRoleNames,\r\n            }),\r\n      )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n      });\r\n  }\r\n\r\n  delete(id: string, userName: string) {\r\n    this.confirmationService\r\n      .warn('AbpIdentity::UserDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\r\n        messageLocalizationParams: [userName],\r\n      })\r\n      .subscribe((status: Toaster.Status) => {\r\n        if (status === Toaster.Status.confirm) {\r\n          this.store.dispatch(new DeleteUser(id));\r\n        }\r\n      });\r\n  }\r\n\r\n  onPageChange(data) {\r\n    this.pageQuery.skipCount = data.first;\r\n    this.pageQuery.maxResultCount = data.rows;\r\n\r\n    this.get();\r\n  }\r\n\r\n  get() {\r\n    this.loading = true;\r\n    this.store\r\n      .dispatch(new GetUsers(this.pageQuery))\r\n      .pipe(finalize(() => (this.loading = false)))\r\n      .subscribe();\r\n  }\r\n}\r\n","import { AuthGuard, DynamicLayoutComponent, PermissionGuard } from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RolesComponent } from './components/roles/roles.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'roles', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    children: [\r\n      {\r\n        path: 'roles',\r\n        component: RolesComponent,\r\n        data: { requiredPolicy: 'AbpIdentity.Roles' },\r\n      },\r\n      {\r\n        path: 'users',\r\n        component: UsersComponent,\r\n        data: { requiredPolicy: 'AbpIdentity.Users' },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class IdentityRoutingModule {}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { NgModule, Provider } from '@angular/core';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { RolesComponent } from './components/roles/roles.component';\r\nimport { IdentityRoutingModule } from './identity-routing.module';\r\nimport { IdentityState } from './states/identity.state';\r\nimport { NgbTabsetModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { PermissionManagementModule } from '@abp/ng.permission-management';\r\nimport { TableModule } from 'primeng/table';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\n\r\n@NgModule({\r\n  declarations: [RolesComponent, UsersComponent],\r\n  imports: [\r\n    NgxsModule.forFeature([IdentityState]),\r\n    CoreModule,\r\n    IdentityRoutingModule,\r\n    NgbTabsetModule,\r\n    ThemeSharedModule,\r\n    TableModule,\r\n    NgbDropdownModule,\r\n    PermissionManagementModule,\r\n    NgxValidateCoreModule,\r\n  ],\r\n})\r\nexport class IdentityModule {}\r\n\r\n/**\r\n *\r\n * @deprecated\r\n */\r\nexport function IdentityProviders(): Provider[] {\r\n  return [];\r\n}\r\n","import { eLayoutType, ABP } from '@abp/ng.core';\r\n\r\n/**\r\n *\r\n * @deprecated\r\n */\r\nexport const IDENTITY_ROUTES = {\r\n  routes: [\r\n    {\r\n      name: 'AbpUiNavigation::Menu:Administration',\r\n      path: '',\r\n      order: 1,\r\n      wrapper: true,\r\n    },\r\n    {\r\n      name: 'AbpIdentity::Menu:IdentityManagement',\r\n      path: 'identity',\r\n      order: 1,\r\n      parentName: 'AbpUiNavigation::Menu:Administration',\r\n      layout: eLayoutType.application,\r\n      iconClass: 'fa fa-id-card-o',\r\n      children: [\r\n        { path: 'roles', name: 'AbpIdentity::Roles', order: 2, requiredPolicy: 'AbpIdentity.Roles' },\r\n        { path: 'users', name: 'AbpIdentity::Users', order: 1, requiredPolicy: 'AbpIdentity.Users' },\r\n      ],\r\n    },\r\n  ] as ABP.FullRoute[],\r\n};\r\n","import { ABP } from '@abp/ng.core';\r\n\r\nexport namespace Identity {\r\n  export interface State {\r\n    roles: RoleResponse;\r\n    users: UserResponse;\r\n    selectedRole: RoleItem;\r\n    selectedUser: UserItem;\r\n    selectedUserRoles: RoleItem[];\r\n  }\r\n\r\n  export type RoleResponse = ABP.PagedResponse<RoleItem>;\r\n\r\n  export interface RoleSaveRequest {\r\n    name: string;\r\n    isDefault: boolean;\r\n    isPublic: boolean;\r\n  }\r\n\r\n  export interface RoleItem extends RoleSaveRequest {\r\n    isStatic: boolean;\r\n    concurrencyStamp: string;\r\n    id: string;\r\n  }\r\n\r\n  export type UserResponse = ABP.PagedResponse<UserItem>;\r\n\r\n  export interface UserItem extends User {\r\n    tenantId: string;\r\n    emailConfirmed: boolean;\r\n    phoneNumberConfirmed: boolean;\r\n    isLockedOut: boolean;\r\n    concurrencyStamp: string;\r\n    id: string;\r\n  }\r\n\r\n  export interface User {\r\n    userName: string;\r\n    name: string;\r\n    surname: string;\r\n    email: string;\r\n    phoneNumber: string;\r\n    twoFactorEnabled: true;\r\n    lockoutEnabled: true;\r\n  }\r\n\r\n  export interface UserSaveRequest extends User {\r\n    password: string;\r\n    roleNames: string[];\r\n  }\r\n}\r\n"],"names":["tslib_1.__decorate"],"mappings":"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"}
