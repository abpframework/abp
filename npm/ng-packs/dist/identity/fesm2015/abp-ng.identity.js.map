{"version":3,"file":"abp-ng.identity.js","sources":["ng://@abp/ng.identity/lib/actions/identity.actions.ts","ng://@abp/ng.identity/lib/services/identity.service.ts","ng://@abp/ng.identity/lib/states/identity.state.ts","ng://@abp/ng.identity/lib/components/roles/roles.component.ts","ng://@abp/ng.identity/lib/resolvers/roles.resolver.ts","ng://@abp/ng.identity/lib/components/users/users.component.ts","ng://@abp/ng.identity/lib/resolvers/users.resolver.ts","ng://@abp/ng.identity/lib/identity-routing.module.ts","ng://@abp/ng.identity/lib/identity.module.ts","ng://@abp/ng.identity/lib/constants/routes.ts","ng://@abp/ng.identity/lib/models/identity.ts"],"sourcesContent":["import { Identity } from '../models/identity';\nimport { ABP } from '@abp/ng.core';\n\nexport class GetRoles {\n  static readonly type = '[Identity] Get Roles';\n  constructor(public payload?: ABP.PageQueryParams) {}\n}\n\nexport class GetRoleById {\n  static readonly type = '[Identity] Get Role By Id';\n  constructor(public payload: string) {}\n}\n\nexport class DeleteRole {\n  static readonly type = '[Identity] Delete Role';\n  constructor(public payload: string) {}\n}\n\nexport class CreateRole {\n  static readonly type = '[Identity] Create Role';\n  constructor(public payload: Identity.RoleSaveRequest) {}\n}\n\nexport class UpdateRole {\n  static readonly type = '[Identity] Update Role';\n  constructor(public payload: Identity.RoleItem) {}\n}\n\nexport class GetUsers {\n  static readonly type = '[Identity] Get Users';\n  constructor(public payload?: ABP.PageQueryParams) {}\n}\n\nexport class GetUserById {\n  static readonly type = '[Identity] Get User By Id';\n  constructor(public payload: string) {}\n}\n\nexport class DeleteUser {\n  static readonly type = '[Identity] Delete User';\n  constructor(public payload: string) {}\n}\n\nexport class CreateUser {\n  static readonly type = '[Identity] Create User';\n  constructor(public payload: Identity.UserSaveRequest) {}\n}\n\nexport class UpdateUser {\n  static readonly type = '[Identity] Update User';\n  constructor(public payload: Identity.UserSaveRequest & { id: string }) {}\n}\n\nexport class GetUserRoles {\n  static readonly type = '[Identity] Get User Roles';\n  constructor(public payload: string) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService, Rest, ABP } from '@abp/ng.core';\nimport { Identity } from '../models/identity';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityService {\n  constructor(private rest: RestService) {}\n\n  getRoles(params = {} as ABP.PageQueryParams): Observable<Identity.RoleResponse> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/identity/roles',\n      params,\n    };\n\n    return this.rest.request<null, Identity.RoleResponse>(request);\n  }\n\n  getRoleById(id: string): Observable<Identity.RoleItem> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/identity/roles/${id}`,\n    };\n\n    return this.rest.request<null, Identity.RoleItem>(request);\n  }\n\n  deleteRole(id: string): Observable<Identity.RoleItem> {\n    const request: Rest.Request<null> = {\n      method: 'DELETE',\n      url: `/api/identity/roles/${id}`,\n    };\n\n    return this.rest.request<null, Identity.RoleItem>(request);\n  }\n\n  createRole(body: Identity.RoleSaveRequest): Observable<Identity.RoleItem> {\n    const request: Rest.Request<Identity.RoleSaveRequest> = {\n      method: 'POST',\n      url: '/api/identity/roles',\n      body,\n    };\n\n    return this.rest.request<Identity.RoleSaveRequest, Identity.RoleItem>(request);\n  }\n\n  updateRole(body: Identity.RoleItem): Observable<Identity.RoleItem> {\n    const url = `/api/identity/roles/${body.id}`;\n    delete body.id;\n\n    const request: Rest.Request<Identity.RoleItem> = {\n      method: 'PUT',\n      url,\n      body,\n    };\n\n    return this.rest.request<Identity.RoleItem, Identity.RoleItem>(request);\n  }\n\n  getUsers(params = {} as ABP.PageQueryParams): Observable<Identity.UserResponse> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/identity/users',\n      params,\n    };\n\n    return this.rest.request<null, Identity.UserResponse>(request);\n  }\n\n  getUserById(id: string): Observable<Identity.UserItem> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/identity/users/${id}`,\n    };\n\n    return this.rest.request<null, Identity.UserItem>(request);\n  }\n\n  getUserRoles(id: string): Observable<Identity.RoleResponse> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/identity/users/${id}/roles`,\n    };\n\n    return this.rest.request<null, Identity.RoleResponse>(request);\n  }\n\n  deleteUser(id: string): Observable<null> {\n    const request: Rest.Request<null> = {\n      method: 'DELETE',\n      url: `/api/identity/users/${id}`,\n    };\n\n    return this.rest.request<null, null>(request);\n  }\n\n  createUser(body: Identity.UserSaveRequest): Observable<Identity.UserItem> {\n    const request: Rest.Request<Identity.UserSaveRequest> = {\n      method: 'POST',\n      url: '/api/identity/users',\n      body,\n    };\n\n    return this.rest.request<Identity.UserSaveRequest, Identity.UserItem>(request);\n  }\n\n  updateUser(body: Identity.UserItem): Observable<Identity.UserItem> {\n    const url = `/api/identity/users/${body.id}`;\n    delete body.id;\n\n    const request: Rest.Request<Identity.UserItem> = {\n      method: 'PUT',\n      url,\n      body,\n    };\n\n    return this.rest.request<Identity.UserItem, Identity.UserItem>(request);\n  }\n}\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { switchMap, tap, pluck } from 'rxjs/operators';\nimport {\n  CreateRole,\n  CreateUser,\n  DeleteRole,\n  DeleteUser,\n  GetRoleById,\n  GetRoles,\n  GetUserById,\n  GetUsers,\n  UpdateRole,\n  UpdateUser,\n  GetUserRoles,\n} from '../actions/identity.actions';\nimport { Identity } from '../models/identity';\nimport { IdentityService } from '../services/identity.service';\n\n@State<Identity.State>({\n  name: 'IdentityState',\n  defaults: { roles: {}, selectedRole: {}, users: {}, selectedUser: {} } as Identity.State,\n})\nexport class IdentityState {\n  @Selector()\n  static getRoles({ roles }: Identity.State): Identity.RoleItem[] {\n    return roles.items;\n  }\n\n  @Selector()\n  static getRolesTotalCount({ roles }: Identity.State): number {\n    return roles.totalCount;\n  }\n\n  @Selector()\n  static getUsers({ users }: Identity.State): Identity.UserItem[] {\n    return users.items;\n  }\n\n  @Selector()\n  static getUsersTotalCount({ users }: Identity.State): number {\n    return users.totalCount;\n  }\n\n  constructor(private identityService: IdentityService) {}\n\n  @Action(GetRoles)\n  getRoles({ patchState }: StateContext<Identity.State>, { payload }: GetRoles) {\n    return this.identityService.getRoles(payload).pipe(\n      tap(roles =>\n        patchState({\n          roles,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetRoleById)\n  getRole({ patchState }: StateContext<Identity.State>, { payload }: GetRoleById) {\n    return this.identityService.getRoleById(payload).pipe(\n      tap(selectedRole =>\n        patchState({\n          selectedRole,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteRole)\n  deleteRole({ dispatch }: StateContext<Identity.State>, { payload }: GetRoleById) {\n    return this.identityService.deleteRole(payload).pipe(switchMap(() => dispatch(new GetRoles())));\n  }\n\n  @Action(CreateRole)\n  addRole({ dispatch }: StateContext<Identity.State>, { payload }: CreateRole) {\n    return this.identityService.createRole(payload).pipe(switchMap(() => dispatch(new GetRoles())));\n  }\n\n  @Action(UpdateRole)\n  updateRole({ getState, dispatch }: StateContext<Identity.State>, { payload }: UpdateRole) {\n    return dispatch(new GetRoleById(payload.id)).pipe(\n      switchMap(() => this.identityService.updateRole({ ...getState().selectedRole, ...payload })),\n      switchMap(() => dispatch(new GetRoles())),\n    );\n  }\n\n  @Action(GetUsers)\n  getUsers({ patchState }: StateContext<Identity.State>, { payload }: GetUsers) {\n    return this.identityService.getUsers(payload).pipe(\n      tap(users =>\n        patchState({\n          users,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetUserById)\n  getUser({ patchState }: StateContext<Identity.State>, { payload }: GetUserById) {\n    return this.identityService.getUserById(payload).pipe(\n      tap(selectedUser =>\n        patchState({\n          selectedUser,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteUser)\n  deleteUser({ dispatch }: StateContext<Identity.State>, { payload }: GetUserById) {\n    return this.identityService.deleteUser(payload).pipe(switchMap(() => dispatch(new GetUsers())));\n  }\n\n  @Action(CreateUser)\n  addUser({ dispatch }: StateContext<Identity.State>, { payload }: CreateUser) {\n    return this.identityService.createUser(payload).pipe(switchMap(() => dispatch(new GetUsers())));\n  }\n\n  @Action(UpdateUser)\n  updateUser({ getState, dispatch }: StateContext<Identity.State>, { payload }: UpdateUser) {\n    return dispatch(new GetUserById(payload.id)).pipe(\n      switchMap(() => this.identityService.updateUser({ ...getState().selectedUser, ...payload })),\n      switchMap(() => dispatch(new GetUsers())),\n    );\n  }\n\n  @Action(GetUserRoles)\n  getUserRoles({ patchState }: StateContext<Identity.State>, { payload }: GetUserRoles) {\n    return this.identityService.getUserRoles(payload).pipe(\n      pluck('items'),\n      tap(selectedUserRoles =>\n        patchState({\n          selectedUserRoles,\n        }),\n      ),\n    );\n  }\n}\n","import { ABP } from '@abp/ng.core';\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\nimport { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck } from 'rxjs/operators';\nimport { CreateRole, DeleteRole, GetRoleById, GetRoles, UpdateRole } from '../../actions/identity.actions';\nimport { Identity } from '../../models/identity';\nimport { IdentityState } from '../../states/identity.state';\n\n@Component({\n  selector: 'abp-roles',\n  templateUrl: './roles.component.html',\n})\nexport class RolesComponent {\n  @Select(IdentityState.getRoles)\n  data$: Observable<Identity.RoleItem[]>;\n\n  @Select(IdentityState.getRolesTotalCount)\n  totalCount$: Observable<number>;\n\n  form: FormGroup;\n\n  selected: Identity.RoleItem;\n\n  isModalVisible: boolean;\n\n  visiblePermissions: boolean = false;\n\n  providerKey: string;\n\n  pageQuery: ABP.PageQueryParams = {\n    sorting: 'name',\n  };\n\n  loading: boolean = false;\n\n  modalBusy: boolean = false;\n\n  sortOrder: string = 'asc';\n\n  @ViewChild('modalContent', { static: false })\n  modalContent: TemplateRef<any>;\n\n  constructor(private confirmationService: ConfirmationService, private fb: FormBuilder, private store: Store) {}\n\n  onSearch(value) {\n    this.pageQuery.filter = value;\n    this.get();\n  }\n\n  createForm() {\n    this.form = this.fb.group({\n      name: new FormControl({ value: this.selected.name || '', disabled: this.selected.isStatic }, [\n        Validators.required,\n        Validators.maxLength(256),\n      ]),\n      isDefault: [this.selected.isDefault || false],\n      isPublic: [this.selected.isPublic || false],\n    });\n  }\n\n  openModal() {\n    this.createForm();\n    this.isModalVisible = true;\n  }\n\n  onAdd() {\n    this.selected = {} as Identity.RoleItem;\n    this.openModal();\n  }\n\n  onEdit(id: string) {\n    this.store\n      .dispatch(new GetRoleById(id))\n      .pipe(pluck('IdentityState', 'selectedRole'))\n      .subscribe(selectedRole => {\n        this.selected = selectedRole;\n        this.openModal();\n      });\n  }\n\n  save() {\n    if (!this.form.valid) return;\n    this.modalBusy = true;\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateRole({ ...this.form.value, id: this.selected.id })\n          : new CreateRole(this.form.value),\n      )\n      .subscribe(() => {\n        this.modalBusy = false;\n        this.isModalVisible = false;\n      });\n  }\n\n  delete(id: string, name: string) {\n    this.confirmationService\n      .warn('AbpIdentity::RoleDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\n        messageLocalizationParams: [name],\n      })\n      .subscribe((status: Toaster.Status) => {\n        if (status === Toaster.Status.confirm) {\n          this.store.dispatch(new DeleteRole(id));\n        }\n      });\n  }\n\n  onPageChange(data) {\n    this.pageQuery.skipCount = data.first;\n    this.pageQuery.maxResultCount = data.rows;\n\n    this.get();\n  }\n\n  get() {\n    this.loading = true;\n    this.store\n      .dispatch(new GetRoles(this.pageQuery))\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe();\n  }\n\n  changeSortOrder() {\n    this.sortOrder = this.sortOrder.toLowerCase() === 'asc' ? 'desc' : 'asc';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { GetRoles } from '../actions/identity.actions';\nimport { Identity } from '../models/identity';\nimport { IdentityState } from '../states/identity.state';\n\n@Injectable()\nexport class RoleResolver implements Resolve<Identity.State> {\n  constructor(private store: Store) {}\n\n  resolve() {\n    const roles = this.store.selectSnapshot(IdentityState.getRoles);\n    return roles && roles.length ? null : this.store.dispatch(new GetRoles());\n  }\n}\n","import { ABP } from '@abp/ng.core';\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\nimport { Component, TemplateRef, TrackByFunction, ViewChild } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\nimport snq from 'snq';\nimport {\n  CreateUser,\n  DeleteUser,\n  GetUserById,\n  GetUserRoles,\n  GetUsers,\n  UpdateUser,\n} from '../../actions/identity.actions';\nimport { Identity } from '../../models/identity';\nimport { IdentityState } from '../../states/identity.state';\n@Component({\n  selector: 'abp-users',\n  templateUrl: './users.component.html',\n})\nexport class UsersComponent {\n  @Select(IdentityState.getUsers)\n  data$: Observable<Identity.UserItem[]>;\n\n  @Select(IdentityState.getUsersTotalCount)\n  totalCount$: Observable<number>;\n\n  @ViewChild('modalContent', { static: false })\n  modalContent: TemplateRef<any>;\n\n  form: FormGroup;\n\n  selected: Identity.UserItem;\n\n  selectedUserRoles: Identity.RoleItem[];\n\n  roles: Identity.RoleItem[];\n\n  visiblePermissions: boolean = false;\n\n  providerKey: string;\n\n  pageQuery: ABP.PageQueryParams = {\n    sorting: 'userName',\n  };\n\n  isModalVisible: boolean;\n\n  loading: boolean = false;\n\n  modalBusy: boolean = false;\n\n  sortOrder: string = 'asc';\n\n  trackByFn: TrackByFunction<AbstractControl> = (index, item) => Object.keys(item)[0] || index;\n\n  get roleGroups(): FormGroup[] {\n    return snq(() => (this.form.get('roleNames') as FormArray).controls as FormGroup[], []);\n  }\n\n  constructor(private confirmationService: ConfirmationService, private fb: FormBuilder, private store: Store) {}\n\n  onSearch(value) {\n    this.pageQuery.filter = value;\n    this.get();\n  }\n\n  buildForm() {\n    this.roles = this.store.selectSnapshot(IdentityState.getRoles);\n    this.form = this.fb.group({\n      userName: [this.selected.userName || '', [Validators.required, Validators.maxLength(256)]],\n      email: [this.selected.email || '', [Validators.required, Validators.email, Validators.maxLength(256)]],\n      name: [this.selected.name || '', [Validators.maxLength(64)]],\n      surname: [this.selected.surname || '', [Validators.maxLength(64)]],\n      phoneNumber: [this.selected.phoneNumber || '', [Validators.maxLength(16)]],\n      lockoutEnabled: [this.selected.twoFactorEnabled || (this.selected.id ? false : true)],\n      twoFactorEnabled: [this.selected.twoFactorEnabled || (this.selected.id ? false : true)],\n      roleNames: this.fb.array(\n        this.roles.map(role =>\n          this.fb.group({\n            [role.name]: [!!snq(() => this.selectedUserRoles.find(userRole => userRole.id === role.id))],\n          }),\n        ),\n      ),\n    });\n    if (!this.selected.userName) {\n      this.form.addControl('password', new FormControl('', [Validators.required, Validators.maxLength(32)]));\n    }\n  }\n\n  openModal() {\n    this.buildForm();\n    this.isModalVisible = true;\n  }\n\n  onAdd() {\n    this.selected = {} as Identity.UserItem;\n    this.selectedUserRoles = [] as Identity.RoleItem[];\n    this.openModal();\n  }\n\n  onEdit(id: string) {\n    this.store\n      .dispatch(new GetUserById(id))\n      .pipe(\n        switchMap(() => this.store.dispatch(new GetUserRoles(id))),\n        pluck('IdentityState'),\n        take(1),\n      )\n      .subscribe((state: Identity.State) => {\n        this.selected = state.selectedUser;\n        this.selectedUserRoles = state.selectedUserRoles;\n        this.openModal();\n      });\n  }\n\n  save() {\n    if (!this.form.valid) return;\n    this.modalBusy = true;\n\n    const { roleNames } = this.form.value;\n    const mappedRoleNames = snq(\n      () => roleNames.filter(role => !!role[Object.keys(role)[0]]).map(role => Object.keys(role)[0]),\n      [],\n    );\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateUser({\n              ...this.form.value,\n              id: this.selected.id,\n              roleNames: mappedRoleNames,\n            })\n          : new CreateUser({\n              ...this.form.value,\n              roleNames: mappedRoleNames,\n            }),\n      )\n      .subscribe(() => {\n        this.modalBusy = false;\n        this.isModalVisible = false;\n      });\n  }\n\n  delete(id: string, userName: string) {\n    this.confirmationService\n      .warn('AbpIdentity::UserDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\n        messageLocalizationParams: [userName],\n      })\n      .subscribe((status: Toaster.Status) => {\n        if (status === Toaster.Status.confirm) {\n          this.store.dispatch(new DeleteUser(id));\n        }\n      });\n  }\n\n  onPageChange(data) {\n    this.pageQuery.skipCount = data.first;\n    this.pageQuery.maxResultCount = data.rows;\n\n    this.get();\n  }\n\n  get() {\n    this.loading = true;\n    this.store\n      .dispatch(new GetUsers(this.pageQuery))\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe();\n  }\n\n  changeSortOrder() {\n    this.sortOrder = this.sortOrder.toLowerCase() === 'asc' ? 'desc' : 'asc';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { GetUsers } from '../actions/identity.actions';\nimport { Identity } from '../models/identity';\nimport { IdentityState } from '../states/identity.state';\n\n@Injectable()\nexport class UserResolver implements Resolve<Identity.State> {\n  constructor(private store: Store) {}\n\n  resolve() {\n    const users = this.store.selectSnapshot(IdentityState.getUsers);\n    return users && users.length ? null : this.store.dispatch(new GetUsers());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RolesComponent } from './components/roles/roles.component';\nimport { RoleResolver } from './resolvers/roles.resolver';\nimport { DynamicLayoutComponent, AuthGuard, PermissionGuard } from '@abp/ng.core';\nimport { UsersComponent } from './components/users/users.component';\nimport { UserResolver } from './resolvers/users.resolver';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'roles', pathMatch: 'full' },\n  {\n    path: 'roles',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard],\n    data: { requiredPolicy: 'AbpIdentity.Roles' },\n    children: [{ path: '', component: RolesComponent, resolve: [RoleResolver] }],\n  },\n  {\n    path: 'users',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard],\n    data: { requiredPolicy: 'AbpIdentity.Users' },\n    children: [\n      {\n        path: '',\n        component: UsersComponent,\n        resolve: [RoleResolver, UserResolver],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [RoleResolver, UserResolver],\n})\nexport class IdentityRoutingModule {}\n","import { CoreModule } from '@abp/ng.core';\nimport { NgModule, Provider } from '@angular/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { RolesComponent } from './components/roles/roles.component';\nimport { IdentityRoutingModule } from './identity-routing.module';\nimport { IdentityState } from './states/identity.state';\nimport { NgbTabsetModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { UsersComponent } from './components/users/users.component';\nimport { PermissionManagementModule } from '@abp/ng.permission-management';\nimport { TableModule } from 'primeng/table';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\n\n@NgModule({\n  declarations: [RolesComponent, UsersComponent],\n  imports: [\n    NgxsModule.forFeature([IdentityState]),\n    CoreModule,\n    IdentityRoutingModule,\n    NgbTabsetModule,\n    ThemeSharedModule,\n    TableModule,\n    NgbDropdownModule,\n    PermissionManagementModule,\n    NgxValidateCoreModule,\n  ],\n})\nexport class IdentityModule {}\n\nexport function IdentityProviders(): Provider[] {\n  return [];\n}\n","import { eLayoutType, ABP } from '@abp/ng.core';\n\nexport const IDENTITY_ROUTES = {\n  routes: [\n    {\n      name: 'AbpUiNavigation::Menu:Administration',\n      path: '',\n      order: 1,\n      wrapper: true,\n    },\n    {\n      name: 'AbpIdentity::Menu:IdentityManagement',\n      path: 'identity',\n      order: 1,\n      parentName: 'AbpUiNavigation::Menu:Administration',\n      layout: eLayoutType.application,\n      iconClass: 'fa fa-id-card-o',\n      children: [\n        { path: 'roles', name: 'AbpIdentity::Roles', order: 2, requiredPolicy: 'AbpIdentity.Roles' },\n        { path: 'users', name: 'AbpIdentity::Users', order: 1, requiredPolicy: 'AbpIdentity.Users' },\n      ],\n    },\n  ] as ABP.FullRoute[],\n};\n","import { ABP } from '@abp/ng.core';\n\nexport namespace Identity {\n  export interface State {\n    roles: RoleResponse;\n    users: UserResponse;\n    selectedRole: RoleItem;\n    selectedUser: UserItem;\n    selectedUserRoles: RoleItem[];\n  }\n\n  export type RoleResponse = ABP.PagedResponse<RoleItem>;\n\n  export interface RoleSaveRequest {\n    name: string;\n    isDefault: boolean;\n    isPublic: boolean;\n  }\n\n  export interface RoleItem extends RoleSaveRequest {\n    isStatic: boolean;\n    concurrencyStamp: string;\n    id: string;\n  }\n\n  export type UserResponse = ABP.PagedResponse<UserItem>;\n\n  export interface UserItem extends User {\n    tenantId: string;\n    emailConfirmed: boolean;\n    phoneNumberConfirmed: boolean;\n    isLockedOut: boolean;\n    concurrencyStamp: string;\n    id: string;\n  }\n\n  export interface User {\n    userName: string;\n    name: string;\n    surname: string;\n    email: string;\n    phoneNumber: string;\n    twoFactorEnabled: true;\n    lockoutEnabled: true;\n  }\n\n  export interface UserSaveRequest extends User {\n    password: string;\n    roleNames: string[];\n  }\n}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}