{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.identity/lib/actions/identity.actions.ts","ng://@abp/ng.identity/lib/services/identity.service.ts","ng://@abp/ng.identity/lib/states/identity.state.ts","ng://@abp/ng.identity/lib/components/roles/roles.component.ts","ng://@abp/ng.identity/lib/components/users/users.component.ts","ng://@abp/ng.identity/lib/identity-routing.module.ts","ng://@abp/ng.identity/lib/identity.module.ts","ng://@abp/ng.identity/lib/constants/routes.ts","ng://@abp/ng.identity/lib/models/identity.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","GetRoles","payload","type","GetRoleById","DeleteRole","CreateRole","UpdateRole","GetUsers","GetUserById","DeleteUser","CreateUser","UpdateUser","GetUserRoles","IdentityService","rest","getRoles","params","request","method","url","getRoleById","id","deleteRole","createRole","body","updateRole","getUsers","getUserById","getUserRoles","deleteUser","createUser","updateUser","Injectable","args","providedIn","RestService","IdentityState","identityService","_a","roles","items","getRolesTotalCount","totalCount","users","getUsersTotalCount","_b","patchState","pipe","tap","getRole","selectedRole","dispatch","switchMap","addRole","_this","getState","getUser","selectedUser","addUser","pluck","selectedUserRoles","tslib_1.__decorate","Action","Selector","State","name","defaults","RolesComponent","confirmationService","fb","store","visiblePermissions","pageQuery","loading","modalBusy","sortOrder","sortKey","ngOnInit","get","createForm","form","group","FormControl","value","selected","disabled","isStatic","Validators","required","maxLength","isDefault","isPublic","openModal","isModalVisible","onAdd","onEdit","subscribe","save","valid","delete","warn","messageLocalizationParams","status","onPageChange","data","skipCount","first","maxResultCount","rows","finalize","Component","selector","template","ConfirmationService","FormBuilder","Store","ViewChild","static","Select","Observable","UsersComponent","trackByFn","index","item","keys","snq","onSearch","filter","buildForm","selectSnapshot","userName","email","surname","phoneNumber","lockoutEnabled","twoFactorEnabled","roleNames","array","map","role","find","userRole","addControl","take","state","mappedRoleNames","routes","path","redirectTo","pathMatch","component","DynamicLayoutComponent","canActivate","AuthGuard","PermissionGuard","children","requiredPolicy","IdentityRoutingModule","NgModule","imports","RouterModule","forChild","exports","IdentityModule","declarations","NgxsModule","forFeature","CoreModule","NgbTabsetModule","ThemeSharedModule","TableModule","NgbDropdownModule","PermissionManagementModule","NgxValidateCoreModule","Identity","RoleSaveRequest","RoleItem","UserItem","User","UserSaveRequest","order","wrapper","parentName","layout","iconClass"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Identity } from '../models/identity';\nimport { ABP } from '@abp/ng.core';\n\nexport class GetRoles {\n  static readonly type = '[Identity] Get Roles';\n  constructor(public payload?: ABP.PageQueryParams) {}\n}\n\nexport class GetRoleById {\n  static readonly type = '[Identity] Get Role By Id';\n  constructor(public payload: string) {}\n}\n\nexport class DeleteRole {\n  static readonly type = '[Identity] Delete Role';\n  constructor(public payload: string) {}\n}\n\nexport class CreateRole {\n  static readonly type = '[Identity] Create Role';\n  constructor(public payload: Identity.RoleSaveRequest) {}\n}\n\nexport class UpdateRole {\n  static readonly type = '[Identity] Update Role';\n  constructor(public payload: Identity.RoleItem) {}\n}\n\nexport class GetUsers {\n  static readonly type = '[Identity] Get Users';\n  constructor(public payload?: ABP.PageQueryParams) {}\n}\n\nexport class GetUserById {\n  static readonly type = '[Identity] Get User By Id';\n  constructor(public payload: string) {}\n}\n\nexport class DeleteUser {\n  static readonly type = '[Identity] Delete User';\n  constructor(public payload: string) {}\n}\n\nexport class CreateUser {\n  static readonly type = '[Identity] Create User';\n  constructor(public payload: Identity.UserSaveRequest) {}\n}\n\nexport class UpdateUser {\n  static readonly type = '[Identity] Update User';\n  constructor(public payload: Identity.UserSaveRequest & { id: string }) {}\n}\n\nexport class GetUserRoles {\n  static readonly type = '[Identity] Get User Roles';\n  constructor(public payload: string) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService, Rest, ABP } from '@abp/ng.core';\nimport { Identity } from '../models/identity';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityService {\n  constructor(private rest: RestService) {}\n\n  getRoles(params = {} as ABP.PageQueryParams): Observable<Identity.RoleResponse> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/identity/roles',\n      params,\n    };\n\n    return this.rest.request<null, Identity.RoleResponse>(request);\n  }\n\n  getRoleById(id: string): Observable<Identity.RoleItem> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/identity/roles/${id}`,\n    };\n\n    return this.rest.request<null, Identity.RoleItem>(request);\n  }\n\n  deleteRole(id: string): Observable<Identity.RoleItem> {\n    const request: Rest.Request<null> = {\n      method: 'DELETE',\n      url: `/api/identity/roles/${id}`,\n    };\n\n    return this.rest.request<null, Identity.RoleItem>(request);\n  }\n\n  createRole(body: Identity.RoleSaveRequest): Observable<Identity.RoleItem> {\n    const request: Rest.Request<Identity.RoleSaveRequest> = {\n      method: 'POST',\n      url: '/api/identity/roles',\n      body,\n    };\n\n    return this.rest.request<Identity.RoleSaveRequest, Identity.RoleItem>(request);\n  }\n\n  updateRole(body: Identity.RoleItem): Observable<Identity.RoleItem> {\n    const url = `/api/identity/roles/${body.id}`;\n    delete body.id;\n\n    const request: Rest.Request<Identity.RoleItem> = {\n      method: 'PUT',\n      url,\n      body,\n    };\n\n    return this.rest.request<Identity.RoleItem, Identity.RoleItem>(request);\n  }\n\n  getUsers(params = {} as ABP.PageQueryParams): Observable<Identity.UserResponse> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/identity/users',\n      params,\n    };\n\n    return this.rest.request<null, Identity.UserResponse>(request);\n  }\n\n  getUserById(id: string): Observable<Identity.UserItem> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/identity/users/${id}`,\n    };\n\n    return this.rest.request<null, Identity.UserItem>(request);\n  }\n\n  getUserRoles(id: string): Observable<Identity.RoleResponse> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/identity/users/${id}/roles`,\n    };\n\n    return this.rest.request<null, Identity.RoleResponse>(request);\n  }\n\n  deleteUser(id: string): Observable<null> {\n    const request: Rest.Request<null> = {\n      method: 'DELETE',\n      url: `/api/identity/users/${id}`,\n    };\n\n    return this.rest.request<null, null>(request);\n  }\n\n  createUser(body: Identity.UserSaveRequest): Observable<Identity.UserItem> {\n    const request: Rest.Request<Identity.UserSaveRequest> = {\n      method: 'POST',\n      url: '/api/identity/users',\n      body,\n    };\n\n    return this.rest.request<Identity.UserSaveRequest, Identity.UserItem>(request);\n  }\n\n  updateUser(body: Identity.UserItem): Observable<Identity.UserItem> {\n    const url = `/api/identity/users/${body.id}`;\n    delete body.id;\n\n    const request: Rest.Request<Identity.UserItem> = {\n      method: 'PUT',\n      url,\n      body,\n    };\n\n    return this.rest.request<Identity.UserItem, Identity.UserItem>(request);\n  }\n}\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { switchMap, tap, pluck } from 'rxjs/operators';\nimport {\n  CreateRole,\n  CreateUser,\n  DeleteRole,\n  DeleteUser,\n  GetRoleById,\n  GetRoles,\n  GetUserById,\n  GetUsers,\n  UpdateRole,\n  UpdateUser,\n  GetUserRoles,\n} from '../actions/identity.actions';\nimport { Identity } from '../models/identity';\nimport { IdentityService } from '../services/identity.service';\n\n@State<Identity.State>({\n  name: 'IdentityState',\n  defaults: { roles: {}, selectedRole: {}, users: {}, selectedUser: {} } as Identity.State,\n})\nexport class IdentityState {\n  @Selector()\n  static getRoles({ roles }: Identity.State): Identity.RoleItem[] {\n    return roles.items || [];\n  }\n\n  @Selector()\n  static getRolesTotalCount({ roles }: Identity.State): number {\n    return roles.totalCount || 0;\n  }\n\n  @Selector()\n  static getUsers({ users }: Identity.State): Identity.UserItem[] {\n    return users.items || [];\n  }\n\n  @Selector()\n  static getUsersTotalCount({ users }: Identity.State): number {\n    return users.totalCount || 0;\n  }\n\n  constructor(private identityService: IdentityService) {}\n\n  @Action(GetRoles)\n  getRoles({ patchState }: StateContext<Identity.State>, { payload }: GetRoles) {\n    return this.identityService.getRoles(payload).pipe(\n      tap(roles =>\n        patchState({\n          roles,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetRoleById)\n  getRole({ patchState }: StateContext<Identity.State>, { payload }: GetRoleById) {\n    return this.identityService.getRoleById(payload).pipe(\n      tap(selectedRole =>\n        patchState({\n          selectedRole,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteRole)\n  deleteRole({ dispatch }: StateContext<Identity.State>, { payload }: GetRoleById) {\n    return this.identityService.deleteRole(payload).pipe(switchMap(() => dispatch(new GetRoles())));\n  }\n\n  @Action(CreateRole)\n  addRole({ dispatch }: StateContext<Identity.State>, { payload }: CreateRole) {\n    return this.identityService.createRole(payload).pipe(switchMap(() => dispatch(new GetRoles())));\n  }\n\n  @Action(UpdateRole)\n  updateRole({ getState, dispatch }: StateContext<Identity.State>, { payload }: UpdateRole) {\n    return dispatch(new GetRoleById(payload.id)).pipe(\n      switchMap(() => this.identityService.updateRole({ ...getState().selectedRole, ...payload })),\n      switchMap(() => dispatch(new GetRoles())),\n    );\n  }\n\n  @Action(GetUsers)\n  getUsers({ patchState }: StateContext<Identity.State>, { payload }: GetUsers) {\n    return this.identityService.getUsers(payload).pipe(\n      tap(users =>\n        patchState({\n          users,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetUserById)\n  getUser({ patchState }: StateContext<Identity.State>, { payload }: GetUserById) {\n    return this.identityService.getUserById(payload).pipe(\n      tap(selectedUser =>\n        patchState({\n          selectedUser,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteUser)\n  deleteUser({ dispatch }: StateContext<Identity.State>, { payload }: GetUserById) {\n    return this.identityService.deleteUser(payload).pipe(switchMap(() => dispatch(new GetUsers())));\n  }\n\n  @Action(CreateUser)\n  addUser({ dispatch }: StateContext<Identity.State>, { payload }: CreateUser) {\n    return this.identityService.createUser(payload).pipe(switchMap(() => dispatch(new GetUsers())));\n  }\n\n  @Action(UpdateUser)\n  updateUser({ getState, dispatch }: StateContext<Identity.State>, { payload }: UpdateUser) {\n    return dispatch(new GetUserById(payload.id)).pipe(\n      switchMap(() => this.identityService.updateUser({ ...getState().selectedUser, ...payload })),\n      switchMap(() => dispatch(new GetUsers())),\n    );\n  }\n\n  @Action(GetUserRoles)\n  getUserRoles({ patchState }: StateContext<Identity.State>, { payload }: GetUserRoles) {\n    return this.identityService.getUserRoles(payload).pipe(\n      pluck('items'),\n      tap(selectedUserRoles =>\n        patchState({\n          selectedUserRoles,\n        }),\n      ),\n    );\n  }\n}\n","import { ABP } from '@abp/ng.core';\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\nimport { Component, TemplateRef, ViewChild, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck } from 'rxjs/operators';\nimport { CreateRole, DeleteRole, GetRoleById, GetRoles, UpdateRole } from '../../actions/identity.actions';\nimport { Identity } from '../../models/identity';\nimport { IdentityState } from '../../states/identity.state';\n\n@Component({\n  selector: 'abp-roles',\n  templateUrl: './roles.component.html',\n})\nexport class RolesComponent implements OnInit {\n  @Select(IdentityState.getRoles)\n  data$: Observable<Identity.RoleItem[]>;\n\n  @Select(IdentityState.getRolesTotalCount)\n  totalCount$: Observable<number>;\n\n  form: FormGroup;\n\n  selected: Identity.RoleItem;\n\n  isModalVisible: boolean;\n\n  visiblePermissions = false;\n\n  providerKey: string;\n\n  pageQuery: ABP.PageQueryParams = {};\n\n  loading = false;\n\n  modalBusy = false;\n\n  sortOrder = '';\n\n  sortKey = '';\n\n  @ViewChild('modalContent', { static: false })\n  modalContent: TemplateRef<any>;\n\n  constructor(private confirmationService: ConfirmationService, private fb: FormBuilder, private store: Store) {}\n\n  ngOnInit() {\n    this.get();\n  }\n\n  createForm() {\n    this.form = this.fb.group({\n      name: new FormControl({ value: this.selected.name || '', disabled: this.selected.isStatic }, [\n        Validators.required,\n        Validators.maxLength(256),\n      ]),\n      isDefault: [this.selected.isDefault || false],\n      isPublic: [this.selected.isPublic || false],\n    });\n  }\n\n  openModal() {\n    this.createForm();\n    this.isModalVisible = true;\n  }\n\n  onAdd() {\n    this.selected = {} as Identity.RoleItem;\n    this.openModal();\n  }\n\n  onEdit(id: string) {\n    this.store\n      .dispatch(new GetRoleById(id))\n      .pipe(pluck('IdentityState', 'selectedRole'))\n      .subscribe(selectedRole => {\n        this.selected = selectedRole;\n        this.openModal();\n      });\n  }\n\n  save() {\n    if (!this.form.valid) return;\n    this.modalBusy = true;\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateRole({ ...this.form.value, id: this.selected.id })\n          : new CreateRole(this.form.value),\n      )\n      .subscribe(() => {\n        this.modalBusy = false;\n        this.isModalVisible = false;\n      });\n  }\n\n  delete(id: string, name: string) {\n    this.confirmationService\n      .warn('AbpIdentity::RoleDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\n        messageLocalizationParams: [name],\n      })\n      .subscribe((status: Toaster.Status) => {\n        if (status === Toaster.Status.confirm) {\n          this.store.dispatch(new DeleteRole(id));\n        }\n      });\n  }\n\n  onPageChange(data) {\n    this.pageQuery.skipCount = data.first;\n    this.pageQuery.maxResultCount = data.rows;\n\n    this.get();\n  }\n\n  get() {\n    this.loading = true;\n    this.store\n      .dispatch(new GetRoles(this.pageQuery))\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe();\n  }\n}\n","import { ABP } from '@abp/ng.core';\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\nimport { Component, TemplateRef, TrackByFunction, ViewChild, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\nimport snq from 'snq';\nimport {\n  CreateUser,\n  DeleteUser,\n  GetUserById,\n  GetUserRoles,\n  GetUsers,\n  UpdateUser,\n  GetRoles,\n} from '../../actions/identity.actions';\nimport { Identity } from '../../models/identity';\nimport { IdentityState } from '../../states/identity.state';\n@Component({\n  selector: 'abp-users',\n  templateUrl: './users.component.html',\n})\nexport class UsersComponent implements OnInit {\n  @Select(IdentityState.getUsers)\n  data$: Observable<Identity.UserItem[]>;\n\n  @Select(IdentityState.getUsersTotalCount)\n  totalCount$: Observable<number>;\n\n  @ViewChild('modalContent', { static: false })\n  modalContent: TemplateRef<any>;\n\n  form: FormGroup;\n\n  selected: Identity.UserItem;\n\n  selectedUserRoles: Identity.RoleItem[];\n\n  roles: Identity.RoleItem[];\n\n  visiblePermissions = false;\n\n  providerKey: string;\n\n  pageQuery: ABP.PageQueryParams = {};\n\n  isModalVisible: boolean;\n\n  loading = false;\n\n  modalBusy = false;\n\n  sortOrder = '';\n\n  sortKey = '';\n\n  trackByFn: TrackByFunction<AbstractControl> = (index, item) => Object.keys(item)[0] || index;\n\n  get roleGroups(): FormGroup[] {\n    return snq(() => (this.form.get('roleNames') as FormArray).controls as FormGroup[], []);\n  }\n\n  constructor(private confirmationService: ConfirmationService, private fb: FormBuilder, private store: Store) {}\n\n  ngOnInit() {\n    this.get();\n  }\n\n  onSearch(value) {\n    this.pageQuery.filter = value;\n    this.get();\n  }\n\n  buildForm() {\n    this.store.dispatch(new GetRoles()).subscribe(() => {\n      this.roles = this.store.selectSnapshot(IdentityState.getRoles);\n      this.form = this.fb.group({\n        userName: [this.selected.userName || '', [Validators.required, Validators.maxLength(256)]],\n        email: [this.selected.email || '', [Validators.required, Validators.email, Validators.maxLength(256)]],\n        name: [this.selected.name || '', [Validators.maxLength(64)]],\n        surname: [this.selected.surname || '', [Validators.maxLength(64)]],\n        phoneNumber: [this.selected.phoneNumber || '', [Validators.maxLength(16)]],\n        lockoutEnabled: [this.selected.twoFactorEnabled || (this.selected.id ? false : true)],\n        twoFactorEnabled: [this.selected.twoFactorEnabled || (this.selected.id ? false : true)],\n        roleNames: this.fb.array(\n          this.roles.map(role =>\n            this.fb.group({\n              [role.name]: [!!snq(() => this.selectedUserRoles.find(userRole => userRole.id === role.id))],\n            }),\n          ),\n        ),\n      });\n\n      if (!this.selected.userName) {\n        this.form.addControl('password', new FormControl('', [Validators.required, Validators.maxLength(32)]));\n      } else {\n        this.form.addControl('password', new FormControl('', [Validators.maxLength(32)]));\n      }\n    });\n  }\n\n  openModal() {\n    this.buildForm();\n    this.isModalVisible = true;\n  }\n\n  onAdd() {\n    this.selected = {} as Identity.UserItem;\n    this.selectedUserRoles = [] as Identity.RoleItem[];\n    this.openModal();\n  }\n\n  onEdit(id: string) {\n    this.store\n      .dispatch(new GetUserById(id))\n      .pipe(\n        switchMap(() => this.store.dispatch(new GetUserRoles(id))),\n        pluck('IdentityState'),\n        take(1),\n      )\n      .subscribe((state: Identity.State) => {\n        this.selected = state.selectedUser;\n        this.selectedUserRoles = state.selectedUserRoles;\n        this.openModal();\n      });\n  }\n\n  save() {\n    if (!this.form.valid) return;\n    this.modalBusy = true;\n\n    const { roleNames } = this.form.value;\n    const mappedRoleNames = snq(\n      () => roleNames.filter(role => !!role[Object.keys(role)[0]]).map(role => Object.keys(role)[0]),\n      [],\n    );\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateUser({\n              ...this.form.value,\n              id: this.selected.id,\n              roleNames: mappedRoleNames,\n            })\n          : new CreateUser({\n              ...this.form.value,\n              roleNames: mappedRoleNames,\n            }),\n      )\n      .subscribe(() => {\n        this.modalBusy = false;\n        this.isModalVisible = false;\n      });\n  }\n\n  delete(id: string, userName: string) {\n    this.confirmationService\n      .warn('AbpIdentity::UserDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\n        messageLocalizationParams: [userName],\n      })\n      .subscribe((status: Toaster.Status) => {\n        if (status === Toaster.Status.confirm) {\n          this.store.dispatch(new DeleteUser(id));\n        }\n      });\n  }\n\n  onPageChange(data) {\n    this.pageQuery.skipCount = data.first;\n    this.pageQuery.maxResultCount = data.rows;\n\n    this.get();\n  }\n\n  get() {\n    this.loading = true;\n    this.store\n      .dispatch(new GetUsers(this.pageQuery))\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe();\n  }\n}\n","import { AuthGuard, DynamicLayoutComponent, PermissionGuard } from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RolesComponent } from './components/roles/roles.component';\nimport { UsersComponent } from './components/users/users.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'roles', pathMatch: 'full' },\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard],\n    children: [\n      {\n        path: 'roles',\n        component: RolesComponent,\n        data: { requiredPolicy: 'AbpIdentity.Roles' },\n      },\n      {\n        path: 'users',\n        component: UsersComponent,\n        data: { requiredPolicy: 'AbpIdentity.Users' },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IdentityRoutingModule {}\n","import { CoreModule } from '@abp/ng.core';\nimport { NgModule, Provider } from '@angular/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { RolesComponent } from './components/roles/roles.component';\nimport { IdentityRoutingModule } from './identity-routing.module';\nimport { IdentityState } from './states/identity.state';\nimport { NgbTabsetModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { UsersComponent } from './components/users/users.component';\nimport { PermissionManagementModule } from '@abp/ng.permission-management';\nimport { TableModule } from 'primeng/table';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\n\n@NgModule({\n  declarations: [RolesComponent, UsersComponent],\n  imports: [\n    NgxsModule.forFeature([IdentityState]),\n    CoreModule,\n    IdentityRoutingModule,\n    NgbTabsetModule,\n    ThemeSharedModule,\n    TableModule,\n    NgbDropdownModule,\n    PermissionManagementModule,\n    NgxValidateCoreModule,\n  ],\n})\nexport class IdentityModule {}\n\n/**\n *\n * @deprecated\n */\nexport function IdentityProviders(): Provider[] {\n  return [];\n}\n","import { eLayoutType, ABP } from '@abp/ng.core';\n\n/**\n *\n * @deprecated\n */\nexport const IDENTITY_ROUTES = {\n  routes: [\n    {\n      name: 'AbpUiNavigation::Menu:Administration',\n      path: '',\n      order: 1,\n      wrapper: true,\n    },\n    {\n      name: 'AbpIdentity::Menu:IdentityManagement',\n      path: 'identity',\n      order: 1,\n      parentName: 'AbpUiNavigation::Menu:Administration',\n      layout: eLayoutType.application,\n      iconClass: 'fa fa-id-card-o',\n      children: [\n        { path: 'roles', name: 'AbpIdentity::Roles', order: 2, requiredPolicy: 'AbpIdentity.Roles' },\n        { path: 'users', name: 'AbpIdentity::Users', order: 1, requiredPolicy: 'AbpIdentity.Users' },\n      ],\n    },\n  ] as ABP.FullRoute[],\n};\n","import { ABP } from '@abp/ng.core';\n\nexport namespace Identity {\n  export interface State {\n    roles: RoleResponse;\n    users: UserResponse;\n    selectedRole: RoleItem;\n    selectedUser: UserItem;\n    selectedUserRoles: RoleItem[];\n  }\n\n  export type RoleResponse = ABP.PagedResponse<RoleItem>;\n\n  export interface RoleSaveRequest {\n    name: string;\n    isDefault: boolean;\n    isPublic: boolean;\n  }\n\n  export interface RoleItem extends RoleSaveRequest {\n    isStatic: boolean;\n    concurrencyStamp: string;\n    id: string;\n  }\n\n  export type UserResponse = ABP.PagedResponse<UserItem>;\n\n  export interface UserItem extends User {\n    tenantId: string;\n    emailConfirmed: boolean;\n    phoneNumberConfirmed: boolean;\n    isLockedOut: boolean;\n    concurrencyStamp: string;\n    id: string;\n  }\n\n  export interface User {\n    userName: string;\n    name: string;\n    surname: string;\n    email: string;\n    phoneNumber: string;\n    twoFactorEnabled: true;\n    lockoutEnabled: true;\n  }\n\n  export interface UserSaveRequest extends User {\n    password: string;\n    roleNames: string[];\n  }\n}\n"]}