{"version":3,"file":"abp-ng.permission-management.js","sources":["ng://@abp/ng.permission-management/lib/actions/permission-management.actions.ts","ng://@abp/ng.permission-management/lib/services/permission-management.service.ts","ng://@abp/ng.permission-management/lib/states/permission-management.state.ts","ng://@abp/ng.permission-management/lib/components/permission-management.component.ts","ng://@abp/ng.permission-management/lib/permission-management.module.ts","ng://@abp/ng.permission-management/lib/models/permission-management.ts","ng://@abp/ng.permission-management/lib/services/permission-management-state.service.ts"],"sourcesContent":["import { PermissionManagement } from '../models/permission-management';\r\n\r\nexport class GetPermissions {\r\n  static readonly type = '[PermissionManagement] Get Permissions';\r\n  constructor(public payload: PermissionManagement.GrantedProvider) {}\r\n}\r\n\r\nexport class UpdatePermissions {\r\n  static readonly type = '[PermissionManagement] Update Permissions';\r\n  constructor(public payload: PermissionManagement.GrantedProvider & PermissionManagement.UpdateRequest) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestService, Rest } from '@abp/ng.core';\r\nimport { Observable } from 'rxjs';\r\nimport { PermissionManagement } from '../models/permission-management';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionManagementService {\r\n  constructor(private rest: RestService) {}\r\n\r\n  getPermissions(params: PermissionManagement.GrantedProvider): Observable<PermissionManagement.Response> {\r\n    const request: Rest.Request<PermissionManagement.GrantedProvider> = {\r\n      method: 'GET',\r\n      url: '/api/abp/permissions',\r\n      params,\r\n    };\r\n\r\n    return this.rest.request<PermissionManagement.GrantedProvider, PermissionManagement.Response>(request);\r\n  }\r\n\r\n  updatePermissions({\r\n    permissions,\r\n    providerKey,\r\n    providerName,\r\n  }: PermissionManagement.GrantedProvider & PermissionManagement.UpdateRequest): Observable<null> {\r\n    const request: Rest.Request<PermissionManagement.UpdateRequest> = {\r\n      method: 'PUT',\r\n      url: '/api/abp/permissions',\r\n      body: { permissions },\r\n      params: { providerKey, providerName },\r\n    };\r\n\r\n    return this.rest.request<PermissionManagement.UpdateRequest, null>(request);\r\n  }\r\n}\r\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\r\nimport { GetPermissions, UpdatePermissions } from '../actions/permission-management.actions';\r\nimport { PermissionManagement } from '../models/permission-management';\r\nimport { PermissionManagementService } from '../services/permission-management.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@State<PermissionManagement.State>({\r\n  name: 'PermissionManagementState',\r\n  defaults: { permissionRes: {} } as PermissionManagement.State,\r\n})\r\nexport class PermissionManagementState {\r\n  @Selector()\r\n  static getPermissionGroups({ permissionRes }: PermissionManagement.State) {\r\n    return permissionRes.groups || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getEntityDisplayName({ permissionRes }: PermissionManagement.State): string {\r\n    return permissionRes.entityDisplayName;\r\n  }\r\n\r\n  constructor(private permissionManagementService: PermissionManagementService) {}\r\n\r\n  @Action(GetPermissions)\r\n  permissionManagementGet({ patchState }: StateContext<PermissionManagement.State>, { payload }: GetPermissions) {\r\n    return this.permissionManagementService.getPermissions(payload).pipe(\r\n      tap(permissionResponse =>\r\n        patchState({\r\n          permissionRes: permissionResponse,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdatePermissions)\r\n  permissionManagementUpdate(_, { payload }: UpdatePermissions) {\r\n    return this.permissionManagementService.updatePermissions(payload);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  TrackByFunction,\r\n} from '@angular/core';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { from, Observable } from 'rxjs';\r\nimport { map, pluck, take, finalize } from 'rxjs/operators';\r\nimport { GetPermissions, UpdatePermissions } from '../actions/permission-management.actions';\r\nimport { PermissionManagement } from '../models/permission-management';\r\nimport { PermissionManagementState } from '../states/permission-management.state';\r\n\r\ntype PermissionWithMargin = PermissionManagement.Permission & {\r\n  margin: number;\r\n};\r\n\r\n@Component({\r\n  selector: 'abp-permission-management',\r\n  templateUrl: './permission-management.component.html',\r\n})\r\nexport class PermissionManagementComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  providerName: string;\r\n\r\n  @Input()\r\n  providerKey: string;\r\n\r\n  protected _visible;\r\n\r\n  @Input()\r\n  get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  set visible(value: boolean) {\r\n    if (!this.selectedGroup) return;\r\n\r\n    this._visible = value;\r\n    this.visibleChange.emit(value);\r\n\r\n    if (!value) {\r\n      this.selectedGroup = null;\r\n    }\r\n  }\r\n\r\n  @Output() readonly visibleChange = new EventEmitter<boolean>();\r\n\r\n  @Select(PermissionManagementState.getPermissionGroups)\r\n  groups$: Observable<PermissionManagement.Group[]>;\r\n\r\n  @Select(PermissionManagementState.getEntityDisplayName)\r\n  entityName$: Observable<string>;\r\n\r\n  selectedGroup: PermissionManagement.Group;\r\n\r\n  permissions: PermissionManagement.Permission[] = [];\r\n\r\n  selectThisTab = false;\r\n\r\n  selectAllTab = false;\r\n\r\n  modalBusy = false;\r\n\r\n  trackByFn: TrackByFunction<PermissionManagement.Group> = (_, item) => item.name;\r\n\r\n  get selectedGroupPermissions$(): Observable<PermissionWithMargin[]> {\r\n    return this.groups$.pipe(\r\n      map(groups =>\r\n        this.selectedGroup ? groups.find(group => group.name === this.selectedGroup.name).permissions : [],\r\n      ),\r\n      map<PermissionManagement.Permission[], PermissionWithMargin[]>(permissions =>\r\n        permissions.map(\r\n          permission =>\r\n            (({\r\n              ...permission,\r\n              margin: findMargin(permissions, permission),\r\n              isGranted: this.permissions.find(per => per.name === permission.name).isGranted,\r\n            } as any) as PermissionWithMargin),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n\r\n  constructor(private store: Store, private renderer: Renderer2) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getChecked(name: string) {\r\n    return (this.permissions.find(per => per.name === name) || { isGranted: false }).isGranted;\r\n  }\r\n\r\n  isGrantedByOtherProviderName(grantedProviders: PermissionManagement.GrantedProvider[]): boolean {\r\n    if (grantedProviders.length) {\r\n      return grantedProviders.findIndex(p => p.providerName !== this.providerName) > -1;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onClickCheckbox(clickedPermission: PermissionManagement.Permission, value) {\r\n    if (clickedPermission.isGranted && this.isGrantedByOtherProviderName(clickedPermission.grantedProviders)) return;\r\n\r\n    setTimeout(() => {\r\n      this.permissions = this.permissions.map(per => {\r\n        if (clickedPermission.name === per.name) {\r\n          return { ...per, isGranted: !per.isGranted };\r\n        } else if (clickedPermission.name === per.parentName && clickedPermission.isGranted) {\r\n          return { ...per, isGranted: false };\r\n        } else if (clickedPermission.parentName === per.name && !clickedPermission.isGranted) {\r\n          return { ...per, isGranted: true };\r\n        }\r\n\r\n        return per;\r\n      });\r\n\r\n      this.setTabCheckboxState();\r\n      this.setGrantCheckboxState();\r\n    }, 0);\r\n  }\r\n\r\n  setTabCheckboxState() {\r\n    this.selectedGroupPermissions$.pipe(take(1)).subscribe(permissions => {\r\n      const selectedPermissions = permissions.filter(per => per.isGranted);\r\n      const element = document.querySelector('#select-all-in-this-tabs') as any;\r\n\r\n      if (selectedPermissions.length === permissions.length) {\r\n        element.indeterminate = false;\r\n        this.selectThisTab = true;\r\n      } else if (selectedPermissions.length === 0) {\r\n        element.indeterminate = false;\r\n        this.selectThisTab = false;\r\n      } else {\r\n        element.indeterminate = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  setGrantCheckboxState() {\r\n    const selectedAllPermissions = this.permissions.filter(per => per.isGranted);\r\n    const checkboxElement = document.querySelector('#select-all-in-all-tabs') as any;\r\n\r\n    if (selectedAllPermissions.length === this.permissions.length) {\r\n      checkboxElement.indeterminate = false;\r\n      this.selectAllTab = true;\r\n    } else if (selectedAllPermissions.length === 0) {\r\n      checkboxElement.indeterminate = false;\r\n      this.selectAllTab = false;\r\n    } else {\r\n      checkboxElement.indeterminate = true;\r\n    }\r\n  }\r\n\r\n  onClickSelectThisTab() {\r\n    this.selectedGroupPermissions$.pipe(take(1)).subscribe(permissions => {\r\n      permissions.forEach(permission => {\r\n        if (permission.isGranted && this.isGrantedByOtherProviderName(permission.grantedProviders)) return;\r\n\r\n        const index = this.permissions.findIndex(per => per.name === permission.name);\r\n\r\n        this.permissions = [\r\n          ...this.permissions.slice(0, index),\r\n          { ...this.permissions[index], isGranted: !this.selectThisTab },\r\n          ...this.permissions.slice(index + 1),\r\n        ];\r\n      });\r\n    });\r\n\r\n    this.setGrantCheckboxState();\r\n  }\r\n\r\n  onClickSelectAll() {\r\n    this.permissions = this.permissions.map(permission => ({\r\n      ...permission,\r\n      isGranted: this.isGrantedByOtherProviderName(permission.grantedProviders) || !this.selectAllTab,\r\n    }));\r\n\r\n    this.selectThisTab = !this.selectAllTab;\r\n  }\r\n\r\n  onChangeGroup(group: PermissionManagement.Group) {\r\n    this.selectedGroup = group;\r\n    this.setTabCheckboxState();\r\n  }\r\n\r\n  submit() {\r\n    this.modalBusy = true;\r\n    const unchangedPermissions = getPermissions(\r\n      this.store.selectSnapshot(PermissionManagementState.getPermissionGroups),\r\n    );\r\n\r\n    const changedPermissions: PermissionManagement.MinimumPermission[] = this.permissions\r\n      .filter(per =>\r\n        unchangedPermissions.find(unchanged => unchanged.name === per.name).isGranted === per.isGranted ? false : true,\r\n      )\r\n      .map(({ name, isGranted }) => ({ name, isGranted }));\r\n\r\n    if (changedPermissions.length) {\r\n      this.store\r\n        .dispatch(\r\n          new UpdatePermissions({\r\n            providerKey: this.providerKey,\r\n            providerName: this.providerName,\r\n            permissions: changedPermissions,\r\n          }),\r\n        )\r\n        .pipe(finalize(() => (this.modalBusy = false)))\r\n        .subscribe(() => {\r\n          this.visible = false;\r\n        });\r\n    } else {\r\n      this.modalBusy = false;\r\n      this.visible = false;\r\n    }\r\n  }\r\n\r\n  openModal() {\r\n    if (!this.providerKey || !this.providerName) {\r\n      throw new Error('Provider Key and Provider Name are required.');\r\n    }\r\n\r\n    this.store\r\n      .dispatch(\r\n        new GetPermissions({\r\n          providerKey: this.providerKey,\r\n          providerName: this.providerName,\r\n        }),\r\n      )\r\n      .pipe(pluck('PermissionManagementState', 'permissionRes'))\r\n      .subscribe((permissionRes: PermissionManagement.Response) => {\r\n        this.selectedGroup = permissionRes.groups[0];\r\n        this.permissions = getPermissions(permissionRes.groups);\r\n\r\n        this.visible = true;\r\n      });\r\n  }\r\n\r\n  initModal() {\r\n    this.setTabCheckboxState();\r\n    this.setGrantCheckboxState();\r\n  }\r\n\r\n  ngOnChanges({ visible }: SimpleChanges): void {\r\n    if (!visible) return;\r\n\r\n    if (visible.currentValue) {\r\n      this.openModal();\r\n    } else if (visible.currentValue === false && this.visible) {\r\n      this.visible = false;\r\n    }\r\n  }\r\n}\r\n\r\nfunction findMargin(permissions: PermissionManagement.Permission[], permission: PermissionManagement.Permission) {\r\n  const parentPermission = permissions.find(per => per.name === permission.parentName);\r\n\r\n  if (parentPermission && parentPermission.parentName) {\r\n    let margin = 20;\r\n    return (margin += findMargin(permissions, parentPermission));\r\n  }\r\n\r\n  return parentPermission ? 20 : 0;\r\n}\r\n\r\nfunction getPermissions(groups: PermissionManagement.Group[]): PermissionManagement.Permission[] {\r\n  return groups.reduce((acc, val) => [...acc, ...val.permissions], []);\r\n}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { PermissionManagementComponent } from './components/permission-management.component';\r\nimport { PermissionManagementState } from './states/permission-management.state';\r\n\r\n@NgModule({\r\n  declarations: [PermissionManagementComponent],\r\n  imports: [CoreModule, ThemeSharedModule, NgxsModule.forFeature([PermissionManagementState])],\r\n  exports: [PermissionManagementComponent],\r\n})\r\nexport class PermissionManagementModule {}\r\n","export namespace PermissionManagement {\r\n  export interface State {\r\n    permissionRes: Response;\r\n  }\r\n\r\n  export interface Response {\r\n    entityDisplayName: string;\r\n    groups: Group[];\r\n  }\r\n\r\n  export interface Group {\r\n    name: string;\r\n    displayName: string;\r\n    permissions: Permission[];\r\n  }\r\n\r\n  export interface MinimumPermission {\r\n    name: string;\r\n    isGranted: boolean;\r\n  }\r\n\r\n  export interface Permission extends MinimumPermission {\r\n    displayName: string;\r\n    parentName: string;\r\n    allowedProviders: string[];\r\n    grantedProviders: GrantedProvider[];\r\n  }\r\n\r\n  export interface GrantedProvider {\r\n    providerName: string;\r\n    providerKey: string;\r\n  }\r\n\r\n  export interface UpdateRequest {\r\n    permissions: MinimumPermission[];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { PermissionManagementState } from '../states/permission-management.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionManagementStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getPermissionGroups() {\r\n    return this.store.selectSnapshot(PermissionManagementState.getPermissionGroups);\r\n  }\r\n  getEntityDisplayName() {\r\n    return this.store.selectSnapshot(PermissionManagementState.getEntityDisplayName);\r\n  }\r\n}\r\n"],"names":["tslib_1.__decorate"],"mappings":"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"}
