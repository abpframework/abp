!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@ngxs/store"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@abp/ng.permission-management",["exports","@abp/ng.core","@abp/ng.theme.shared","@angular/core","@ngxs/store","rxjs","rxjs/operators"],t):t(((e=e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng["permission-management"]={}),e.ng_core,e.ng_theme_shared,e.ng.core,e.store,e.rxjs,e.rxjs.operators)}(this,(function(e,t,n,r,i,s,o){"use strict";
/*! *****************************************************************************
    ***************************************************************************** */var a=function(){return(a=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};function c(e,t,n,r){var i,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(o=(s<3?i(o):s>3?i(t,n,o):i(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o}function p(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function l(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,s=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=s.return)&&n.call(s)}finally{if(i)throw i.error}}return o}function u(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(l(arguments[t]));return e}var m=function(){function e(e){this.payload=e}return e.type="[PermissionManagement] Get Permissions",e}();var d=function(){function e(e){this.payload=e}return e.type="[PermissionManagement] Update Permissions",e}();var f=function(){function e(e){this.rest=e}return e.prototype.getPermissions=function(e){var t={method:"GET",url:"/api/abp/permissions",params:e};return this.rest.request(t)},e.prototype.updatePermissions=function(e){var t={method:"PUT",url:"/api/abp/permissions",body:{permissions:e.permissions},params:{providerKey:e.providerKey,providerName:e.providerName}};return this.rest.request(t)},e.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:t.RestService}]},e.ngInjectableDef=r.ɵɵdefineInjectable({factory:function(){return new e(r.ɵɵinject(t.RestService))},token:e,providedIn:"root"}),e}();var b=function(){function e(e){this.permissionManagementService=e}return e.getPermissionGroups=function(e){return e.permissionRes.groups||[]},e.getEntityDisplayName=function(e){return e.permissionRes.entityDisplayName},e.prototype.permissionManagementGet=function(e,t){var n=e.patchState,r=t.payload;return this.permissionManagementService.getPermissions(r).pipe(o.tap((function(e){return n({permissionRes:e})})))},e.prototype.permissionManagementUpdate=function(e,t){var n=t.payload;return this.permissionManagementService.updatePermissions(n)},e.ctorParameters=function(){return[{type:f}]},c([i.Action(m),p("design:type",Function),p("design:paramtypes",[Object,m]),p("design:returntype",void 0)],e.prototype,"permissionManagementGet",null),c([i.Action(d),p("design:type",Function),p("design:paramtypes",[Object,d]),p("design:returntype",void 0)],e.prototype,"permissionManagementUpdate",null),c([i.Selector(),p("design:type",Function),p("design:paramtypes",[Object]),p("design:returntype",void 0)],e,"getPermissionGroups",null),c([i.Selector(),p("design:type",Function),p("design:paramtypes",[Object]),p("design:returntype",String)],e,"getEntityDisplayName",null),e=c([i.State({name:"PermissionManagementState",defaults:{permissionRes:{}}}),p("design:paramtypes",[f])],e)}();var h=function(){function e(e,t){this.store=e,this.renderer=t,this.visibleChange=new r.EventEmitter,this.permissions=[],this.selectThisTab=!1,this.selectAllTab=!1,this.modalBusy=!1,this.trackByFn=function(e,t){return t.name}}return Object.defineProperty(e.prototype,"visible",{get:function(){return this._visible},set:function(e){this.selectedGroup&&(this._visible=e,this.visibleChange.emit(e),e||(this.selectedGroup=null))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"selectedGroupPermissions$",{get:function(){var e=this;return this.groups$.pipe(o.map((function(t){return e.selectedGroup?t.find((function(t){return t.name===e.selectedGroup.name})).permissions:[]})),o.map((function(t){return t.map((function(n){return a({},n,{margin:y(t,n),isGranted:e.permissions.find((function(e){return e.name===n.name})).isGranted})}))})))},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){},e.prototype.getChecked=function(e){return(this.permissions.find((function(t){return t.name===e}))||{isGranted:!1}).isGranted},e.prototype.isGrantedByOtherProviderName=function(e){var t=this;return!!e.length&&e.findIndex((function(e){return e.providerName!==t.providerName}))>-1},e.prototype.onClickCheckbox=function(e,t){var n=this;e.isGranted&&this.isGrantedByOtherProviderName(e.grantedProviders)||setTimeout((function(){n.permissions=n.permissions.map((function(t){return e.name===t.name?a({},t,{isGranted:!t.isGranted}):e.name===t.parentName&&e.isGranted?a({},t,{isGranted:!1}):e.parentName!==t.name||e.isGranted?t:a({},t,{isGranted:!0})})),n.setTabCheckboxState(),n.setGrantCheckboxState()}),0)},e.prototype.setTabCheckboxState=function(){var e=this;this.selectedGroupPermissions$.pipe(o.take(1)).subscribe((function(t){var n=t.filter((function(e){return e.isGranted})),r=document.querySelector("#select-all-in-this-tabs");n.length===t.length?(r.indeterminate=!1,e.selectThisTab=!0):0===n.length?(r.indeterminate=!1,e.selectThisTab=!1):r.indeterminate=!0}))},e.prototype.setGrantCheckboxState=function(){var e=this.permissions.filter((function(e){return e.isGranted})),t=document.querySelector("#select-all-in-all-tabs");e.length===this.permissions.length?(t.indeterminate=!1,this.selectAllTab=!0):0===e.length?(t.indeterminate=!1,this.selectAllTab=!1):t.indeterminate=!0},e.prototype.onClickSelectThisTab=function(){var e=this;this.selectedGroupPermissions$.pipe(o.take(1)).subscribe((function(t){t.forEach((function(t){if(!t.isGranted||!e.isGrantedByOtherProviderName(t.grantedProviders)){var n=e.permissions.findIndex((function(e){return e.name===t.name}));e.permissions=u(e.permissions.slice(0,n),[a({},e.permissions[n],{isGranted:!e.selectThisTab})],e.permissions.slice(n+1))}}))})),this.setGrantCheckboxState()},e.prototype.onClickSelectAll=function(){var e=this;this.permissions=this.permissions.map((function(t){return a({},t,{isGranted:e.isGrantedByOtherProviderName(t.grantedProviders)||!e.selectAllTab})})),this.selectThisTab=!this.selectAllTab},e.prototype.onChangeGroup=function(e){this.selectedGroup=e,this.setTabCheckboxState()},e.prototype.submit=function(){var e=this;this.modalBusy=!0;var t=g(this.store.selectSnapshot(b.getPermissionGroups)),n=this.permissions.filter((function(e){return t.find((function(t){return t.name===e.name})).isGranted!==e.isGranted})).map((function(e){return{name:e.name,isGranted:e.isGranted}}));n.length?this.store.dispatch(new d({providerKey:this.providerKey,providerName:this.providerName,permissions:n})).pipe(o.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.visible=!1})):(this.modalBusy=!1,this.visible=!1)},e.prototype.openModal=function(){var e=this;if(!this.providerKey||!this.providerName)throw new Error("Provider Key and Provider Name are required.");this.store.dispatch(new m({providerKey:this.providerKey,providerName:this.providerName})).pipe(o.pluck("PermissionManagementState","permissionRes")).subscribe((function(t){e.selectedGroup=t.groups[0],e.permissions=g(t.groups),e.visible=!0}))},e.prototype.initModal=function(){this.setTabCheckboxState(),this.setGrantCheckboxState()},e.prototype.ngOnChanges=function(e){var t=e.visible;t&&(t.currentValue?this.openModal():!1===t.currentValue&&this.visible&&(this.visible=!1))},e.decorators=[{type:r.Component,args:[{selector:"abp-permission-management",template:'<abp-modal [(visible)]="visible" (init)="initModal()" [busy]="modalBusy">\r\n  <ng-container *ngIf="{ entityName: entityName$ | async } as data">\r\n    <ng-template #abpHeader>\r\n      <h4>{{ \'AbpPermissionManagement::Permissions\' | abpLocalization }} - {{ data.entityName }}</h4>\r\n    </ng-template>\r\n    <ng-template #abpBody>\r\n      <div class="custom-checkbox custom-control mb-2">\r\n        <input\r\n          type="checkbox"\r\n          id="select-all-in-all-tabs"\r\n          name="select-all-in-all-tabs"\r\n          class="custom-control-input"\r\n          [(ngModel)]="selectAllTab"\r\n          (click)="onClickSelectAll()"\r\n        />\r\n        <label class="custom-control-label" for="select-all-in-all-tabs">{{\r\n          \'AbpPermissionManagement::SelectAllInAllTabs\' | abpLocalization\r\n        }}</label>\r\n      </div>\r\n\r\n      <hr class="mt-2 mb-2" />\r\n      <div class="row">\r\n        <div class="col-4">\r\n          <ul class="nav nav-pills flex-column">\r\n            <li *ngFor="let group of groups$ | async; trackBy: trackByFn" class="nav-item">\r\n              <a\r\n                class="nav-link pointer"\r\n                [class.active]="selectedGroup?.name === group?.name"\r\n                (click)="onChangeGroup(group)"\r\n                >{{ group?.displayName }}</a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class="col-8">\r\n          <h4>{{ selectedGroup?.displayName }}</h4>\r\n          <hr class="mt-2 mb-3" />\r\n          <div class="pl-1 pt-1">\r\n            <div class="custom-checkbox custom-control mb-2">\r\n              <input\r\n                type="checkbox"\r\n                id="select-all-in-this-tabs"\r\n                name="select-all-in-this-tabs"\r\n                class="custom-control-input"\r\n                [(ngModel)]="selectThisTab"\r\n                (click)="onClickSelectThisTab()"\r\n              />\r\n              <label class="custom-control-label" for="select-all-in-this-tabs">{{\r\n                \'AbpPermissionManagement::SelectAllInThisTab\' | abpLocalization\r\n              }}</label>\r\n            </div>\r\n            <hr class="mb-3" />\r\n            <div\r\n              *ngFor="let permission of selectedGroupPermissions$ | async; let i = index; trackBy: trackByFn"\r\n              [style.margin-left]="permission.margin + \'px\'"\r\n              class="custom-checkbox custom-control mb-2"\r\n            >\r\n              <input\r\n                #permissionCheckbox\r\n                type="checkbox"\r\n                [checked]="getChecked(permission.name)"\r\n                [value]="getChecked(permission.name)"\r\n                [attr.id]="permission.name"\r\n                class="custom-control-input"\r\n                [disabled]="isGrantedByOtherProviderName(permission.grantedProviders)"\r\n              />\r\n              <label\r\n                class="custom-control-label"\r\n                [attr.for]="permission.name"\r\n                (click)="onClickCheckbox(permission, permissionCheckbox.value)"\r\n                >{{ permission.displayName }}\r\n                <span *ngFor="let provider of permission.grantedProviders" class="badge badge-light"\r\n                  >{{ provider.providerName }}: {{ provider.providerKey }}</span\r\n                ></label\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template #abpFooter>\r\n      <button type="button" class="btn btn-secondary" #abpClose>\r\n        {{ \'AbpIdentity::Cancel\' | abpLocalization }}\r\n      </button>\r\n      <abp-button iconClass="fa fa-check" (click)="submit()">{{ \'AbpIdentity::Save\' | abpLocalization }}</abp-button>\r\n    </ng-template>\r\n  </ng-container>\r\n</abp-modal>\r\n'}]}],e.ctorParameters=function(){return[{type:i.Store},{type:r.Renderer2}]},e.propDecorators={providerName:[{type:r.Input}],providerKey:[{type:r.Input}],visible:[{type:r.Input}],visibleChange:[{type:r.Output}]},c([i.Select(b.getPermissionGroups),p("design:type",s.Observable)],e.prototype,"groups$",void 0),c([i.Select(b.getEntityDisplayName),p("design:type",s.Observable)],e.prototype,"entityName$",void 0),e}();function y(e,t){var n=e.find((function(e){return e.name===t.parentName}));return n&&n.parentName?20+y(e,n):n?20:0}function g(e){return e.reduce((function(e,t){return u(e,t.permissions)}),[])}var v,P=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{declarations:[h],imports:[t.CoreModule,n.ThemeSharedModule,i.NgxsModule.forFeature([b])],exports:[h]}]}],e}();!function(e){function t(){}function n(){}function r(){}function i(){}function s(){}function o(){}function a(){}e.State=t,e.Response=n,e.Group=r,e.MinimumPermission=i,e.Permission=s,e.GrantedProvider=o,e.UpdateRequest=a}(v||(v={}));var G=function(){function e(e){this.store=e}return e.prototype.getPermissionGroups=function(){return this.store.selectSnapshot(b.getPermissionGroups)},e.prototype.getEntityDisplayName=function(){return this.store.selectSnapshot(b.getEntityDisplayName)},e.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:i.Store}]},e.ngInjectableDef=r.ɵɵdefineInjectable({factory:function(){return new e(r.ɵɵinject(i.Store))},token:e,providedIn:"root"}),e}();e.GetPermissions=m,e.PermissionManagementComponent=h,e.PermissionManagementModule=P,e.PermissionManagementService=f,e.PermissionManagementState=b,e.PermissionManagementStateService=G,e.UpdatePermissions=d,e.ɵa=h,e.ɵb=b,e.ɵc=f,e.ɵd=m,e.ɵe=d,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.permission-management.umd.min.js.map
