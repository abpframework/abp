!(function(n, e) {
  'object' == typeof exports && 'undefined' != typeof module
    ? e(
        exports,
        require('@abp/ng.core'),
        require('@abp/ng.theme.shared'),
        require('@angular/core'),
        require('@ng-bootstrap/ng-bootstrap'),
        require('@ngx-validate/core'),
        require('@ngxs/store'),
        require('primeng/toast'),
        require('@ngxs/router-plugin'),
        require('angular-oauth2-oidc'),
        require('just-compare'),
        require('rxjs'),
        require('rxjs/operators'),
        require('snq'),
      )
    : 'function' == typeof define && define.amd
    ? define('@abp/ng.theme.basic', [
        'exports',
        '@abp/ng.core',
        '@abp/ng.theme.shared',
        '@angular/core',
        '@ng-bootstrap/ng-bootstrap',
        '@ngx-validate/core',
        '@ngxs/store',
        'primeng/toast',
        '@ngxs/router-plugin',
        'angular-oauth2-oidc',
        'just-compare',
        'rxjs',
        'rxjs/operators',
        'snq',
      ], e)
    : e(
        (((n = n || self).abp = n.abp || {}),
        (n.abp.ng = n.abp.ng || {}),
        (n.abp.ng.theme = n.abp.ng.theme || {}),
        (n.abp.ng.theme.basic = {})),
        n.ng_core,
        n.ng_theme_shared,
        n.ng.core,
        n.ngBootstrap,
        n.core$1,
        n.store,
        n.toast,
        n.routerPlugin,
        n.angularOauth2Oidc,
        n.compare,
        n.rxjs,
        n.rxjs.operators,
        n.snq,
      );
})(this, function(n, e, t, a, r, o, i, l, s, p, d, c, u, g) {
  'use strict';
  (d = d && d.hasOwnProperty('default') ? d.default : d), (g = g && g.hasOwnProperty('default') ? g.default : g);
  /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
  var m = function(n, e) {
    return (m =
      Object.setPrototypeOf ||
      ({ __proto__: [] } instanceof Array &&
        function(n, e) {
          n.__proto__ = e;
        }) ||
      function(n, e) {
        for (var t in e) e.hasOwnProperty(t) && (n[t] = e[t]);
      })(n, e);
  };
  var f = function() {
    return (f =
      Object.assign ||
      function(n) {
        for (var e, t = 1, a = arguments.length; t < a; t++)
          for (var r in (e = arguments[t])) Object.prototype.hasOwnProperty.call(e, r) && (n[r] = e[r]);
        return n;
      }).apply(this, arguments);
  };
  function b(n, e, t, a) {
    var r,
      o = arguments.length,
      i = o < 3 ? e : null === a ? (a = Object.getOwnPropertyDescriptor(e, t)) : a;
    if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) i = Reflect.decorate(n, e, t, a);
    else for (var l = n.length - 1; l >= 0; l--) (r = n[l]) && (i = (o < 3 ? r(i) : o > 3 ? r(e, t, i) : r(e, t)) || i);
    return o > 3 && i && Object.defineProperty(e, t, i), i;
  }
  function h(n, e) {
    if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) return Reflect.metadata(n, e);
  }
  function v(n, e) {
    var t = 'function' == typeof Symbol && n[Symbol.iterator];
    if (!t) return n;
    var a,
      r,
      o = t.call(n),
      i = [];
    try {
      for (; (void 0 === e || e-- > 0) && !(a = o.next()).done; ) i.push(a.value);
    } catch (n) {
      r = { error: n };
    } finally {
      try {
        a && !a.done && (t = o.return) && t.call(o);
      } finally {
        if (r) throw r.error;
      }
    }
    return i;
  }
  function y() {
    for (var n = [], e = 0; e < arguments.length; e++) n = n.concat(v(arguments[e]));
    return n;
  }
  var w = (function() {
    function n() {}
    return (
      (n.type = 'account'),
      (n.decorators = [
        {
          type: a.Component,
          args: [
            {
              selector: 'abp-layout-account',
              template:
                '\n    <router-outlet></router-outlet>\n    <abp-confirmation></abp-confirmation>\n    <abp-toast></abp-toast>\n  ',
            },
          ],
        },
      ]),
      n
    );
  })();
  var x = (function() {
    function n(n) {
      this.payload = n;
    }
    return (n.type = '[Layout] Add Navigation Element'), n;
  })();
  var C = (function() {
    function n(n) {
      this.name = n;
    }
    return (n.type = '[Layout] Remove Navigation ElementByName'), n;
  })();
  var S = (function() {
      function n() {}
      return (
        (n.getNavigationElements = function(n) {
          return n.navigationElements;
        }),
        (n.prototype.layoutAddAction = function(n, e) {
          var t = n.getState,
            a = n.patchState,
            r = e.payload,
            o = void 0 === r ? [] : r,
            i = t().navigationElements;
          if (
            (Array.isArray(o) || (o = [o]),
            i.length &&
              (o = g(function() {
                return o.filter(function(n) {
                  var e = n.name;
                  return (
                    i.findIndex(function(n) {
                      return n.name === e;
                    }) < 0
                  );
                });
              }, [])),
            o.length)
          )
            return a({
              navigationElements: (i = y(i, o)
                .map(function(n) {
                  return f({}, n, { order: n.order || 99 });
                })
                .sort(function(n, e) {
                  return n.order - e.order;
                })),
            });
        }),
        (n.prototype.layoutRemoveAction = function(n, e) {
          var t = n.getState,
            a = n.patchState,
            r = e.name,
            o = t().navigationElements,
            i = o.findIndex(function(n) {
              return n.name === r;
            });
          return i > -1 && (o = o.splice(i, 1)), a({ navigationElements: o });
        }),
        b(
          [
            i.Action(x),
            h('design:type', Function),
            h('design:paramtypes', [Object, x]),
            h('design:returntype', void 0),
          ],
          n.prototype,
          'layoutAddAction',
          null,
        ),
        b(
          [
            i.Action(C),
            h('design:type', Function),
            h('design:paramtypes', [Object, C]),
            h('design:returntype', void 0),
          ],
          n.prototype,
          'layoutRemoveAction',
          null,
        ),
        b(
          [i.Selector(), h('design:type', Function), h('design:paramtypes', [Object]), h('design:returntype', Array)],
          n,
          'getNavigationElements',
          null,
        ),
        (n = b([i.State({ name: 'LayoutState', defaults: { navigationElements: [] } })], n))
      );
    })(),
    O = (function() {
      function n(n, e, t) {
        (this.store = n),
          (this.oauthService = e),
          (this.renderer = t),
          (this.isCollapsed = !0),
          (this.rightPartElements = []),
          (this.trackByFn = function(n, e) {
            return e.name;
          }),
          (this.trackElementByFn = function(n, e) {
            return e;
          });
      }
      return (
        Object.defineProperty(n.prototype, 'appInfo', {
          get: function() {
            return this.store.selectSnapshot(e.ConfigState.getApplicationInfo);
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(n.prototype, 'visibleRoutes$', {
          get: function() {
            return this.routes$.pipe(
              u.map(function(n) {
                return (function n(e) {
                  return e.reduce(function(e, t) {
                    return t.invisible
                      ? e
                      : (t.children && t.children.length && (t.children = n(t.children)), y(e, [t]));
                  }, []);
                })(n);
              }),
            );
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(n.prototype, 'defaultLanguage$', {
          get: function() {
            var n = this;
            return this.languages$.pipe(
              u.map(function(e) {
                return g(function() {
                  return e.find(function(e) {
                    return e.cultureName === n.selectedLangCulture;
                  }).displayName;
                });
              }, ''),
            );
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(n.prototype, 'dropdownLanguages$', {
          get: function() {
            var n = this;
            return this.languages$.pipe(
              u.map(function(e) {
                return g(function() {
                  return e.filter(function(e) {
                    return e.cultureName !== n.selectedLangCulture;
                  });
                });
              }, []),
            );
          },
          enumerable: !0,
          configurable: !0,
        }),
        Object.defineProperty(n.prototype, 'selectedLangCulture', {
          get: function() {
            return this.store.selectSnapshot(e.SessionState.getLanguage);
          },
          enumerable: !0,
          configurable: !0,
        }),
        (n.prototype.checkWindowWidth = function() {
          var n = this;
          setTimeout(function() {
            window.innerWidth < 768
              ? ((n.isDropdownChildDynamic = !1),
                !1 === n.smallScreen &&
                  ((n.isCollapsed = !1),
                  setTimeout(function() {
                    n.isCollapsed = !0;
                  }, 100)),
                (n.smallScreen = !0))
              : ((n.isDropdownChildDynamic = !0), (n.smallScreen = !1));
          }, 0);
        }),
        (n.prototype.ngAfterViewInit = function() {
          var n = this;
          this.store
            .selectSnapshot(S.getNavigationElements)
            .map(function(n) {
              return n.name;
            })
            .indexOf('LanguageRef') < 0 &&
            this.store.dispatch(
              new x([
                { element: this.languageRef, order: 4, name: 'LanguageRef' },
                { element: this.currentUserRef, order: 5, name: 'CurrentUserRef' },
              ]),
            ),
            this.navElements$
              .pipe(
                u.map(function(n) {
                  return n.map(function(n) {
                    return n.element;
                  });
                }),
                u.filter(function(e) {
                  return !d(e, n.rightPartElements);
                }),
                e.takeUntilDestroy(this),
              )
              .subscribe(function(e) {
                setTimeout(function() {
                  return (n.rightPartElements = e);
                }, 0);
              }),
            this.checkWindowWidth(),
            c
              .fromEvent(window, 'resize')
              .pipe(
                e.takeUntilDestroy(this),
                u.debounceTime(150),
              )
              .subscribe(function() {
                n.checkWindowWidth();
              });
        }),
        (n.prototype.ngOnDestroy = function() {}),
        (n.prototype.onChangeLang = function(n) {
          this.store.dispatch(new e.SetLanguage(n));
        }),
        (n.prototype.logout = function() {
          this.oauthService.logOut(),
            this.store.dispatch(
              new s.Navigate(['/'], null, {
                state: { redirectUrl: this.store.selectSnapshot(s.RouterState).state.url },
              }),
            ),
            this.store.dispatch(new e.GetAppConfiguration());
        }),
        (n.prototype.openChange = function(n, e) {
          var t = this;
          n ||
            (Object.keys(e.style)
              .filter(function(n) {
                return Number.isInteger(+n);
              })
              .forEach(function(n) {
                t.renderer.removeStyle(e, e.style[n]);
              }),
            this.renderer.removeStyle(e, 'left'));
        }),
        (n.type = 'application'),
        (n.decorators = [
          {
            type: a.Component,
            args: [
              {
                selector: 'abp-layout-application',
                template:
                  '<nav\n  class="navbar navbar-expand-md navbar-dark bg-dark shadow-sm flex-column flex-md-row mb-4"\n  id="main-navbar"\n  style="min-height: 4rem;"\n>\n  <div class="container ">\n    <a class="navbar-brand" routerLink="/">\n      <img *ngIf="appInfo.logoUrl; else appName" [src]="appInfo.logoUrl" [alt]="appInfo.name" />\n    </a>\n    <button\n      class="navbar-toggler"\n      type="button"\n      [attr.aria-expanded]="!isCollapsed"\n      (click)="isCollapsed = !isCollapsed"\n    >\n      <span class="navbar-toggler-icon"></span>\n    </button>\n    <div class="navbar-collapse" id="main-navbar-collapse">\n      <ng-container *ngTemplateOutlet="!smallScreen ? navigations : null"></ng-container>\n\n      <div *ngIf="smallScreen" class="overflow-hidden" [@collapseWithMargin]="isCollapsed ? \'collapsed\' : \'expanded\'">\n        <ng-container *ngTemplateOutlet="navigations"></ng-container>\n      </div>\n\n      <ng-template #navigations>\n        <ul class="navbar-nav mx-auto">\n          <ng-container\n            *ngFor="let route of visibleRoutes$ | async; trackBy: trackByFn"\n            [ngTemplateOutlet]="route?.children?.length ? dropdownLink : defaultLink"\n            [ngTemplateOutletContext]="{ $implicit: route }"\n          >\n          </ng-container>\n\n          <ng-template #defaultLink let-route>\n            <li class="nav-item" [abpPermission]="route.requiredPolicy">\n              <a class="nav-link" [routerLink]="[route.url]">{{ route.name | abpLocalization }}</a>\n            </li>\n          </ng-template>\n\n          <ng-template #dropdownLink let-route>\n            <li\n              #navbarRootDropdown\n              [abpPermission]="route.requiredPolicy"\n              [abpVisibility]="routeContainer"\n              class="nav-item dropdown"\n              display="static"\n              (click)="\n                navbarRootDropdown.expand ? (navbarRootDropdown.expand = false) : (navbarRootDropdown.expand = true)\n              "\n            >\n              <a\n                class="nav-link dropdown-toggle"\n                data-toggle="dropdown"\n                aria-haspopup="true"\n                aria-expanded="false"\n                href="javascript:void(0)"\n              >\n                <i *ngIf="route.iconClass" [ngClass]="route.iconClass"></i> {{ route.name | abpLocalization }}\n              </a>\n              <div\n                #routeContainer\n                class="dropdown-menu border-0 shadow-sm"\n                [class.d-block]="smallScreen"\n                [class.overflow-hidden]="smallScreen"\n                (click)="$event.preventDefault(); $event.stopPropagation()"\n              >\n                <div\n                  class="abp-collapsed abp-main-nav-dropdown"\n                  [class.expanded]="smallScreen ? navbarRootDropdown.expand : true"\n                >\n                  <ng-template\n                    #forTemplate\n                    ngFor\n                    [ngForOf]="route.children"\n                    [ngForTrackBy]="trackByFn"\n                    [ngForTemplate]="childWrapper"\n                  ></ng-template>\n                </div>\n              </div>\n            </li>\n          </ng-template>\n\n          <ng-template #childWrapper let-child>\n            <ng-template\n              [ngTemplateOutlet]="child?.children?.length ? dropdownChild : defaultChild"\n              [ngTemplateOutletContext]="{ $implicit: child }"\n            ></ng-template>\n          </ng-template>\n\n          <ng-template #defaultChild let-child>\n            <div class="dropdown-submenu" [abpPermission]="child.requiredPolicy">\n              <a class="dropdown-item" [routerLink]="[child.url]">\n                <i *ngIf="child.iconClass" [ngClass]="child.iconClass"></i>\n                {{ child.name | abpLocalization }}</a\n              >\n            </div>\n          </ng-template>\n\n          <ng-template #dropdownChild let-child>\n            <div\n              [abpVisibility]="childrenContainer"\n              class="dropdown-submenu"\n              ngbDropdown\n              #dropdownSubmenu="ngbDropdown"\n              [display]="isDropdownChildDynamic ? \'dynamic\' : \'static\'"\n              placement="right-top"\n              [autoClose]="true"\n              [abpPermission]="child.requiredPolicy"\n              (openChange)="openChange($event, childrenContainer)"\n            >\n              <div ngbDropdownToggle [class.dropdown-toggle]="false">\n                <a\n                  abpEllipsis="210px"\n                  [abpEllipsisEnabled]="isDropdownChildDynamic"\n                  role="button"\n                  class="btn d-block text-left dropdown-toggle"\n                >\n                  <i *ngIf="child.iconClass" [ngClass]="child.iconClass"></i>\n                  {{ child.name | abpLocalization }}\n                </a>\n              </div>\n              <div\n                #childrenContainer\n                class="dropdown-menu border-0 shadow-sm"\n                [class.d-block]="smallScreen"\n                [class.overflow-hidden]="smallScreen"\n              >\n                <div\n                  class="abp-collapsed abp-main-nav-dropdown"\n                  [class.expanded]="smallScreen ? dropdownSubmenu.isOpen() : true"\n                >\n                  <ng-template\n                    ngFor\n                    [ngForOf]="child.children"\n                    [ngForTrackBy]="trackByFn"\n                    [ngForTemplate]="childWrapper"\n                  ></ng-template>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ul>\n\n        <ul class="navbar-nav">\n          <ng-container\n            *ngFor="let element of rightPartElements; trackBy: trackElementByFn"\n            [ngTemplateOutlet]="element"\n          ></ng-container>\n        </ul>\n      </ng-template>\n    </div>\n  </div>\n</nav>\n\n<div [@slideFromBottom]="outlet && outlet.activatedRoute && outlet.activatedRoute.routeConfig.path" class="container">\n  <router-outlet #outlet="outlet"></router-outlet>\n</div>\n\n<abp-confirmation></abp-confirmation>\n<abp-toast></abp-toast>\n\n<ng-template #appName>\n  {{ appInfo.name }}\n</ng-template>\n\n<ng-template #language>\n  <li class="nav-item">\n    <div class="dropdown" ngbDropdown #languageDropdown="ngbDropdown" display="static">\n      <a\n        ngbDropdownToggle\n        class="nav-link"\n        href="javascript:void(0)"\n        role="button"\n        id="dropdownMenuLink"\n        data-toggle="dropdown"\n        aria-haspopup="true"\n        aria-expanded="false"\n      >\n        {{ defaultLanguage$ | async }}\n      </a>\n      <div\n        class="dropdown-menu dropdown-menu-right border-0 shadow-sm"\n        aria-labelledby="dropdownMenuLink"\n        [class.d-block]="smallScreen"\n        [class.overflow-hidden]="smallScreen"\n      >\n        <div\n          class="abp-collapsed abp-main-nav-dropdown"\n          [class.expanded]="smallScreen ? languageDropdown.isOpen() : true"\n        >\n          <a\n            *ngFor="let lang of dropdownLanguages$ | async"\n            href="javascript:void(0)"\n            class="dropdown-item"\n            (click)="onChangeLang(lang.cultureName)"\n            >{{ lang?.displayName }}</a\n          >\n        </div>\n      </div>\n    </div>\n  </li>\n</ng-template>\n\n<ng-template #currentUser>\n  <li *ngIf="(currentUser$ | async)?.isAuthenticated" class="nav-item">\n    <div ngbDropdown class="dropdown" #currentUserDropdown="ngbDropdown" display="static">\n      <a\n        ngbDropdownToggle\n        class="nav-link"\n        href="javascript:void(0)"\n        role="button"\n        id="dropdownMenuLink"\n        data-toggle="dropdown"\n        aria-haspopup="true"\n        aria-expanded="false"\n      >\n        {{ (currentUser$ | async)?.userName }}\n      </a>\n      <div\n        class="dropdown-menu dropdown-menu-right border-0 shadow-sm"\n        aria-labelledby="dropdownMenuLink"\n        [class.overflow-hidden]="smallScreen"\n        [class.d-block]="smallScreen"\n      >\n        <div\n          class="abp-collapsed abp-main-nav-dropdown"\n          [class.expanded]="smallScreen ? currentUserDropdown.isOpen() : true"\n        >\n          <a class="dropdown-item" routerLink="/account/manage-profile">{{\n            \'AbpAccount::ManageYourProfile\' | abpLocalization\n          }}</a>\n          <a class="dropdown-item" href="javascript:void(0)" (click)="logout()">{{\n            \'AbpUi::Logout\' | abpLocalization\n          }}</a>\n        </div>\n      </div>\n    </div>\n  </li>\n</ng-template>\n',
                animations: [t.slideFromBottom, t.collapseWithMargin],
              },
            ],
          },
        ]),
        (n.ctorParameters = function() {
          return [{ type: i.Store }, { type: p.OAuthService }, { type: a.Renderer2 }];
        }),
        (n.propDecorators = {
          currentUserRef: [{ type: a.ViewChild, args: ['currentUser', { static: !1, read: a.TemplateRef }] }],
          languageRef: [{ type: a.ViewChild, args: ['language', { static: !1, read: a.TemplateRef }] }],
        }),
        b([i.Select(e.ConfigState.getOne('routes')), h('design:type', c.Observable)], n.prototype, 'routes$', void 0),
        b(
          [i.Select(e.ConfigState.getOne('currentUser')), h('design:type', c.Observable)],
          n.prototype,
          'currentUser$',
          void 0,
        ),
        b(
          [i.Select(e.ConfigState.getDeep('localization.languages')), h('design:type', c.Observable)],
          n.prototype,
          'languages$',
          void 0,
        ),
        b([i.Select(S.getNavigationElements), h('design:type', c.Observable)], n.prototype, 'navElements$', void 0),
        n
      );
    })();
  var k = (function() {
    function n() {}
    return (
      (n.type = 'empty'),
      (n.decorators = [
        {
          type: a.Component,
          args: [
            {
              selector: 'abp-layout-empty',
              template:
                '\n    <router-outlet></router-outlet>\n    <abp-confirmation></abp-confirmation>\n    <abp-toast></abp-toast>\n  ',
            },
          ],
        },
      ]),
      n
    );
  })();
  var L = (function(n) {
      function e() {
        return (null !== n && n.apply(this, arguments)) || this;
      }
      return (
        (function(n, e) {
          function t() {
            this.constructor = n;
          }
          m(n, e), (n.prototype = null === e ? Object.create(e) : ((t.prototype = e.prototype), new t()));
        })(e, n),
        Object.defineProperty(e.prototype, 'abpErrors', {
          get: function() {
            return this.errors && this.errors.length
              ? this.errors.map(function(n) {
                  if (!n.message) return n;
                  var e = n.message.indexOf('[');
                  return e > -1
                    ? f({}, n, {
                        message: n.message.slice(0, e),
                        interpoliteParams: n.message.slice(e + 1, n.message.length - 1).split(','),
                      })
                    : n;
                })
              : [];
          },
          enumerable: !0,
          configurable: !0,
        }),
        (e.decorators = [
          {
            type: a.Component,
            args: [
              {
                selector: 'abp-validation-error',
                template:
                  '\n    <div class="invalid-feedback" *ngFor="let error of abpErrors; trackBy: trackByFn">\n      {{ error.message | abpLocalization: error.interpoliteParams }}\n    </div>\n  ',
                changeDetection: a.ChangeDetectionStrategy.OnPush,
                encapsulation: a.ViewEncapsulation.None,
              },
            ],
          },
        ]),
        e
      );
    })(o.ValidationErrorComponent),
    A = (function() {
      function n(n) {
        (this.lazyLoadService = n), this.appendStyle().subscribe();
      }
      return (
        (n.prototype.appendStyle = function() {
          return this.lazyLoadService.load(
            null,
            'style',
            '\n.content-header-title {\n    font-size: 24px;\n}\n\n.entry-row {\n    margin-bottom: 15px;\n}\n\n#main-navbar-tools a.dropdown-toggle {\n    text-decoration: none;\n    color: #fff;\n}\n\n.navbar .dropdown-submenu {\n    position: relative;\n}\n.navbar .dropdown-menu {\n    margin: 0;\n    padding: 0;\n}\n    .navbar .dropdown-menu a {\n        font-size: .9em;\n        padding: 10px 15px;\n        display: block;\n        min-width: 210px;\n        text-align: left;\n        border-radius: 0.25rem;\n        min-height: 44px;\n    }\n.navbar .dropdown-submenu a::after {\n    transform: rotate(-90deg);\n    position: absolute;\n    right: 16px;\n    top: 18px;\n}\n.navbar .dropdown-submenu .dropdown-menu {\n    top: 0;\n    left: 100%;\n}\n\n.card-header .btn {\n    padding: 2px 6px;\n}\n.card-header h5 {\n    margin: 0;\n}\n.container > .card {\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n}\n\n@media screen and (min-width: 768px) {\n    .navbar .dropdown:hover > .dropdown-menu {\n        display: block;\n    }\n\n    .navbar .dropdown-submenu:hover > .dropdown-menu {\n        display: block;\n    }\n}\n.input-validation-error {\n    border-color: #dc3545;\n}\n.field-validation-error {\n    font-size: 0.8em;\n}\n\n\n.abp-main-nav-dropdown {\n  margin-top: -50%;\n}\n',
            'head',
            'afterbegin',
          );
        }),
        (n.decorators = [{ type: a.Injectable, args: [{ providedIn: 'root' }] }]),
        (n.ctorParameters = function() {
          return [{ type: e.LazyLoadService }];
        }),
        (n.ngInjectableDef = a.ɵɵdefineInjectable({
          factory: function() {
            return new n(a.ɵɵinject(e.LazyLoadService));
          },
          token: n,
          providedIn: 'root',
        })),
        n
      );
    })();
  var j,
    D = [O, w, k],
    P = (function() {
      function n(n) {
        this.initialService = n;
      }
      return (
        (n.decorators = [
          {
            type: a.NgModule,
            args: [
              {
                declarations: y(D, [L]),
                imports: [
                  e.CoreModule,
                  t.ThemeSharedModule,
                  r.NgbCollapseModule,
                  r.NgbDropdownModule,
                  l.ToastModule,
                  o.NgxValidateCoreModule,
                  i.NgxsModule.forFeature([S]),
                  o.NgxValidateCoreModule.forRoot({
                    targetSelector: '.form-group',
                    blueprints: {
                      email: 'AbpAccount::ThisFieldIsNotAValidEmailAddress.',
                      max: 'AbpAccount::ThisFieldMustBeBetween{0}And{1}[{{ min }},{{ max }}]',
                      maxlength: 'AbpAccount::ThisFieldMustBeAStringWithAMaximumLengthOf{1}[{{ requiredLength }}]',
                      min: 'AbpAccount::ThisFieldMustBeBetween{0}And{1}[{{ min }},{{ max }}]',
                      minlength:
                        'AbpAccount::ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf[{{ min }},{{ max }}]',
                      required: 'AbpAccount::ThisFieldIsRequired.',
                      passwordMismatch: 'AbpIdentity::Identity.PasswordConfirmationFailed',
                    },
                    errorTemplate: L,
                  }),
                ],
                exports: y(D),
                entryComponents: y(D, [L]),
              },
            ],
          },
        ]),
        (n.ctorParameters = function() {
          return [{ type: A }];
        }),
        n
      );
    })();
  (function(n) {
    function e() {}
    function t() {}
    (n.State = e), (n.NavigationElement = t);
  })(j || (j = {})),
    (n.AccountLayoutComponent = w),
    (n.AddNavigationElement = x),
    (n.ApplicationLayoutComponent = O),
    (n.EmptyLayoutComponent = k),
    (n.LAYOUTS = D),
    (n.LayoutState = S),
    (n.RemoveNavigationElementByName = C),
    (n.ThemeBasicModule = P),
    (n.ValidationErrorComponent = L),
    (n.ɵa = O),
    (n.ɵb = S),
    (n.ɵc = w),
    (n.ɵd = k),
    (n.ɵe = L),
    (n.ɵf = S),
    (n.ɵg = x),
    (n.ɵh = C),
    (n.ɵj = A),
    Object.defineProperty(n, '__esModule', { value: !0 });
});
//# sourceMappingURL=abp-ng.theme.basic.umd.min.js.map
