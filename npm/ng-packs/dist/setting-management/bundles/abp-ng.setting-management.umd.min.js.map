{"version":3,"sources":["ng://@abp/ng.setting-management/lib/components/setting-management.component.ts","ng://@abp/ng.setting-management/lib/setting-management-routing.module.ts","ng://@abp/ng.setting-management/lib/setting-management.module.ts"],"names":["SettingManagementComponent","router","store","this","settings","selected","trackByFn","_","item","name","prototype","ngOnInit","_this","getSettingTabs","filter","setting","selectSnapshot","ConfigState","getGrantedPolicy","requiredPolicy","sort","a","b","order","length","Component","args","selector","template","Router","Store","routes","path","component","DynamicLayoutComponent","children","SettingManagementRoutingModule","NgModule","imports","RouterModule","forChild","exports","SettingManagementModule","declarations","CoreModule","ThemeSharedModule"],"mappings":"4jBAAA,IAAAA,EAAA,WAiBE,SAAAA,EAAoBC,EAAwBC,GAAxBC,KAAAF,OAAAA,EAAwBE,KAAAD,MAAAA,EAN5CC,KAAAC,SAAyB,GAEzBD,KAAAE,SAAQ,GAERF,KAAAG,UAAS,SAAiCC,EAAGC,GAAS,OAAAA,EAAKC,MAY7D,OARET,EAAAU,UAAAC,SAAA,WAAA,IAAAC,EAAAT,KACEA,KAAKC,SAAWS,EAAAA,iBACbC,QAAM,SAACC,GAAW,OAAAH,EAAKV,MAAMc,eAAeC,EAAAA,YAAYC,iBAAiBH,EAAQI,oBACjFC,MAAI,SAAEC,EAAGC,GAAM,OAAAD,EAAEE,MAAQD,EAAEC,SAC1BpB,KAAKC,SAASoB,SAChBrB,KAAKE,SAAWF,KAAKC,SAAS,yBAlBnCqB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,yBACVC,SAAA,oiDANOC,EAAAA,cACAC,EAAAA,SAwBT9B,EA3BA,OCKM+B,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAWC,EAAAA,uBACXC,SAAU,CAAC,CAAEH,KAAM,GAAIC,UAAWjC,MAItCoC,EAAA,WAAA,SAAAA,KAI6C,2BAJ5CC,EAAAA,SAAQX,KAAA,CAAC,CACRY,QAAS,CAACC,EAAAA,aAAaC,SAAST,IAChCU,QAAS,CAACF,EAAAA,kBAEiCH,EAJ7C,GCbAM,EAAA,WAMA,SAAAA,KAIsC,2BAJrCL,EAAAA,SAAQX,KAAA,CAAC,CACRiB,aAAc,CAAC3C,GACfsC,QAAS,CAACF,EAAgCQ,EAAAA,WAAYC,EAAAA,uBAElBH,EAVtC","sourcesContent":["import { Component, TrackByFunction, OnInit } from '@angular/core';\nimport { SettingTab, getSettingTabs } from '@abp/ng.theme.shared';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '@abp/ng.core';\n\n@Component({\n  selector: 'abp-setting-management',\n  templateUrl: './setting-management.component.html',\n})\nexport class SettingManagementComponent implements OnInit {\n  settings: SettingTab[] = [];\n\n  selected = {} as SettingTab;\n\n  trackByFn: TrackByFunction<SettingTab> = (_, item) => item.name;\n\n  constructor(private router: Router, private store: Store) {}\n\n  ngOnInit() {\n    this.settings = getSettingTabs()\n      .filter(setting => this.store.selectSnapshot(ConfigState.getGrantedPolicy(setting.requiredPolicy)))\n      .sort((a, b) => a.order - b.order);\n    if (this.settings.length) {\n      this.selected = this.settings[0];\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingManagementComponent } from './components/setting-management.component';\nimport { DynamicLayoutComponent } from '@abp/ng.core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    children: [{ path: '', component: SettingManagementComponent }],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingManagementRoutingModule {}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule } from '@angular/core';\nimport { SettingManagementRoutingModule } from './setting-management-routing.module';\nimport { SettingManagementComponent } from './components/setting-management.component';\n\n@NgModule({\n  declarations: [SettingManagementComponent],\n  imports: [SettingManagementRoutingModule, CoreModule, ThemeSharedModule],\n})\nexport class SettingManagementModule {}\n"]}