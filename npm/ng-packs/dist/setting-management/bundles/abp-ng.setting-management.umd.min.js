!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@angular/router"),require("@ngxs/store")):"function"==typeof define&&define.amd?define("@abp/ng.setting-management",["exports","@abp/ng.core","@abp/ng.theme.shared","@angular/core","@angular/router","@ngxs/store"],t):t(((e=e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng["setting-management"]={}),e.ng_core,e.ng_theme_shared,e.ng.core,e.ng.router,e.store)}(this,(function(e,t,n,r,a,o){"use strict";
/*! *****************************************************************************
    ***************************************************************************** */function i(e,t,n,r){var a,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(a=e[s])&&(i=(o<3?a(i):o>3?a(t,n,i):a(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}function s(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}var c=function(){function e(e){this.payload=e}return e.type="[SettingManagement] Set Selected Tab",e}();var l=function(){function e(){}return e.getSelectedTab=function(e){return e.selectedTab},e.prototype.settingManagementAction=function(e,t){(0,e.patchState)({selectedTab:t.payload})},i([o.Action(c),s("design:type",Function),s("design:paramtypes",[Object,c]),s("design:returntype",void 0)],e.prototype,"settingManagementAction",null),i([o.Selector(),s("design:type",Function),s("design:paramtypes",[Object]),s("design:returntype",void 0)],e,"getSelectedTab",null),e=i([o.State({name:"SettingManagementState",defaults:{selectedTab:{}}})],e)}(),d=function(){function e(e,t){this.router=e,this.store=t,this.settings=[],this.trackByFn=function(e,t){return t.name}}return Object.defineProperty(e.prototype,"selected",{get:function(){var e=this.store.selectSnapshot(l.getSelectedTab);return e&&e.component||!this.settings.length?e:this.settings[0]},set:function(e){this.store.dispatch(new c(e))},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.settings=n.getSettingTabs().filter((function(n){return e.store.selectSnapshot(t.ConfigState.getGrantedPolicy(n.requiredPolicy))})).sort((function(e,t){return e.order-t.order})),!this.selected&&this.settings.length&&(this.selected=this.settings[0])},e.decorators=[{type:r.Component,args:[{selector:"abp-setting-management",template:'<div class="row entry-row">\r\n  <div class="col-auto">\r\n    <h1 class="content-header-title">{{ \'AbpSettingManagement::Settings\' | abpLocalization }}</h1>\r\n  </div>\r\n  <div id="breadcrumb" class="col-md-auto pl-md-0">\r\n    <abp-breadcrumb></abp-breadcrumb>\r\n  </div>\r\n  <div class="col">\r\n    <div class="text-lg-right pt-2" id="AbpContentToolbar"></div>\r\n  </div>\r\n</div>\r\n\r\n<div id="SettingManagementWrapper">\r\n  <div class="card">\r\n    <div class="card-body">\r\n      <div class="row">\r\n        <div class="col-12 col-md-3">\r\n          <ul class="nav flex-column nav-pills" id="nav-tab" role="tablist">\r\n            <li\r\n              *abpFor="let setting of settings; trackBy: trackByFn"\r\n              (click)="selected = setting"\r\n              class="nav-item"\r\n              [abpPermission]="setting.requiredPolicy"\r\n            >\r\n              <a\r\n                class="nav-link"\r\n                [id]="setting.name + \'-tab\'"\r\n                role="tab"\r\n                [class.active]="setting.name === selected.name"\r\n                >{{ setting.name | abpLocalization }}</a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class="col-12 col-md-9">\r\n          <div *ngIf="settings.length" class="tab-content">\r\n            <div class="tab-pane fade show active" [id]="selected.name + \'-tab\'" role="tabpanel">\r\n              <ng-container *ngComponentOutlet="selected.component"></ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n'}]}],e.ctorParameters=function(){return[{type:a.Router},{type:o.Store}]},e}();var u=[{path:"",component:t.DynamicLayoutComponent,children:[{path:"",component:d,data:{requiredPolicy:"AbpAccount.SettingManagement"}}]}],g=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{imports:[a.RouterModule.forChild(u)],exports:[a.RouterModule]}]}],e}(),p=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{declarations:[d],imports:[g,t.CoreModule,n.ThemeSharedModule,o.NgxsModule.forFeature([l])]}]}],e}();e.SettingManagementComponent=d,e.SettingManagementModule=p,e.ɵa=g,e.ɵb=l,e.ɵc=c,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.setting-management.umd.min.js.map
