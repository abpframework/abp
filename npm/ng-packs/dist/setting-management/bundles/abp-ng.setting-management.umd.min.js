!(function(e, n) {
  'object' == typeof exports && 'undefined' != typeof module
    ? n(
        exports,
        require('@abp/ng.core'),
        require('@abp/ng.theme.shared'),
        require('@angular/core'),
        require('@angular/router'),
        require('@ngxs/store'),
      )
    : 'function' == typeof define && define.amd
    ? define('@abp/ng.setting-management', [
        'exports',
        '@abp/ng.core',
        '@abp/ng.theme.shared',
        '@angular/core',
        '@angular/router',
        '@ngxs/store',
      ], n)
    : n(
        (((e = e || self).abp = e.abp || {}), (e.abp.ng = e.abp.ng || {}), (e.abp.ng['setting-management'] = {})),
        e.ng_core,
        e.ng_theme_shared,
        e.ng.core,
        e.ng.router,
        e.store,
      );
})(this, function(e, n, t, a, r, i) {
  'use strict';
  var o = (function() {
    function e(e, n) {
      (this.router = e),
        (this.store = n),
        (this.settings = []),
        (this.selected = {}),
        (this.trackByFn = function(e, n) {
          return n.name;
        });
    }
    return (
      (e.prototype.ngOnInit = function() {
        var e = this;
        (this.settings = t
          .getSettingTabs()
          .filter(function(t) {
            return e.store.selectSnapshot(n.ConfigState.getGrantedPolicy(t.requiredPolicy));
          })
          .sort(function(e, n) {
            return e.order - n.order;
          })),
          this.settings.length && (this.selected = this.settings[0]);
      }),
      (e.decorators = [
        {
          type: a.Component,
          args: [
            {
              selector: 'abp-setting-management',
              template:
                '<div class="row entry-row">\n  <div class="col-auto">\n    <h1 class="content-header-title">{{ \'AbpSettingManagement::Settings\' | abpLocalization }}</h1>\n  </div>\n  <div id="breadcrumb" class="col-md-auto pl-md-0">\n    <abp-breadcrumb></abp-breadcrumb>\n  </div>\n  <div class="col">\n    <div class="text-lg-right pt-2" id="AbpContentToolbar"></div>\n  </div>\n</div>\n\n<div id="SettingManagementWrapper">\n  <div class="card">\n    <div class="card-body">\n      <div class="row">\n        <div class="col-3">\n          <ul class="nav flex-column nav-pills" id="nav-tab" role="tablist">\n            <li\n              *abpFor="let setting of settings; trackBy: trackByFn"\n              (click)="selected = setting"\n              class="nav-item"\n              [abpPermission]="setting.requiredPolicy"\n            >\n              <a\n                class="nav-link"\n                [id]="setting.name + \'-tab\'"\n                role="tab"\n                [class.active]="setting.name === selected.name"\n                >{{ setting.name | abpLocalization }}</a\n              >\n            </li>\n          </ul>\n        </div>\n        <div class="col-9">\n          <div *ngIf="settings.length" class="tab-content">\n            <div class="tab-pane fade show active" [id]="selected.name + \'-tab\'" role="tabpanel">\n              <ng-container *ngComponentOutlet="selected.component"></ng-container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',
            },
          ],
        },
      ]),
      (e.ctorParameters = function() {
        return [{ type: r.Router }, { type: i.Store }];
      }),
      e
    );
  })();
  var s = [{ path: '', component: n.DynamicLayoutComponent, children: [{ path: '', component: o }] }],
    c = (function() {
      function e() {}
      return (
        (e.decorators = [
          { type: a.NgModule, args: [{ imports: [r.RouterModule.forChild(s)], exports: [r.RouterModule] }] },
        ]),
        e
      );
    })(),
    d = (function() {
      function e() {}
      return (
        (e.decorators = [
          { type: a.NgModule, args: [{ declarations: [o], imports: [c, n.CoreModule, t.ThemeSharedModule] }] },
        ]),
        e
      );
    })();
  (e.SettingManagementComponent = o),
    (e.SettingManagementModule = d),
    (e.Éµa = c),
    Object.defineProperty(e, '__esModule', { value: !0 });
});
//# sourceMappingURL=abp-ng.setting-management.umd.min.js.map
