{"version":3,"file":"abp-ng.setting-management.umd.js","sources":["ng://@abp/ng.setting-management/lib/components/setting-management.component.ts","ng://@abp/ng.setting-management/lib/setting-management-routing.module.ts","ng://@abp/ng.setting-management/lib/setting-management.module.ts"],"sourcesContent":["import { Component, TrackByFunction, OnInit } from '@angular/core';\nimport { SettingTab, getSettingTabs } from '@abp/ng.theme.shared';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '@abp/ng.core';\n\n@Component({\n  selector: 'abp-setting-management',\n  templateUrl: './setting-management.component.html',\n})\nexport class SettingManagementComponent implements OnInit {\n  settings: SettingTab[] = [];\n\n  selected = {} as SettingTab;\n\n  trackByFn: TrackByFunction<SettingTab> = (_, item) => item.name;\n\n  constructor(private router: Router, private store: Store) {}\n\n  ngOnInit() {\n    this.settings = getSettingTabs()\n      .filter(setting => this.store.selectSnapshot(ConfigState.getGrantedPolicy(setting.requiredPolicy)))\n      .sort((a, b) => a.order - b.order);\n    if (this.settings.length) {\n      this.selected = this.settings[0];\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingManagementComponent } from './components/setting-management.component';\nimport { DynamicLayoutComponent } from '@abp/ng.core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    children: [{ path: '', component: SettingManagementComponent }],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingManagementRoutingModule {}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule } from '@angular/core';\nimport { SettingManagementRoutingModule } from './setting-management-routing.module';\nimport { SettingManagementComponent } from './components/setting-management.component';\n\n@NgModule({\n  declarations: [SettingManagementComponent],\n  imports: [SettingManagementRoutingModule, CoreModule, ThemeSharedModule],\n})\nexport class SettingManagementModule {}\n"],"names":["getSettingTabs","ConfigState","Component","Router","Store","DynamicLayoutComponent","NgModule","RouterModule","CoreModule","ThemeSharedModule"],"mappings":";;;;;;;;;;AAAA;QAiBE,oCAAoB,MAAc,EAAU,KAAY;YAApC,WAAM,GAAN,MAAM,CAAQ;YAAU,UAAK,GAAL,KAAK,CAAO;YANxD,aAAQ,GAAiB,EAAE,CAAC;YAE5B,aAAQ,sBAAG,EAAE,EAAc,CAAC;YAE5B,cAAS;;;;;YAAgC,UAAC,CAAC,EAAE,IAAI,IAAK,OAAA,IAAI,CAAC,IAAI,GAAA,EAAC;SAEJ;;;;QAE5D,6CAAQ;;;QAAR;YAAA,iBAOC;YANC,IAAI,CAAC,QAAQ,GAAGA,8BAAc,EAAE;iBAC7B,MAAM;;;;YAAC,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,cAAc,CAACC,mBAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,GAAA,EAAC;iBAClG,IAAI;;;;;YAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;YACrC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAClC;SACF;;oBApBFC,cAAS,SAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,wjDAAkD;qBACnD;;;;oBAPQC,aAAM;oBACNC,WAAK;;QAwBd,iCAAC;KArBD,IAqBC;;;QAhBC,8CAA4B;;QAE5B,8CAA4B;;QAE5B,+CAAgE;;;;;QAEpD,4CAAsB;;;;;QAAE,2CAAoB;;;;;;;ICjB1D;QAKM,MAAM,GAAW;QACrB;YACE,IAAI,EAAE,EAAE;YACR,SAAS,EAAEC,8BAAsB;YACjC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0BAA0B,EAAE,CAAC;SAChE;KACF;AAED;QAAA;SAI8C;;oBAJ7CC,aAAQ,SAAC;wBACR,OAAO,EAAE,CAACC,mBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;wBACxC,OAAO,EAAE,CAACA,mBAAY,CAAC;qBACxB;;QAC4C,qCAAC;KAJ9C;;;;;;ACbA;QAMA;SAIuC;;oBAJtCD,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,0BAA0B,CAAC;wBAC1C,OAAO,EAAE,CAAC,8BAA8B,EAAEE,kBAAU,EAAEC,iCAAiB,CAAC;qBACzE;;QACqC,8BAAC;KAJvC;;;;;;;;;;;;;;"}