{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.core/lib/abstracts/ng-model.component.ts","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/loader.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/constants/different-locales.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/directives/autofocus.directive.ts","ng://@abp/ng.core/lib/directives/ellipsis.directive.ts","ng://@abp/ng.core/lib/directives/for.directive.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/directives/form-submit.directive.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/pipes/sort.pipe.ts","ng://@abp/ng.core/lib/directives/table-sort.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/models/application-configuration.ts","ng://@abp/ng.core/lib/models/common.ts","ng://@abp/ng.core/lib/models/config.ts","ng://@abp/ng.core/lib/models/session.ts","ng://@abp/ng.core/lib/models/profile.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/plugins/config/config.plugin.ts","ng://@abp/ng.core/lib/services/config-state.service.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/services/profile-state.service.ts","ng://@abp/ng.core/lib/services/session-state.service.ts","ng://@abp/ng.core/lib/tokens/common.token.ts","ng://@abp/ng.core/lib/directives/debounce.directive.ts","ng://@abp/ng.core/lib/directives/stop-propagation.directive.ts","ng://@abp/ng.core/lib/providers/locale.provider.ts","ng://@abp/ng.core/lib/core.module.ts","ng://@abp/ng.core/lib/utils/common-utils.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","op","TypeError","done","value","pop","push","e","step","__read","o","m","ar","error","__spread","concat","AbstractNgModelComponent","injector","cdRef","get","ChangeDetectorRef","_value","notifyValueChange","onChange","writeValue","_this","setTimeout","detectChanges","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","disabled","Component","args","selector","template","Injector","Input","PatchRouteByName","name","newValue","type","GetAppConfiguration","StartLoader","payload","StopLoader","GetProfile","UpdateProfile","ChangePassword","RestOccurError","SetLanguage","SetTenant","RestService","http","store","handleError","err","dispatch","console","throwError","request","config","api","_a","observe","skipHandleError","url","selectSnapshot","ConfigState","getApiUrl","method","options","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","pipe","take","tap","catchError","Injectable","providedIn","HttpClient","Store","ApplicationConfigurationService","rest","getConfiguration","organizeRoutes","routes","wrappers","parentNameArr","parentName","filter","route","children","filteredRoutes","sortRoutes","setChildRoute","map","foundedChildren","parent","sort","a","order","ABP_ROUTES","getAbpRoutes","localesMapping","ar-sa","ca-ES-valencia","de-de","es-ES","en-US","fil-Latn","ku-Arab","ky-Cyrl","mi-Latn","prs-Arab","qut-Latn","nso","quz","fr-FR","gd-Latn","ha-Latn","ig-Latn","it-it","mn-Cyrl","pt-BR","sd-Arab","sr-Cyrl-RS","sr-Latn-RS","tg-Cyrl","tk-Latn","tt-Cyrl","ug-Arab","yo-Latn","getInitialData","toPromise","localeInitializer","lang","state","SessionState","language","Promise","resolve","reject","registerLocale","then","locale","import","differentLocales","module","registerLocaleData","default","LocalizationService","router","ngZone","otherInstance","Error","setRouteReuse","reuse","routeReuseStrategy","shouldReuseRoute","navigated","run","_arguments","generator","navigateByUrl","catch","noop","P","fulfilled","rejected","result","interpolateParams","_i","select","getLocalization","instant","Router","NgZone","Optional","SkipSelf","localizationService","getLanguage","getTenant","tenant","setLanguage","_b","patchState","switchMap","from","setTenant","tslib_1.__decorate","Action","Selector","State","defaults","appConfigurationService","getAll","getApplicationInfo","environment","application","getOne","createSelector","ConfigState_1","getDeep","keys","split","isArray","reduce","acc","val","getRoute","path","flattedRoutes","find","apis","getSetting","snq","setting","values","getSettings","keyword","getGrantedPolicy","auth","grantedPolicies","defaultValue","localization","defaultResourceName","params","forEach","param","replace","addData","configuration","defaultLang","includes","of","patchRoute","getState","findIndex","patchRouteDeep","parentUrl","child","isFunction","takeUntilDestroy","componentInstance","destroyMethodName","source","originalDestroy","constructor","Subject","complete","takeUntil","DynamicLayoutComponent","layouts","requirements","snapshot","data","layout","l","toLowerCase","events","subscribe","event","NavigationEnd","segments","parseUrl","root","primary","layout_1","wrapper","findLayout","ngOnDestroy","ActivatedRoute","Select","Observable","RouterOutletComponent","AutofocusDirective","elRef","delay","ngAfterViewInit","nativeElement","focus","Directive","ElementRef","EllipsisDirective","enabled","width","undefined","ngAfterContentInit","title","innerText","HostBinding","AbpForContext","$implicit","index","count","list","RecordView","record","view","ForDirective","tempRef","vcRef","differs","compareBy","compare","trackBy","item","id","iterateOverAppliedOperations","changes","rw","forEachOperation","previousIndex","currentIndex","createEmbeddedView","items","remove","move","context","iterateOverAttachedViews","viewRef","forEachIdentityChange","projectItems","emptyRef","clear","rootNodes","isShowEmptyRef","differ","create","trackByFn","diff","sortItems","orderBy","ngOnChanges","clone","compareFn","filterBy","filterVal","orderDir","reverse","TemplateRef","ViewContainerRef","IterableDiffers","uuid","Math","random","toString","FormSubmitDirective","formGroupDirective","host","ngSubmit","EventEmitter","executedNgSubmit","ngOnInit","markAsDirty","fromEvent","debounceTime","dispatchEvent","Event","bubbles","cancelable","notValidateOnSubmit","form","setDirty","controls","group","updateValueAndValidity","FormGroupDirective","Self","Output","ProfileService","update","changePassword","ProfileState","profileService","getProfile","profile","updateProfile","PermissionDirective","renderer","condition","isGranted","removeChild","parentElement","Renderer2","SortPipe","transform","sortOrder","sortKey","numberArray","stringArray","sorted","Pipe","TableSortDirective","table","sortPipe","abpTableSort","providers","Table","VisibilityDirective","mutationObserverEnabled","completed$","observer","focusedElement","MutationObserver","mutations","mutation","childNodes","node","HTMLElement","disconnect","removeFromDOM","childList","AuthGuard","oauthService","canActivate","hasValidAccessToken","createUrlTree","redirectUrl","OAuthService","PermissionGuard","resource","access","status","ApplicationConfiguration","ABP","Config","Session","Profile","ApiInterceptor","oAuthService","intercept","headers","token","getAccessToken","has","handle","setHeaders","finalize","Response","Localization","Language","Auth","Value","CurrentUser","Root","PagedItemsResponse","PageQueryParams","Route","FullRoute","BasicItem","Environment","Application","Requirements","LocalizationWithDefault","Rest","Request","ChangePasswordRequest","LocalizationPipe","NGXS_CONFIG_PLUGIN_OPTIONS","InjectionToken","ConfigPlugin","initialized","matches","actionMatcher","InitState","UpdateState","transformedRoutes","oldAbpRoutes","abpRoutes","transformed","component","loadChildren","abpPackage","abp","setUrls","transformRoutes","flat","flatRoutes","setValue","Inject","ConfigStateService","LazyLoadService","loadedLibraries","load","urlOrUrls","content","targetQuery","position","subscriber","library","slice","lastIndexOf","ReplaySubject","document","createElement","src","text","rel","href","textContent","onload","querySelector","insertAdjacentElement","ProfileStateService","SessionStateService","ENVIRONMENT","CONFIG","InputEventDebounceDirective","el","debounce","debounceEvent","emit","ClickEventStopPropagationDirective","stopPropEvent","stopPropagation","LocaleId","_super","__","tslib_1.__extends","currentLang","valueOf","String","LocaleProvider","provide","LOCALE_ID","useClass","deps","CoreModule","forRoot","ngModule","NGXS_PLUGINS","multi","useValue","HTTP_INTERCEPTORS","APP_INITIALIZER","useFactory","NgModule","imports","NgxsModule","forFeature","NgxsStoragePluginModule","NgxsRouterPluginModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ControlValueAccessor } from '@angular/forms';\nimport { ChangeDetectorRef, Component, Injector, Input, Type } from '@angular/core';\n\n@Component({ selector: 'abp-abstract-ng-model', template: '' })\nexport class AbstractNgModelComponent<T = any> implements ControlValueAccessor {\n  @Input() disabled: boolean;\n\n  @Input() set value(value: T) {\n    this._value = value;\n    this.notifyValueChange();\n  }\n\n  get value(): T {\n    return this._value;\n  }\n\n  onChange: (value: T) => {};\n  onTouched: () => {};\n\n  protected _value: T;\n  protected cdRef: ChangeDetectorRef;\n\n  constructor(public injector: Injector) {\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef as Type<ChangeDetectorRef>);\n  }\n\n  notifyValueChange(): void {\n    if (this.onChange) {\n      this.onChange(this.value);\n    }\n  }\n\n  writeValue(value: T): void {\n    this._value = value;\n    setTimeout(() => this.cdRef.detectChanges(), 0);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import { ABP } from '../models';\n\nexport class PatchRouteByName {\n  static readonly type = '[Config] Patch Route By Name';\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\n}\n\nexport class GetAppConfiguration {\n  static readonly type = '[Config] Get App Configuration';\n}\n","import { HttpRequest } from '@angular/common/http';\n\nexport class StartLoader {\n  static readonly type = '[Loader] Start';\n  constructor(public payload: HttpRequest<any>) {}\n}\n\nexport class StopLoader {\n  static readonly type = '[Loader] Stop';\n  constructor(public payload: HttpRequest<any>) {}\n}\n","import { Profile } from '../models';\n\nexport class GetProfile {\n  static readonly type = '[Profile] Get';\n}\n\nexport class UpdateProfile {\n  static readonly type = '[Profile] Update';\n  constructor(public payload: Profile.Response) {}\n}\n\nexport class ChangePassword {\n  static readonly type = '[Profile] Change Password';\n  constructor(public payload: Profile.ChangePasswordRequest) {}\n}\n","import { HttpErrorResponse } from '@angular/common/http';\n\nexport class RestOccurError {\n  static readonly type = '[Rest] Error';\n  constructor(public payload: HttpErrorResponse | any) {}\n}\n","import { ABP } from '../models';\n\nexport class SetLanguage {\n  static readonly type = '[Session] Set Language';\n  constructor(public payload: string) {}\n}\nexport class SetTenant {\n  static readonly type = '[Session] Set Tenant';\n  constructor(public payload: ABP.BasicItem) {}\n}\n","import { HttpClient, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, take, tap } from 'rxjs/operators';\nimport { RestOccurError } from '../actions/rest.actions';\nimport { Rest } from '../models/rest';\nimport { ConfigState } from '../states/config.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RestService {\n  constructor(private http: HttpClient, private store: Store) {}\n\n  handleError(err: any): Observable<any> {\n    this.store.dispatch(new RestOccurError(err));\n    console.error(err);\n    return throwError(err);\n  }\n\n  request<T, R>(request: HttpRequest<T> | Rest.Request<T>, config?: Rest.Config, api?: string): Observable<R> {\n    config = config || ({} as Rest.Config);\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\n    const url = (api || this.store.selectSnapshot(ConfigState.getApiUrl())) + request.url;\n    const { method, ...options } = request;\n\n    return this.http.request<T>(method, url, { observe, ...options } as any).pipe(\n      observe === Rest.Observe.Body ? take(1) : tap(),\n      catchError(err => {\n        if (skipHandleError) {\n          return throwError(err);\n        }\n\n        return this.handleError(err);\n      }),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Rest } from '../models/rest';\nimport { ApplicationConfiguration } from '../models/application-configuration';\nimport { RestService } from './rest.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApplicationConfigurationService {\n  constructor(private rest: RestService) {}\n\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/abp/application-configuration',\n    };\n\n    return this.rest.request<null, ApplicationConfiguration.Response>(request);\n  }\n}\n","import { ABP } from '../models';\n\nexport function organizeRoutes(\n  routes: ABP.FullRoute[],\n  wrappers: ABP.FullRoute[] = [],\n  parentNameArr = [] as ABP.FullRoute[],\n  parentName: string = null,\n): ABP.FullRoute[] {\n  const filter = route => {\n    if (route.children && route.children.length) {\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\n    }\n\n    if (route.parentName && route.parentName !== parentName) {\n      parentNameArr.push(route);\n      return false;\n    }\n\n    return true;\n  };\n\n  if (parentName) {\n    // recursive block\n    return routes.filter(filter);\n  }\n\n  const filteredRoutes = routes.filter(filter);\n\n  if (parentNameArr.length) {\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\n  }\n\n  return filteredRoutes;\n}\n\nexport function setChildRoute(routes: ABP.FullRoute[], parentNameArr: ABP.FullRoute[]): ABP.FullRoute[] {\n  return routes.map(route => {\n    if (route.children && route.children.length) {\n      route.children = setChildRoute(route.children, parentNameArr);\n    }\n\n    const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\n    if (foundedChildren && foundedChildren.length) {\n      route.children = [...(route.children || []), ...foundedChildren];\n    }\n\n    return route;\n  });\n}\n\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\n  if (!routes.length) return [];\n  return routes\n    .sort((a, b) => a.order - b.order)\n    .map(route => {\n      if (route.children && route.children.length) {\n        route.children = sortRoutes(route.children);\n      }\n\n      return route;\n    });\n}\n\nconst ABP_ROUTES = [] as ABP.FullRoute[];\n\nexport function addAbpRoutes(routes: ABP.FullRoute | ABP.FullRoute[]): void {\n  if (!Array.isArray(routes)) {\n    routes = [routes];\n  }\n\n  ABP_ROUTES.push(...routes);\n}\n\nexport function getAbpRoutes(): ABP.FullRoute[] {\n  return ABP_ROUTES;\n}\n","// Different locales from .NET\n// Key is .NET locale, value is Angular locale\n\nexport default {\n  'ar-sa': 'ar-SA',\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\n  'de-de': 'de',\n  'es-ES': 'es',\n  'en-US': 'en',\n  'fil-Latn': 'en',\n  'ku-Arab': 'en',\n  'ky-Cyrl': 'en',\n  'mi-Latn': 'en',\n  'prs-Arab': 'en',\n  'qut-Latn': 'en',\n  nso: 'en',\n  quz: 'en',\n  'fr-FR': 'fr',\n  'gd-Latn': 'gd',\n  'ha-Latn': 'ha',\n  'ig-Latn': 'ig',\n  'it-it': 'it',\n  'mn-Cyrl': 'mn',\n  'pt-BR': 'pt',\n  'sd-Arab': 'pa-Arab',\n  'sr-Cyrl-RS': 'sr-Cyrl',\n  'sr-Latn-RS': 'sr-Latn',\n  'tg-Cyrl': 'tg',\n  'tk-Latn': 'tk',\n  'tt-Cyrl': 'tt',\n  'ug-Arab': 'ug',\n  'yo-Latn': 'yo',\n};\n","import { registerLocaleData } from '@angular/common';\nimport { Injector } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { GetAppConfiguration } from '../actions/config.actions';\nimport differentLocales from '../constants/different-locales';\n\nexport function getInitialData(injector: Injector) {\n  const fn = () => {\n    const store: Store = injector.get(Store);\n\n    return store.dispatch(new GetAppConfiguration()).toPromise();\n  };\n\n  return fn;\n}\n\nexport function localeInitializer(injector: Injector) {\n  const fn = () => {\n    const store: Store = injector.get(Store);\n\n    const lang = store.selectSnapshot(state => state.SessionState.language) || 'en';\n\n    return new Promise((resolve, reject) => {\n      registerLocale(lang).then(() => resolve(), reject);\n    });\n  };\n\n  return fn;\n}\n\nexport function registerLocale(locale: string) {\n  return import(\n    /* webpackInclude: /(af|am|ar-SA|as|az-Latn|be|bg|bn-BD|bn-IN|bs|ca|ca-ES-VALENCIA|cs|cy|da|de|de|el|en-GB|en|es|en|es-US|es-MX|et|eu|fa|fi|en|fr|fr|fr-CA|ga|gd|gl|gu|ha|he|hi|hr|hu|hy|id|ig|is|it|it|ja|ka|kk|km|kn|ko|kok|en|en|lb|lt|lv|en|mk|ml|mn|mr|ms|mt|nb|ne|nl|nl-BE|nn|en|or|pa|pa-Arab|pl|en|pt|pt-PT|en|en|ro|ru|rw|pa-Arab|si|sk|sl|sq|sr-Cyrl-BA|sr-Cyrl|sr-Latn|sv|sw|ta|te|tg|th|ti|tk|tn|tr|tt|ug|uk|ur|uz-Latn|vi|wo|xh|yo|zh-Hans|zh-Hant|zu)\\.js$/ */\n    `@angular/common/locales/${differentLocales[locale] || locale}.js`\n  ).then(module => {\n    registerLocaleData(module.default);\n  });\n}\n","import { Injectable, NgZone, Optional, SkipSelf } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { noop, Observable } from 'rxjs';\nimport { ConfigState } from '../states/config.state';\nimport { registerLocale } from '../utils/initial-utils';\n\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\n\n@Injectable({ providedIn: 'root' })\nexport class LocalizationService {\n  get currentLang(): string {\n    return this.store.selectSnapshot(state => state.SessionState.language);\n  }\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private ngZone: NgZone,\n    @Optional()\n    @SkipSelf()\n    otherInstance: LocalizationService,\n  ) {\n    if (otherInstance) throw new Error('LocaleService should have only one instance.');\n  }\n\n  setRouteReuse(reuse: ShouldReuseRoute) {\n    this.router.routeReuseStrategy.shouldReuseRoute = reuse;\n  }\n\n  registerLocale(locale: string) {\n    const { shouldReuseRoute } = this.router.routeReuseStrategy;\n    this.setRouteReuse(() => false);\n    this.router.navigated = false;\n\n    return registerLocale(locale).then(() => {\n      this.ngZone.run(async () => {\n        await this.router.navigateByUrl(this.router.url).catch(noop);\n        this.setRouteReuse(shouldReuseRoute);\n      });\n    });\n  }\n\n  get(key: string, ...interpolateParams: string[]): Observable<string> {\n    return this.store.select(ConfigState.getLocalization(key, ...interpolateParams));\n  }\n\n  instant(key: string, ...interpolateParams: string[]): string {\n    return this.store.selectSnapshot(ConfigState.getLocalization(key, ...interpolateParams));\n  }\n}\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { from } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { GetAppConfiguration } from '../actions/config.actions';\nimport { SetLanguage, SetTenant } from '../actions/session.actions';\nimport { ABP, Session } from '../models';\nimport { LocalizationService } from '../services/localization.service';\n\n@State<Session.State>({\n  name: 'SessionState',\n  defaults: {} as Session.State,\n})\nexport class SessionState {\n  @Selector()\n  static getLanguage({ language }: Session.State): string {\n    return language;\n  }\n\n  @Selector()\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\n    return tenant;\n  }\n\n  constructor(private localizationService: LocalizationService) {}\n\n  @Action(SetLanguage)\n  setLanguage({ patchState, dispatch }: StateContext<Session.State>, { payload }: SetLanguage) {\n    patchState({\n      language: payload,\n    });\n\n    return dispatch(new GetAppConfiguration()).pipe(\n      switchMap(() => from(this.localizationService.registerLocale(payload))),\n    );\n  }\n\n  @Action(SetTenant)\n  setTenant({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\n    patchState({\n      tenant: payload,\n    });\n  }\n}\n","import { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\nimport { of } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport snq from 'snq';\nimport { GetAppConfiguration, PatchRouteByName } from '../actions/config.actions';\nimport { SetLanguage } from '../actions/session.actions';\nimport { ABP } from '../models/common';\nimport { Config } from '../models/config';\nimport { ApplicationConfigurationService } from '../services/application-configuration.service';\nimport { organizeRoutes } from '../utils/route-utils';\nimport { SessionState } from './session.state';\n\n@State<Config.State>({\n  name: 'ConfigState',\n  defaults: {} as Config.State,\n})\nexport class ConfigState {\n  @Selector()\n  static getAll(state: Config.State) {\n    return state;\n  }\n\n  @Selector()\n  static getApplicationInfo(state: Config.State): Config.Application {\n    return state.environment.application || ({} as Config.Application);\n  }\n\n  static getOne(key: string) {\n    const selector = createSelector(\n      [ConfigState],\n      (state: Config.State) => {\n        return state[key];\n      },\n    );\n\n    return selector;\n  }\n\n  static getDeep(keys: string[] | string) {\n    if (typeof keys === 'string') {\n      keys = keys.split('.');\n    }\n\n    if (!Array.isArray(keys)) {\n      throw new Error('The argument must be a dot string or an string array.');\n    }\n\n    const selector = createSelector(\n      [ConfigState],\n      (state: Config.State) => {\n        return (keys as string[]).reduce((acc, val) => {\n          if (acc) {\n            return acc[val];\n          }\n\n          return undefined;\n        }, state);\n      },\n    );\n\n    return selector;\n  }\n\n  static getRoute(path?: string, name?: string) {\n    const selector = createSelector(\n      [ConfigState],\n      (state: Config.State) => {\n        const { flattedRoutes } = state;\n        return (flattedRoutes as ABP.FullRoute[]).find(route => {\n          if (path && route.path === path) {\n            return route;\n          } else if (name && route.name === name) {\n            return route;\n          }\n        });\n      },\n    );\n\n    return selector;\n  }\n\n  static getApiUrl(key?: string) {\n    const selector = createSelector(\n      [ConfigState],\n      (state: Config.State): string => {\n        return state.environment.apis[key || 'default'].url;\n      },\n    );\n\n    return selector;\n  }\n\n  static getSetting(key: string) {\n    const selector = createSelector(\n      [ConfigState],\n      (state: Config.State) => {\n        return snq(() => state.setting.values[key]);\n      },\n    );\n    return selector;\n  }\n\n  static getSettings(keyword?: string) {\n    const selector = createSelector(\n      [ConfigState],\n      (state: Config.State) => {\n        if (keyword) {\n          const keys = snq(() => Object.keys(state.setting.values).filter(key => key.indexOf(keyword) > -1), []);\n\n          if (keys.length) {\n            return keys.reduce((acc, key) => ({ ...acc, [key]: state.setting.values[key] }), {});\n          }\n        }\n\n        return snq(() => state.setting.values, {});\n      },\n    );\n    return selector;\n  }\n\n  static getGrantedPolicy(key: string) {\n    const selector = createSelector(\n      [ConfigState],\n      (state: Config.State): boolean => {\n        if (!key) return true;\n        return snq(() => state.auth.grantedPolicies[key], false);\n      },\n    );\n\n    return selector;\n  }\n\n  static getLocalization(key: string | Config.LocalizationWithDefault, ...interpolateParams: string[]) {\n    let defaultValue: string;\n\n    if (typeof key !== 'string') {\n      defaultValue = key.defaultValue;\n      key = key.key;\n    }\n\n    if (!key) key = '';\n\n    const keys = key.split('::') as string[];\n    const selector = createSelector(\n      [ConfigState],\n      (state: Config.State) => {\n        if (!state.localization) return defaultValue || key;\n\n        const { defaultResourceName } = state.environment.localization;\n        if (keys[0] === '') {\n          if (!defaultResourceName) {\n            throw new Error(\n              `Please check your environment. May you forget set defaultResourceName?\n              Here is the example:\n               { production: false,\n                 localization: {\n                   defaultResourceName: 'MyProjectName'\n                  }\n               }`,\n            );\n          }\n\n          keys[0] = snq(() => defaultResourceName);\n        }\n\n        let localization = (keys as any).reduce((acc, val) => {\n          if (acc) {\n            return acc[val];\n          }\n\n          return undefined;\n        }, state.localization.values);\n\n        interpolateParams = interpolateParams.filter(params => params != null);\n        if (localization && interpolateParams && interpolateParams.length) {\n          interpolateParams.forEach(param => {\n            localization = localization.replace(/[\\'\\\"]?\\{[\\d]+\\}[\\'\\\"]?/, param);\n          });\n        }\n\n        if (typeof localization !== 'string') localization = '';\n        return localization || defaultValue || key;\n      },\n    );\n\n    return selector;\n  }\n\n  constructor(private appConfigurationService: ApplicationConfigurationService, private store: Store) {}\n\n  @Action(GetAppConfiguration)\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\n    return this.appConfigurationService.getConfiguration().pipe(\n      tap(configuration =>\n        patchState({\n          ...configuration,\n        }),\n      ),\n      switchMap(configuration => {\n        let defaultLang: string = configuration.setting.values['Abp.Localization.DefaultLanguage'];\n\n        if (defaultLang.includes(';')) {\n          defaultLang = defaultLang.split(';')[0];\n        }\n\n        return this.store.selectSnapshot(SessionState.getLanguage) ? of(null) : dispatch(new SetLanguage(defaultLang));\n      }),\n    );\n  }\n\n  @Action(PatchRouteByName)\n  patchRoute({ patchState, getState }: StateContext<Config.State>, { name, newValue }: PatchRouteByName) {\n    let routes: ABP.FullRoute[] = getState().routes;\n\n    const index = routes.findIndex(route => route.name === name);\n\n    routes = patchRouteDeep(routes, name, newValue);\n\n    return patchState({\n      routes,\n    });\n  }\n}\n\nfunction patchRouteDeep(\n  routes: ABP.FullRoute[],\n  name: string,\n  newValue: Partial<ABP.FullRoute>,\n  parentUrl: string = '',\n): ABP.FullRoute[] {\n  routes = routes.map(route => {\n    if (route.name === name) {\n      newValue.url = `${parentUrl}/${(!newValue.path && newValue.path === '' ? route.path : newValue.path) || ''}`;\n\n      if (newValue.children && newValue.children.length) {\n        newValue.children = newValue.children.map(child => ({\n          ...child,\n          url: `${newValue.url}/${child.path}`.replace('//', '/'),\n        }));\n      }\n\n      return { ...route, ...newValue };\n    } else if (route.children && route.children.length) {\n      route.children = patchRouteDeep(route.children, name, newValue, (parentUrl || '/') + route.path);\n    }\n\n    return route;\n  });\n\n  if (parentUrl) {\n    // recursive block\n    return routes;\n  }\n\n  return organizeRoutes(routes);\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\n  source: Observable<T>\n) => {\n  const originalDestroy = componentInstance[destroyMethodName];\n  if (isFunction(originalDestroy) === false) {\n    throw new Error(\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\n    );\n  }\n  if (!componentInstance['__takeUntilDestroy']) {\n    componentInstance['__takeUntilDestroy'] = new Subject();\n\n    componentInstance[destroyMethodName] = function() {\n      // tslint:disable-next-line: no-unused-expression\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\n      componentInstance['__takeUntilDestroy'].next(true);\n      componentInstance['__takeUntilDestroy'].complete();\n    };\n  }\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\n};\n","import { Component, Input, OnDestroy, Type } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router, UrlSegment } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport snq from 'snq';\nimport { eLayoutType } from '../enums/common';\nimport { Config } from '../models/config';\nimport { ABP } from '../models/common';\nimport { ConfigState } from '../states/config.state';\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\n\n@Component({\n  selector: 'abp-dynamic-layout',\n  template: `\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\n    <ng-template #componentOutlet><ng-container *ngComponentOutlet=\"layout\"></ng-container></ng-template>\n  `\n})\nexport class DynamicLayoutComponent implements OnDestroy {\n  @Select(ConfigState.getOne('requirements')) requirements$: Observable<Config.Requirements>;\n\n  layout: Type<any>;\n\n  constructor(private router: Router, private route: ActivatedRoute, private store: Store) {\n    const {\n      requirements: { layouts },\n      routes\n    } = this.store.selectSnapshot(ConfigState.getAll);\n\n    if ((this.route.snapshot.data || {}).layout) {\n      this.layout = layouts\n        .filter(l => !!l)\n        .find((l: any) => snq(() => l.type.toLowerCase().indexOf(this.route.snapshot.data.layout), -1) > -1);\n    }\n\n    this.router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const { segments } = this.router.parseUrl(event.url).root.children.primary;\n\n        const layout = (this.route.snapshot.data || {}).layout || findLayout(segments, routes);\n\n        this.layout = layouts\n          .filter(l => !!l)\n          .find((l: any) => snq(() => l.type.toLowerCase().indexOf(layout), -1) > -1);\n      }\n    });\n  }\n\n  ngOnDestroy() {}\n}\n\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\n  let layout = eLayoutType.empty;\n\n  const route = routes\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\n    .find(r => r.path === segments[0].path);\n\n  if (route) {\n    if (route.layout) {\n      layout = route.layout;\n    }\n\n    if (route.children && route.children.length && segments.length > 1) {\n      const child = route.children.find(c => c.path === segments[1].path);\n\n      if (child && child.layout) {\n        layout = child.layout;\n      }\n    }\n  }\n\n  return layout;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'abp-router-outlet',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class RouterOutletComponent {}\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[autofocus]'\n})\nexport class AutofocusDirective implements AfterViewInit {\n  @Input('autofocus')\n  delay = 0;\n\n  constructor(private elRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\n  }\n}\n","import { AfterContentInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: '[abpEllipsis]',\n})\nexport class EllipsisDirective implements AfterContentInit {\n  @Input('abpEllipsis')\n  width: string;\n\n  @HostBinding('title')\n  @Input()\n  title: string;\n\n  @Input('abpEllipsisEnabled')\n  enabled = true;\n\n  @HostBinding('class.abp-ellipsis-inline')\n  get inlineClass() {\n    return this.enabled && this.width;\n  }\n\n  @HostBinding('class.abp-ellipsis')\n  get class() {\n    return this.enabled && !this.width;\n  }\n\n  @HostBinding('style.max-width')\n  get maxWidth() {\n    return this.enabled && this.width ? this.width || '170px' : undefined;\n  }\n\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\n\n  ngAfterContentInit() {\n    setTimeout(() => {\n      const title = this.title;\n      this.title = title || (this.elRef.nativeElement as HTMLElement).innerText;\n\n      if (this.title !== title) {\n        this.cdRef.detectChanges();\n      }\n    }, 0);\n  }\n}\n","import {\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  IterableChangeRecord,\n  IterableChanges,\n  IterableDiffer,\n  IterableDiffers,\n  OnChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n} from '@angular/core';\nimport compare from 'just-compare';\nimport clone from 'just-clone';\n\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\n\nclass AbpForContext {\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\n}\n\nclass RecordView {\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\n}\n\n@Directive({\n  selector: '[abpFor]',\n})\nexport class ForDirective implements OnChanges {\n  @Input('abpForOf')\n  items: any[];\n\n  @Input('abpForOrderBy')\n  orderBy: string;\n\n  @Input('abpForOrderDir')\n  orderDir: 'ASC' | 'DESC';\n\n  @Input('abpForFilterBy')\n  filterBy: string;\n\n  @Input('abpForFilterVal')\n  filterVal: any;\n\n  @Input('abpForTrackBy')\n  trackBy;\n\n  @Input('abpForCompareBy')\n  compareBy: CompareFn;\n\n  @Input('abpForEmptyRef')\n  emptyRef: TemplateRef<any>;\n\n  private differ: IterableDiffer<any>;\n\n  private isShowEmptyRef: boolean;\n\n  get compareFn(): CompareFn {\n    return this.compareBy || compare;\n  }\n\n  get trackByFn(): TrackByFunction<any> {\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\n  }\n\n  constructor(\n    private tempRef: TemplateRef<AbpForContext>,\n    private vcRef: ViewContainerRef,\n    private differs: IterableDiffers,\n  ) {}\n\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\n    const rw: RecordView[] = [];\n\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\n      if (record.previousIndex == null) {\n        const view = this.vcRef.createEmbeddedView(\n          this.tempRef,\n          new AbpForContext(null, -1, -1, this.items),\n          currentIndex,\n        );\n\n        rw.push(new RecordView(record, view));\n      } else if (currentIndex == null) {\n        this.vcRef.remove(previousIndex);\n      } else {\n        const view = this.vcRef.get(previousIndex);\n        this.vcRef.move(view, currentIndex);\n\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\n      }\n    });\n\n    for (let i = 0, l = rw.length; i < l; i++) {\n      rw[i].view.context.$implicit = rw[i].record.item;\n    }\n  }\n\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\n      viewRef.context.index = i;\n      viewRef.context.count = l;\n      viewRef.context.list = this.items;\n    }\n\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\n      viewRef.context.$implicit = record.item;\n    });\n  }\n\n  private projectItems(items: any[]): void {\n    if (!items.length && this.emptyRef) {\n      this.vcRef.clear();\n      // tslint:disable-next-line: no-unused-expression\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\n      this.isShowEmptyRef = true;\n      this.differ = null;\n\n      return;\n    }\n\n    if (this.emptyRef && this.isShowEmptyRef) {\n      this.vcRef.clear();\n      this.isShowEmptyRef = false;\n    }\n\n    if (!this.differ && items) {\n      this.differ = this.differs.find(items).create(this.trackByFn);\n    }\n\n    if (this.differ) {\n      const changes = this.differ.diff(items);\n\n      if (changes) {\n        this.iterateOverAppliedOperations(changes);\n        this.iterateOverAttachedViews(changes);\n      }\n    }\n  }\n\n  private sortItems(items: any[]) {\n    if (this.orderBy) {\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\n    } else {\n      items.sort();\n    }\n  }\n\n  ngOnChanges() {\n    let items = clone(this.items) as any[];\n    if (!Array.isArray(items)) return;\n\n    const compareFn = this.compareFn;\n\n    if (typeof this.filterBy !== 'undefined' && this.filterVal) {\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\n    }\n\n    switch (this.orderDir) {\n      case 'ASC':\n        this.sortItems(items);\n        this.projectItems(items);\n        break;\n\n      case 'DESC':\n        this.sortItems(items);\n        items.reverse();\n        this.projectItems(items);\n        break;\n\n      default:\n        this.projectItems(items);\n    }\n  }\n}\n","export function uuid(a?: any): string {\n  return a\n    ? // tslint:disable-next-line: no-bitwise\n      (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Self\n} from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { takeUntilDestroy } from '../utils';\n\ntype Controls = { [key: string]: FormControl } | FormGroup[];\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: 'form[ngSubmit][formGroup]'\n})\nexport class FormSubmitDirective implements OnInit, OnDestroy {\n  @Input()\n  notValidateOnSubmit: string | boolean;\n\n  @Output() readonly ngSubmit = new EventEmitter();\n\n  executedNgSubmit = false;\n\n  constructor(\n    @Self() private formGroupDirective: FormGroupDirective,\n    private host: ElementRef<HTMLFormElement>,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.formGroupDirective.ngSubmit.pipe(takeUntilDestroy(this)).subscribe(() => {\n      this.markAsDirty();\n      this.executedNgSubmit = true;\n    });\n\n    fromEvent(this.host.nativeElement as HTMLElement, 'keyup')\n      .pipe(\n        debounceTime(200),\n        filter((key: KeyboardEvent) => key && key.key === 'Enter'),\n        takeUntilDestroy(this)\n      )\n      .subscribe(() => {\n        if (!this.executedNgSubmit) {\n          this.host.nativeElement.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\n        }\n\n        this.executedNgSubmit = false;\n      });\n\n    fromEvent(this.host.nativeElement, 'submit')\n      .pipe(\n        takeUntilDestroy(this),\n        filter(() => !this.notValidateOnSubmit && typeof this.notValidateOnSubmit !== 'string')\n      )\n      .subscribe(() => {\n        if (!this.executedNgSubmit) {\n          this.markAsDirty();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {}\n\n  markAsDirty() {\n    const { form } = this.formGroupDirective;\n\n    setDirty(form.controls as { [key: string]: FormControl });\n    form.markAsDirty();\n\n    this.cdRef.detectChanges();\n  }\n}\n\nfunction setDirty(controls: Controls) {\n  if (Array.isArray(controls)) {\n    controls.forEach(group => {\n      setDirty(group.controls as { [key: string]: FormControl });\n    });\n    return;\n  }\n\n  Object.keys(controls).forEach(key => {\n    controls[key].markAsDirty();\n    controls[key].updateValueAndValidity();\n  });\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService } from './rest.service';\nimport { Profile, Rest } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  constructor(private rest: RestService) {}\n\n  get(): Observable<Profile.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/identity/my-profile',\n    };\n\n    return this.rest.request<null, Profile.Response>(request);\n  }\n\n  update(body: Profile.Response): Observable<Profile.Response> {\n    const request: Rest.Request<Profile.Response> = {\n      method: 'PUT',\n      url: '/api/identity/my-profile',\n      body,\n    };\n\n    return this.rest.request<Profile.Response, Profile.Response>(request);\n  }\n\n  changePassword(body: Profile.ChangePasswordRequest, skipHandleError: boolean = false): Observable<null> {\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\n      method: 'POST',\n      url: '/api/identity/my-profile/change-password',\n      body,\n    };\n\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, { skipHandleError });\n  }\n}\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { tap } from 'rxjs/operators';\nimport { ChangePassword, GetProfile, UpdateProfile } from '../actions/profile.actions';\nimport { Profile } from '../models/profile';\nimport { ProfileService } from '../services/profile.service';\n\n@State<Profile.State>({\n  name: 'ProfileState',\n  defaults: {} as Profile.State,\n})\nexport class ProfileState {\n  @Selector()\n  static getProfile({ profile }: Profile.State): Profile.Response {\n    return profile;\n  }\n\n  constructor(private profileService: ProfileService) {}\n\n  @Action(GetProfile)\n  getProfile({ patchState }: StateContext<Profile.State>) {\n    return this.profileService.get().pipe(\n      tap(profile =>\n        patchState({\n          profile,\n        }),\n      ),\n    );\n  }\n\n  @Action(UpdateProfile)\n  updateProfile({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\n    return this.profileService.update(payload).pipe(\n      tap(profile =>\n        patchState({\n          profile,\n        }),\n      ),\n    );\n  }\n\n  @Action(ChangePassword)\n  changePassword(_, { payload }: ChangePassword) {\n    return this.profileService.changePassword(payload, true);\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\nimport { takeUntilDestroy } from '../utils';\n\n@Directive({\n  selector: '[abpPermission]',\n})\nexport class PermissionDirective implements OnInit, OnDestroy {\n  @Input('abpPermission') condition: string;\n\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2, private store: Store) {}\n\n  ngOnInit() {\n    if (this.condition) {\n      this.store\n        .select(ConfigState.getGrantedPolicy(this.condition))\n        .pipe(takeUntilDestroy(this))\n        .subscribe(isGranted => {\n          if (!isGranted) {\n            this.renderer.removeChild(\n              (this.elRef.nativeElement as HTMLElement).parentElement,\n              this.elRef.nativeElement,\n            );\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {}\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\nexport type SortOrder = 'asc' | 'desc';\n@Injectable()\n@Pipe({\n  name: 'abpSort',\n})\nexport class SortPipe implements PipeTransform {\n  transform(value: any[], sortOrder: SortOrder | string = 'asc', sortKey?: string): any {\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\n\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\n\n    let numberArray = [];\n    let stringArray = [];\n\n    if (!sortKey) {\n      numberArray = value.filter(item => typeof item === 'number').sort();\n      stringArray = value.filter(item => typeof item === 'string').sort();\n    } else {\n      numberArray = value.filter(item => typeof item[sortKey] === 'number').sort((a, b) => a[sortKey] - b[sortKey]);\n      stringArray = value\n        .filter(item => typeof item[sortKey] === 'string')\n        .sort((a, b) => {\n          if (a[sortKey] < b[sortKey]) return -1;\n          else if (a[sortKey] > b[sortKey]) return 1;\n          else return 0;\n        });\n    }\n    const sorted = numberArray.concat(stringArray);\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\n  }\n}\n","import { Directive, Input, Optional, Self, SimpleChanges, OnChanges } from '@angular/core';\nimport { Table } from 'primeng/table';\nimport { SortPipe, SortOrder } from '../pipes/sort.pipe';\nimport clone from 'just-clone';\nexport interface TableSortOptions {\n  key: string;\n  order: SortOrder;\n}\n@Directive({\n  selector: '[abpTableSort]',\n  providers: [SortPipe],\n})\nexport class TableSortDirective implements OnChanges {\n  @Input()\n  abpTableSort: TableSortOptions;\n  @Input()\n  value: any[] = [];\n  constructor(@Optional() @Self() private table: Table, private sortPipe: SortPipe) {}\n  ngOnChanges({ value, abpTableSort }: SimpleChanges) {\n    if (value || abpTableSort) {\n      this.abpTableSort = this.abpTableSort || ({} as TableSortOptions);\n      this.table.value = this.sortPipe.transform(clone(this.value), this.abpTableSort.order, this.abpTableSort.key);\n    }\n  }\n}\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport snq from 'snq';\n\n@Directive({\n  selector: '[abpVisibility]',\n})\nexport class VisibilityDirective implements AfterViewInit {\n  @Input('abpVisibility')\n  focusedElement: HTMLElement;\n\n  @Input()\n  mutationObserverEnabled = true;\n\n  completed$ = new Subject<boolean>();\n\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    if (!this.focusedElement && this.elRef) {\n      this.focusedElement = this.elRef.nativeElement;\n    }\n\n    let observer: MutationObserver;\n    if (this.mutationObserverEnabled) {\n      observer = new MutationObserver(mutations => {\n        mutations.forEach(mutation => {\n          if (!mutation.target) return;\n\n          const htmlNodes = snq(\n            () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\n            [],\n          );\n\n          if (!htmlNodes.length) {\n            this.removeFromDOM();\n            this.disconnect();\n          } else {\n            setTimeout(() => {\n              this.disconnect();\n            }, 0);\n          }\n        });\n      });\n\n      observer.observe(this.focusedElement, {\n        childList: true,\n      });\n    } else {\n      setTimeout(() => {\n        const htmlNodes = snq(\n          () => Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\n          [],\n        );\n\n        if (!htmlNodes.length) this.removeFromDOM();\n      }, 0);\n    }\n\n    this.completed$.subscribe(() => observer.disconnect());\n  }\n\n  disconnect() {\n    this.completed$.next();\n    this.completed$.complete();\n  }\n\n  removeFromDOM() {\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private oauthService: OAuthService, private router: Router) {}\n\n  canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean | UrlTree {\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\n    if (hasValidAccessToken) {\n      return hasValidAccessToken;\n    }\n\n    return this.router.createUrlTree(['/account/login'], { state: { redirectUrl: state.url } });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { ConfigState } from '../states';\nimport { tap } from 'rxjs/operators';\nimport { RestOccurError } from '../actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate({ data }: ActivatedRouteSnapshot): Observable<boolean> {\n    const resource = data.requiredPolicy as string;\n    return this.store.select(ConfigState.getGrantedPolicy(resource)).pipe(\n      tap(access => {\n        if (!access) {\n          this.store.dispatch(new RestOccurError({ status: 403 }));\n        }\n      }),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { Store } from '@ngxs/store';\nimport { SessionState } from '../states';\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n  constructor(private oAuthService: OAuthService, private store: Store) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    this.store.dispatch(new StartLoader(request));\n\n    const headers = {} as any;\n\n    const token = this.oAuthService.getAccessToken();\n    if (!request.headers.has('Authorization') && token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\n    if (!request.headers.has('Accept-Language') && lang) {\n      headers['Accept-Language'] = lang;\n    }\n\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\n    if (!request.headers.has('__tenant') && tenant) {\n      headers['__tenant'] = tenant.id;\n    }\n\n    return next\n      .handle(\n        request.clone({\n          setHeaders: headers,\n        }),\n      )\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\n  }\n}\n","import { ABP } from './common';\n\nexport namespace ApplicationConfiguration {\n  export interface Response {\n    localization: Localization;\n    auth: Auth;\n    setting: Value;\n    currentUser: CurrentUser;\n    features: Value;\n  }\n\n  export interface Localization {\n    values: LocalizationValue;\n    languages: Language[];\n  }\n\n  export interface LocalizationValue {\n    [key: string]: { [key: string]: string };\n  }\n\n  export interface Language {\n    cultureName: string;\n    uiCultureName: string;\n    displayName: string;\n    flagIcon: string;\n  }\n\n  export interface Auth {\n    policies: Policy;\n    grantedPolicies: Policy;\n  }\n\n  export interface Policy {\n    [key: string]: boolean;\n  }\n\n  export interface Value {\n    values: ABP.Dictionary<string>;\n  }\n\n  export interface CurrentUser {\n    isAuthenticated: boolean;\n    id: string;\n    tenantId: string;\n    userName: string;\n  }\n}\n","import { Config } from './config';\nimport { eLayoutType } from '../enums/common';\n\nexport namespace ABP {\n  export interface Root {\n    environment: Partial<Config.Environment>;\n    requirements: Config.Requirements;\n  }\n\n  export type PagedResponse<T> = {\n    totalCount: number;\n  } & PagedItemsResponse<T>;\n\n  export interface PagedItemsResponse<T> {\n    items: T[];\n  }\n\n  export interface PageQueryParams {\n    filter?: string;\n    sorting?: string;\n    skipCount?: number;\n    maxResultCount?: number;\n  }\n\n  export interface Route {\n    children?: Route[];\n    invisible?: boolean;\n    layout?: eLayoutType;\n    name: string;\n    order?: number;\n    parentName?: string;\n    path: string;\n    requiredPolicy?: string;\n    iconClass?: string;\n  }\n\n  export interface FullRoute extends Route {\n    url?: string;\n    wrapper?: boolean;\n  }\n\n  export interface BasicItem {\n    id: string;\n    name: string;\n  }\n\n  export interface Dictionary<T = any> {\n    [key: string]: T;\n  }\n}\n","import { AuthConfig } from 'angular-oauth2-oidc';\nimport { Type } from '@angular/core';\nimport { ApplicationConfiguration } from './application-configuration';\nimport { ABP } from './common';\n\nexport namespace Config {\n  export type State = ApplicationConfiguration.Response &\n    ABP.Root & { environment: Environment } & {\n      routes: ABP.FullRoute[];\n      flattedRoutes: ABP.FullRoute[];\n    };\n\n  export interface Environment {\n    application: Application;\n    production: boolean;\n    oAuthConfig: AuthConfig;\n    apis: Apis;\n    localization: { defaultResourceName: string };\n  }\n\n  export interface Application {\n    name: string;\n    logoUrl?: string;\n  }\n\n  export interface Apis {\n    [key: string]: { [key: string]: string };\n  }\n\n  export interface Requirements {\n    layouts: Type<any>[];\n  }\n\n  export interface LocalizationWithDefault {\n    key: string;\n    defaultValue: string;\n  }\n}\n","import { ABP } from '../models';\n\nexport namespace Session {\n  export interface State {\n    language: string;\n    tenant: ABP.BasicItem;\n  }\n}\n","export namespace Profile {\n  export interface State {\n    profile: Response;\n  }\n\n  export interface Response {\n    userName: string;\n    email: string;\n    name: string;\n    surname: string;\n    phoneNumber: string;\n  }\n\n  export interface ChangePasswordRequest {\n    currentPassword: string;\n    newPassword: string;\n  }\n}\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\n\nexport namespace Rest {\n  export interface Config {\n    skipHandleError?: boolean;\n    observe?: Observe;\n  }\n\n  export const enum Observe {\n    Body = 'body',\n    Events = 'events',\n    Response = 'response',\n  }\n\n  export const enum ResponseType {\n    ArrayBuffer = 'arraybuffer',\n    Blob = 'blob',\n    JSON = 'json',\n    Text = 'text',\n  }\n\n  export interface Request<T> {\n    body?: T;\n    headers?:\n      | HttpHeaders\n      | {\n          [header: string]: string | string[];\n        };\n    method: string;\n    params?:\n      | HttpParams\n      | {\n          [param: string]: any;\n        };\n    reportProgress?: boolean;\n    responseType?: ResponseType;\n    url: string;\n    withCredentials?: boolean;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Config } from '../models';\nimport { ConfigState } from '../states';\n\n@Pipe({\n  name: 'abpLocalization',\n})\nexport class LocalizationPipe implements PipeTransform {\n  constructor(private store: Store) {}\n\n  transform(value: string | Config.LocalizationWithDefault = '', ...interpolateParams: string[]): string {\n    return this.store.selectSnapshot(\n      ConfigState.getLocalization(\n        value,\n        ...interpolateParams.reduce((acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]), []),\n      ),\n    );\n  }\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Router, Routes } from '@angular/router';\nimport { actionMatcher, InitState, NgxsNextPluginFn, NgxsPlugin, setValue, UpdateState } from '@ngxs/store';\nimport snq from 'snq';\nimport { ABP } from '../../models';\nimport { organizeRoutes, getAbpRoutes } from '../../utils/route-utils';\nimport clone from 'just-clone';\n\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\n\n@Injectable()\nexport class ConfigPlugin implements NgxsPlugin {\n  private initialized = false;\n\n  constructor(@Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root, private router: Router) {}\n\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\n    const matches = actionMatcher(event);\n    const isInitAction = matches(InitState) || matches(UpdateState);\n\n    if (isInitAction && !this.initialized) {\n      const transformedRoutes = transformRoutes(this.router.config);\n      let { routes } = transformedRoutes;\n      const { wrappers } = transformedRoutes;\n\n      routes = organizeRoutes(routes, wrappers);\n      const flattedRoutes = flatRoutes(clone(routes));\n      state = setValue(state, 'ConfigState', {\n        ...(state.ConfigState && { ...state.ConfigState }),\n        ...this.options,\n        routes,\n        flattedRoutes,\n      });\n\n      this.initialized = true;\n    }\n\n    return next(state, event);\n  }\n}\n\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\n  // TODO: remove in v1\n  const oldAbpRoutes: ABP.FullRoute[] = routes\n    .filter(route => {\n      return snq(() => route.data.routes.routes.find(r => r.path === route.path), false);\n    })\n    .reduce((acc, val) => [...acc, ...val.data.routes.routes], []);\n  // tslint:disable-next-line: deprecation\n  const abpRoutes = [...getAbpRoutes(), ...oldAbpRoutes];\n\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\n  const transformed = [] as ABP.FullRoute[];\n  routes\n    .filter(route => route.component || route.loadChildren)\n    .forEach(route => {\n      const abpPackage = abpRoutes.find(abp => abp.path.toLowerCase() === route.path.toLowerCase() && !abp.wrapper);\n\n      const { length } = transformed;\n\n      if (abpPackage) {\n        transformed.push(abpPackage);\n      }\n\n      if (transformed.length === length && (route.data || {}).routes) {\n        transformed.push({\n          ...route.data.routes,\n          path: route.path,\n          name: snq(() => route.data.routes.name, route.path),\n          children: route.data.routes.children || [],\n        } as ABP.FullRoute);\n      }\n    });\n\n  return { routes: setUrls(transformed), wrappers };\n}\n\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\n  if (parentUrl) {\n    // this if block using for only recursive call\n\n    return routes.map(route => ({\n      ...route,\n      url: `${parentUrl}/${route.path}`,\n      ...(route.children &&\n        route.children.length && {\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\n        }),\n    }));\n  }\n\n  return routes.map(route => ({\n    ...route,\n    url: `/${route.path}`,\n    ...(route.children &&\n      route.children.length && {\n        children: setUrls(route.children, `/${route.path}`),\n      }),\n  }));\n}\n\nfunction flatRoutes(routes: ABP.FullRoute[]): ABP.FullRoute[] {\n  const flat = (r: ABP.FullRoute[]) => {\n    return r.reduce((acc, val) => {\n      let value: ABP.FullRoute[] = [val];\n      if (val.children) {\n        value = [val, ...flat(val.children)];\n      }\n\n      return [...acc, ...value];\n    }, []);\n  };\n\n  return flat(routes);\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigStateService {\n  constructor(private store: Store) {}\n\n  getAll() {\n    return this.store.selectSnapshot(ConfigState.getAll);\n  }\n\n  getApplicationInfo() {\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\n  }\n\n  getOne(...args: Parameters<typeof ConfigState.getOne>) {\n    return this.store.selectSnapshot(ConfigState.getOne(...args));\n  }\n\n  getDeep(...args: Parameters<typeof ConfigState.getDeep>) {\n    return this.store.selectSnapshot(ConfigState.getDeep(...args));\n  }\n\n  getRoute(...args: Parameters<typeof ConfigState.getRoute>) {\n    return this.store.selectSnapshot(ConfigState.getRoute(...args));\n  }\n\n  getApiUrl(...args: Parameters<typeof ConfigState.getApiUrl>) {\n    return this.store.selectSnapshot(ConfigState.getApiUrl(...args));\n  }\n\n  getSetting(...args: Parameters<typeof ConfigState.getSetting>) {\n    return this.store.selectSnapshot(ConfigState.getSetting(...args));\n  }\n\n  getSettings(...args: Parameters<typeof ConfigState.getSettings>) {\n    return this.store.selectSnapshot(ConfigState.getSettings(...args));\n  }\n\n  getGrantedPolicy(...args: Parameters<typeof ConfigState.getGrantedPolicy>) {\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(...args));\n  }\n\n  getLocalization(...args: Parameters<typeof ConfigState.getLocalization>) {\n    return this.store.selectSnapshot(ConfigState.getLocalization(...args));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, throwError } from 'rxjs';\nimport { uuid } from '../utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyLoadService {\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\n\n  load(\n    urlOrUrls: string | string[],\n    type: 'script' | 'style',\n    content: string = '',\n    targetQuery: string = 'body',\n    position: InsertPosition = 'afterend',\n  ): Observable<void> {\n    if (!urlOrUrls && !content) {\n      return throwError('Should pass url or content');\n    } else if (!urlOrUrls && content) {\n      urlOrUrls = [null];\n    }\n\n    if (!Array.isArray(urlOrUrls)) {\n      urlOrUrls = [urlOrUrls];\n    }\n\n    return new Observable(subscriber => {\n      (urlOrUrls as string[]).forEach((url, index) => {\n        const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\n\n        if (this.loadedLibraries[key]) {\n          subscriber.next();\n          subscriber.complete();\n          return;\n        }\n\n        this.loadedLibraries[key] = new ReplaySubject();\n\n        let library;\n        if (type === 'script') {\n          library = document.createElement('script');\n          library.type = 'text/javascript';\n          if (url) {\n            (library as HTMLScriptElement).src = url;\n          }\n\n          (library as HTMLScriptElement).text = content;\n        } else if (url) {\n          library = document.createElement('link');\n          library.type = 'text/css';\n          (library as HTMLLinkElement).rel = 'stylesheet';\n\n          if (url) {\n            (library as HTMLLinkElement).href = url;\n          }\n        } else {\n          library = document.createElement('style');\n          (library as HTMLStyleElement).textContent = content;\n        }\n\n        library.onload = () => {\n          this.loadedLibraries[key].next();\n          this.loadedLibraries[key].complete();\n\n          if (index === urlOrUrls.length - 1) {\n            subscriber.next();\n            subscriber.complete();\n          }\n        };\n\n        document.querySelector(targetQuery).insertAdjacentElement(position, library);\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ProfileState } from '../states';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileStateService {\n  constructor(private store: Store) {}\n\n  getProfile() {\n    return this.store.selectSnapshot(ProfileState.getProfile);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { SessionState } from '../states';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionStateService {\n  constructor(private store: Store) {}\n\n  getLanguage() {\n    return this.store.selectSnapshot(SessionState.getLanguage);\n  }\n\n  getTenant() {\n    return this.store.selectSnapshot(SessionState.getTenant);\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Config } from '../models';\n\nexport function environmentFactory(environment: Config.Environment) {\n  return {\n    ...environment,\n  };\n}\n\nexport function configFactory(config: Config.Requirements) {\n  return {\n    ...config,\n  };\n}\n\nexport const ENVIRONMENT = new InjectionToken('ENVIRONMENT');\n\nexport const CONFIG = new InjectionToken('CONFIG');\n","import { Directive, Output, Renderer2, ElementRef, OnInit, EventEmitter, Input } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { takeUntilDestroy } from '@ngx-validate/core';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[input.debounce]'\n})\nexport class InputEventDebounceDirective implements OnInit {\n  @Input() debounce = 300;\n\n  @Output('input.debounce') readonly debounceEvent = new EventEmitter<Event>();\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  ngOnInit(): void {\n    fromEvent(this.el.nativeElement, 'input')\n      .pipe(\n        debounceTime(this.debounce),\n        takeUntilDestroy(this)\n      )\n      .subscribe((event: Event) => {\n        this.debounceEvent.emit(event);\n      });\n  }\n}\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, Renderer2 } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { takeUntilDestroy } from '@ngx-validate/core';\n\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: '[click.stop]'\n})\nexport class ClickEventStopPropagationDirective implements OnInit {\n  @Output('click.stop') readonly stopPropEvent = new EventEmitter<MouseEvent>();\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  ngOnInit(): void {\n    fromEvent(this.el.nativeElement, 'click')\n      .pipe(takeUntilDestroy(this))\n      .subscribe((event: MouseEvent) => {\n        event.stopPropagation();\n        this.stopPropEvent.emit(event);\n      });\n  }\n}\n","import { LOCALE_ID, Provider } from '@angular/core';\nimport localesMapping from '../constants/different-locales';\nimport { LocalizationService } from '../services/localization.service';\n\nexport class LocaleId extends String {\n  constructor(private localizationService: LocalizationService) {\n    super();\n  }\n\n  toString(): string {\n    const { currentLang } = this.localizationService;\n    return localesMapping[currentLang] || currentLang;\n  }\n\n  valueOf(): string {\n    return this.toString();\n  }\n}\n\nexport const LocaleProvider: Provider = {\n  provide: LOCALE_ID,\n  useClass: LocaleId,\n  deps: [LocalizationService],\n};\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\nimport { RouterOutletComponent } from './components/router-outlet.component';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\nimport { EllipsisDirective } from './directives/ellipsis.directive';\nimport { FormSubmitDirective } from './directives/form-submit.directive';\nimport { PermissionDirective } from './directives/permission.directive';\nimport { ClickEventStopPropagationDirective } from './directives/stop-propagation.directive';\nimport { VisibilityDirective } from './directives/visibility.directive';\nimport { ApiInterceptor } from './interceptors/api.interceptor';\nimport { ABP } from './models/common';\nimport { LocalizationPipe } from './pipes/localization.pipe';\nimport { SortPipe } from './pipes/sort.pipe';\nimport { LocaleProvider } from './providers/locale.provider';\nimport { ConfigState } from './states/config.state';\nimport { ProfileState } from './states/profile.state';\nimport { SessionState } from './states/session.state';\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config/config.plugin';\nimport { ForDirective } from './directives/for.directive';\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\nimport { TableSortDirective } from './directives/table-sort.directive';\n\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([ProfileState, SessionState, ConfigState]),\n    NgxsStoragePluginModule.forRoot({ key: 'SessionState' }),\n    NgxsRouterPluginModule.forRoot(),\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n  declarations: [\n    RouterOutletComponent,\n    DynamicLayoutComponent,\n    AutofocusDirective,\n    EllipsisDirective,\n    ForDirective,\n    FormSubmitDirective,\n    TableSortDirective,\n    LocalizationPipe,\n    SortPipe,\n    PermissionDirective,\n    VisibilityDirective,\n    InputEventDebounceDirective,\n    ClickEventStopPropagationDirective,\n    AbstractNgModelComponent,\n  ],\n  exports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    RouterOutletComponent,\n    DynamicLayoutComponent,\n    AutofocusDirective,\n    EllipsisDirective,\n    ForDirective,\n    FormSubmitDirective,\n    LocalizationPipe,\n    SortPipe,\n    TableSortDirective,\n    PermissionDirective,\n    VisibilityDirective,\n    InputEventDebounceDirective,\n    LocalizationPipe,\n    ClickEventStopPropagationDirective,\n    AbstractNgModelComponent,\n  ],\n  providers: [LocalizationPipe],\n  entryComponents: [RouterOutletComponent, DynamicLayoutComponent],\n})\nexport class CoreModule {\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        LocaleProvider,\n        {\n          provide: NGXS_PLUGINS,\n          useClass: ConfigPlugin,\n          multi: true,\n        },\n        {\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\n          useValue: options,\n        },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: ApiInterceptor,\n          multi: true,\n        },\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          deps: [Injector],\n          useFactory: getInitialData,\n        },\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          deps: [Injector],\n          useFactory: localeInitializer,\n        },\n      ],\n    };\n  }\n}\n","export function noop() {\n  // tslint:disable-next-line: only-arrow-functions\n  const fn = function() {};\n  return fn;\n}\n"]}