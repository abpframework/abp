{"version":3,"file":"abp-ng.core.js","sources":["ng://@abp/ng.core/lib/abstracts/ng-model.component.ts","ng://@abp/ng.core/lib/actions/config.actions.ts","ng://@abp/ng.core/lib/actions/loader.actions.ts","ng://@abp/ng.core/lib/actions/profile.actions.ts","ng://@abp/ng.core/lib/actions/rest.actions.ts","ng://@abp/ng.core/lib/actions/session.actions.ts","ng://@abp/ng.core/lib/services/profile.service.ts","ng://@abp/ng.core/lib/states/profile.state.ts","ng://@abp/ng.core/lib/constants/different-locales.ts","ng://@abp/ng.core/lib/utils/initial-utils.ts","ng://@abp/ng.core/lib/services/localization.service.ts","ng://@abp/ng.core/lib/states/session.state.ts","ng://@abp/ng.core/lib/services/rest.service.ts","ng://@abp/ng.core/lib/services/application-configuration.service.ts","ng://@abp/ng.core/lib/utils/route-utils.ts","ng://@abp/ng.core/lib/states/config.state.ts","ng://@abp/ng.core/lib/utils/rxjs-utils.ts","ng://@abp/ng.core/lib/components/dynamic-layout.component.ts","ng://@abp/ng.core/lib/components/router-outlet.component.ts","ng://@abp/ng.core/lib/directives/autofocus.directive.ts","ng://@abp/ng.core/lib/directives/ellipsis.directive.ts","ng://@abp/ng.core/lib/directives/for.directive.ts","ng://@abp/ng.core/lib/utils/common-utils.ts","ng://@abp/ng.core/lib/utils/generator-utils.ts","ng://@abp/ng.core/lib/directives/form-submit.directive.ts","ng://@abp/ng.core/lib/directives/permission.directive.ts","ng://@abp/ng.core/lib/directives/visibility.directive.ts","ng://@abp/ng.core/lib/enums/common.ts","ng://@abp/ng.core/lib/guards/auth.guard.ts","ng://@abp/ng.core/lib/guards/permission.guard.ts","ng://@abp/ng.core/lib/interceptors/api.interceptor.ts","ng://@abp/ng.core/lib/models/application-configuration.ts","ng://@abp/ng.core/lib/models/common.ts","ng://@abp/ng.core/lib/models/config.ts","ng://@abp/ng.core/lib/models/rest.ts","ng://@abp/ng.core/lib/models/session.ts","ng://@abp/ng.core/lib/models/profile.ts","ng://@abp/ng.core/lib/plugins/config/config.plugin.ts","ng://@abp/ng.core/lib/services/config.service.ts","ng://@abp/ng.core/lib/services/lazy-load.service.ts","ng://@abp/ng.core/lib/tokens/common.token.ts","ng://@abp/ng.core/lib/directives/debounce.directive.ts","ng://@abp/ng.core/lib/directives/stop-propagation.directive.ts","ng://@abp/ng.core/lib/pipes/localization.pipe.ts","ng://@abp/ng.core/lib/pipes/sort.pipe.ts","ng://@abp/ng.core/lib/providers/locale.provider.ts","ng://@abp/ng.core/lib/core.module.ts"],"sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\nimport { ChangeDetectorRef, Component, Injector, Input, Type } from '@angular/core';\n\n@Component({ template: '' })\nexport class AbstractNgModelComponent<T = any> implements ControlValueAccessor {\n  @Input()\n  disabled: boolean;\n\n  @Input()\n  set value(value: T) {\n    this._value = value;\n    this.notifyValueChange();\n  }\n\n  get value(): T {\n    return this._value;\n  }\n\n  onChange: (value: T) => {};\n  onTouched: () => {};\n\n  protected _value: T;\n  protected cdRef: ChangeDetectorRef;\n\n  constructor(public injector: Injector) {\n    this.cdRef = injector.get<ChangeDetectorRef>(ChangeDetectorRef as Type<ChangeDetectorRef>);\n  }\n\n  notifyValueChange(): void {\n    if (this.onChange) {\n      this.onChange(this.value);\n    }\n  }\n\n  writeValue(value: T): void {\n    this._value = value;\n    setTimeout(() => this.cdRef.detectChanges(), 0);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import { ABP } from '../models';\n\nexport class PatchRouteByName {\n  static readonly type = '[Config] Patch Route By Name';\n  constructor(public name: string, public newValue: Partial<ABP.Route>) {}\n}\n\nexport class GetAppConfiguration {\n  static readonly type = '[Config] Get App Configuration';\n}\n","import { HttpRequest } from '@angular/common/http';\n\nexport class StartLoader {\n  static readonly type = '[Loader] Start';\n  constructor(public payload: HttpRequest<any>) {}\n}\n\nexport class StopLoader {\n  static readonly type = '[Loader] Stop';\n  constructor(public payload: HttpRequest<any>) {}\n}\n","import { Profile } from '../models';\n\nexport class GetProfile {\n  static readonly type = '[Profile] Get';\n}\n\nexport class UpdateProfile {\n  static readonly type = '[Profile] Update';\n  constructor(public payload: Profile.Response) {}\n}\n\nexport class ChangePassword {\n  static readonly type = '[Profile] Change Password';\n  constructor(public payload: Profile.ChangePasswordRequest) {}\n}\n","import { HttpErrorResponse } from '@angular/common/http';\n\nexport class RestOccurError {\n  static readonly type = '[Rest] Error';\n  constructor(public payload: HttpErrorResponse | any) {}\n}\n","import { ABP } from '../models';\n\nexport class SetLanguage {\n  static readonly type = '[Session] Set Language';\n  constructor(public payload: string) {}\n}\nexport class SetTenant {\n  static readonly type = '[Session] Set Tenant';\n  constructor(public payload: ABP.BasicItem) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService } from './rest.service';\nimport { Profile, Rest } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  constructor(private rest: RestService) {}\n\n  get(): Observable<Profile.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/identity/my-profile',\n    };\n\n    return this.rest.request<null, Profile.Response>(request);\n  }\n\n  update(body: Profile.Response): Observable<Profile.Response> {\n    const request: Rest.Request<Profile.Response> = {\n      method: 'PUT',\n      url: '/api/identity/my-profile',\n      body,\n    };\n\n    return this.rest.request<Profile.Response, Profile.Response>(request);\n  }\n\n  changePassword(body: Profile.ChangePasswordRequest, skipHandleError: boolean = false): Observable<null> {\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\n      method: 'POST',\n      url: '/api/identity/my-profile/change-password',\n      body,\n    };\n\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, { skipHandleError });\n  }\n}\n","import { State, Action, StateContext, Selector } from '@ngxs/store';\nimport { GetProfile, ChangePassword, UpdateProfile } from '../actions/profile.actions';\nimport { Profile } from '../models/profile';\nimport { ProfileService } from '../services/profile.service';\nimport { tap } from 'rxjs/operators';\n\n@State<Profile.State>({\n  name: 'ProfileState',\n  defaults: {} as Profile.State,\n})\nexport class ProfileState {\n  @Selector()\n  static getProfile({ profile }: Profile.State): Profile.Response {\n    return profile;\n  }\n\n  constructor(private profileService: ProfileService) {}\n\n  @Action(GetProfile)\n  profileGet({ patchState }: StateContext<Profile.State>) {\n    return this.profileService.get().pipe(\n      tap(profile =>\n        patchState({\n          profile,\n        }),\n      ),\n    );\n  }\n\n  @Action(UpdateProfile)\n  profileUpdate({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\n    return this.profileService.update(payload).pipe(\n      tap(profile =>\n        patchState({\n          profile,\n        }),\n      ),\n    );\n  }\n\n  @Action(ChangePassword)\n  changePassword(_, { payload }: ChangePassword) {\n    return this.profileService.changePassword(payload, true);\n  }\n}\n","// Different locales from .NET\n// Key is .NET locale, value is Angular locale\n\nexport default {\n  'ar-sa': 'ar-SA',\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\n  'de-de': 'de',\n  'es-ES': 'es',\n  'en-US': 'en',\n  'fil-Latn': 'en',\n  'ku-Arab': 'en',\n  'ky-Cyrl': 'en',\n  'mi-Latn': 'en',\n  'prs-Arab': 'en',\n  'qut-Latn': 'en',\n  nso: 'en',\n  quz: 'en',\n  'fr-FR': 'fr',\n  'gd-Latn': 'gd',\n  'ha-Latn': 'ha',\n  'ig-Latn': 'ig',\n  'it-it': 'it',\n  'mn-Cyrl': 'mn',\n  'pt-BR': 'pt',\n  'sd-Arab': 'pa-Arab',\n  'sr-Cyrl-RS': 'sr-Cyrl',\n  'sr-Latn-RS': 'sr-Latn',\n  'tg-Cyrl': 'tg',\n  'tk-Latn': 'tk',\n  'tt-Cyrl': 'tt',\n  'ug-Arab': 'ug',\n  'yo-Latn': 'yo',\n};\n","import { registerLocaleData } from '@angular/common';\nimport { Injector } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { GetAppConfiguration } from '../actions/config.actions';\nimport differentLocales from '../constants/different-locales';\nimport { SessionState } from '../states/session.state';\n\nexport function getInitialData(injector: Injector) {\n  const fn = function() {\n    const store: Store = injector.get(Store);\n\n    return store.dispatch(new GetAppConfiguration()).toPromise();\n  };\n\n  return fn;\n}\n\nexport function localeInitializer(injector: Injector) {\n  const fn = function() {\n    const store: Store = injector.get(Store);\n\n    const lang = store.selectSnapshot(SessionState.getLanguage) || 'en';\n\n    return new Promise((resolve, reject) => {\n      registerLocale(lang).then(() => resolve(), reject);\n    });\n  };\n\n  return fn;\n}\n\nexport function registerLocale(locale: string) {\n  return import(\n    /* webpackInclude: /(af|am|ar-SA|as|az-Latn|be|bg|bn-BD|bn-IN|bs|ca|ca-ES-VALENCIA|cs|cy|da|de|de|el|en-GB|en|es|en|es-US|es-MX|et|eu|fa|fi|en|fr|fr|fr-CA|ga|gd|gl|gu|ha|he|hi|hr|hu|hy|id|ig|is|it|it|ja|ka|kk|km|kn|ko|kok|en|en|lb|lt|lv|en|mk|ml|mn|mr|ms|mt|nb|ne|nl|nl-BE|nn|en|or|pa|pa-Arab|pl|en|pt|pt-PT|en|en|ro|ru|rw|pa-Arab|si|sk|sl|sq|sr-Cyrl-BA|sr-Cyrl|sr-Latn|sv|sw|ta|te|tg|th|ti|tk|tn|tr|tt|ug|uk|ur|uz-Latn|vi|wo|xh|yo|zh-Hans|zh-Hant|zu)\\.js$/ */\n    `@angular/common/locales/${differentLocales[locale] || locale}.js`\n  ).then(module => {\n    registerLocaleData(module.default);\n  });\n}\n","import { Injectable, Optional, SkipSelf, NgZone } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Actions, Store } from '@ngxs/store';\nimport { noop, Observable } from 'rxjs';\nimport { ConfigState } from '../states/config.state';\nimport { SessionState } from '../states/session.state';\nimport { registerLocale } from '../utils/initial-utils';\n\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\n\n@Injectable({ providedIn: 'root' })\nexport class LocalizationService {\n  get currentLang(): string {\n    return this.store.selectSnapshot(SessionState.getLanguage);\n  }\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private ngZone: NgZone,\n    private actions: Actions,\n    @Optional()\n    @SkipSelf()\n    otherInstance: LocalizationService,\n  ) {\n    if (otherInstance) throw new Error('LocaleService should have only one instance.');\n  }\n\n  private setRouteReuse(reuse: ShouldReuseRoute) {\n    this.router.routeReuseStrategy.shouldReuseRoute = reuse;\n  }\n\n  registerLocale(locale: string) {\n    const { shouldReuseRoute } = this.router.routeReuseStrategy;\n\n    this.setRouteReuse(() => false);\n    this.router.navigated = false;\n\n    return registerLocale(locale).then(() => {\n      this.ngZone.run(async () => {\n        await this.router.navigateByUrl(this.router.url).catch(noop);\n        this.setRouteReuse(shouldReuseRoute);\n      });\n    });\n  }\n\n  get(keys: string, ...interpolateParams: string[]): Observable<string> {\n    return this.store.select(ConfigState.getCopy(keys, ...interpolateParams));\n  }\n\n  instant(keys: string, ...interpolateParams: string[]): string {\n    return this.store.selectSnapshot(ConfigState.getCopy(keys, ...interpolateParams));\n  }\n}\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { SetLanguage, SetTenant } from '../actions/session.actions';\nimport { ABP, Session } from '../models';\nimport { GetAppConfiguration } from '../actions/config.actions';\nimport { LocalizationService } from '../services/localization.service';\nimport { from, combineLatest } from 'rxjs';\n\n@State<Session.State>({\n  name: 'SessionState',\n  defaults: {} as Session.State,\n})\nexport class SessionState {\n  @Selector()\n  static getLanguage({ language }: Session.State): string {\n    return language;\n  }\n\n  @Selector()\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\n    return tenant;\n  }\n\n  constructor(private localizationService: LocalizationService) {}\n\n  @Action(SetLanguage)\n  setLanguage({ patchState, dispatch }: StateContext<Session.State>, { payload }: SetLanguage) {\n    patchState({\n      language: payload,\n    });\n\n    return combineLatest([dispatch(new GetAppConfiguration()), from(this.localizationService.registerLocale(payload))]);\n  }\n\n  @Action(SetTenant)\n  setTenantId({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\n    patchState({\n      tenant: payload,\n    });\n  }\n}\n","import { HttpClient, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { NEVER, Observable, throwError } from 'rxjs';\nimport { catchError, take } from 'rxjs/operators';\nimport { Rest } from '../models/rest';\nimport { ConfigState } from '../states';\nimport { RestOccurError } from '../actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RestService {\n  constructor(private http: HttpClient, private store: Store) {}\n\n  handleError(err: any): Observable<any> {\n    this.store.dispatch(new RestOccurError(err));\n    console.error(err);\n    return throwError(err);\n  }\n\n  request<T, R>(request: HttpRequest<T> | Rest.Request<T>, config: Rest.Config = {}, api?: string): Observable<R> {\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\n    const url = api || this.store.selectSnapshot(ConfigState.getApiUrl()) + request.url;\n    const { method, ...options } = request;\n    return this.http.request<T>(method, url, { observe, ...options } as any).pipe(\n      observe === Rest.Observe.Body ? take(1) : null,\n      catchError(err => {\n        if (skipHandleError) {\n          return throwError(err);\n        }\n\n        return this.handleError(err);\n      }),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApplicationConfiguration, Rest } from '../models';\nimport { RestService } from './rest.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApplicationConfigurationService {\n  constructor(private rest: RestService) {}\n\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/abp/application-configuration',\n    };\n\n    return this.rest.request<null, ApplicationConfiguration.Response>(request);\n  }\n}\n","import { ABP } from '../models';\n\nexport function organizeRoutes(\n  routes: ABP.FullRoute[],\n  wrappers: ABP.FullRoute[] = [],\n  parentNameArr = [] as ABP.FullRoute[],\n  parentName: string = null,\n): ABP.FullRoute[] {\n  const filter = route => {\n    if (route.children && route.children.length) {\n      route.children = organizeRoutes(route.children, wrappers, parentNameArr, route.name);\n    }\n\n    if (route.parentName && route.parentName !== parentName) {\n      parentNameArr.push(route);\n      return false;\n    }\n\n    return true;\n  };\n\n  if (parentName) {\n    // recursive block\n    return routes.filter(filter);\n  }\n\n  const filteredRoutes = routes.filter(filter);\n\n  if (parentNameArr.length) {\n    return sortRoutes(setChildRoute([...filteredRoutes, ...wrappers], parentNameArr));\n  }\n\n  return filteredRoutes;\n}\n\nexport function setChildRoute(routes: ABP.FullRoute[], parentNameArr: ABP.FullRoute[]): ABP.FullRoute[] {\n  return routes.map(route => {\n    if (route.children && route.children.length) {\n      route.children = setChildRoute(route.children, parentNameArr);\n    }\n\n    const foundedChildren = parentNameArr.filter(parent => parent.parentName === route.name);\n    if (foundedChildren && foundedChildren.length) {\n      route.children = [...(route.children || []), ...foundedChildren];\n    }\n\n    return route;\n  });\n}\n\nexport function sortRoutes(routes: ABP.FullRoute[] = []): ABP.FullRoute[] {\n  if (!routes.length) return [];\n  return routes\n    .sort((a, b) => a.order - b.order)\n    .map(route => {\n      if (route.children && route.children.length) {\n        route.children = sortRoutes(route.children);\n      }\n\n      return route;\n    });\n}\n","import { State, Selector, createSelector, Action, StateContext, Store } from '@ngxs/store';\nimport { Config, ABP } from '../models';\nimport { GetAppConfiguration, PatchRouteByName } from '../actions/config.actions';\nimport { ApplicationConfigurationService } from '../services/application-configuration.service';\nimport { tap, switchMap } from 'rxjs/operators';\nimport snq from 'snq';\nimport { SetLanguage } from '../actions';\nimport { SessionState } from './session.state';\nimport { of } from 'rxjs';\nimport { setChildRoute, sortRoutes, organizeRoutes } from '../utils/route-utils';\n\n@State<Config.State>({\n  name: 'ConfigState',\n  defaults: {} as Config.State,\n})\nexport class ConfigState {\n  @Selector()\n  static getAll(state: Config.State) {\n    return state;\n  }\n\n  @Selector()\n  static getApplicationInfo(state: Config.State): Config.Application {\n    return state.environment.application || ({} as Config.Application);\n  }\n\n  static getOne(key: string) {\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        return state[key];\n      },\n    );\n\n    return selector;\n  }\n\n  static getDeep(keys: string[] | string) {\n    if (typeof keys === 'string') {\n      keys = keys.split('.');\n    }\n\n    if (!Array.isArray(keys)) {\n      throw new Error('The argument must be a dot string or an string array.');\n    }\n\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        return (keys as string[]).reduce((acc, val) => {\n          if (acc) {\n            return acc[val];\n          }\n\n          return undefined;\n        }, state);\n      },\n    );\n\n    return selector;\n  }\n\n  static getRoute(path?: string, name?: string) {\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        const { flattedRoutes } = state;\n        return (flattedRoutes as ABP.FullRoute[]).find(route => {\n          if (path && route.path === path) {\n            return route;\n          } else if (name && route.name === name) {\n            return route;\n          }\n        });\n      },\n    );\n\n    return selector;\n  }\n\n  static getApiUrl(key?: string) {\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State): string {\n        return state.environment.apis[key || 'default'].url;\n      },\n    );\n\n    return selector;\n  }\n\n  static getSetting(key: string) {\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        return snq(() => state.setting.values[key]);\n      },\n    );\n\n    return selector;\n  }\n\n  static getGrantedPolicy(key: string) {\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State): boolean {\n        if (!key) return true;\n        return snq(() => state.auth.grantedPolicies[key], false);\n      },\n    );\n\n    return selector;\n  }\n\n  static getCopy(key: string, ...interpolateParams: string[]) {\n    if (!key) key = '';\n\n    const keys = key.split('::') as string[];\n    const selector = createSelector(\n      [ConfigState],\n      function(state: Config.State) {\n        if (!state.localization) return key;\n\n        const { defaultResourceName } = state.environment.localization;\n        if (keys[0] === '') {\n          if (!defaultResourceName) {\n            throw new Error(\n              `Please check your environment. May you forget set defaultResourceName? \n              Here is the example:\n               { production: false,\n                 localization: {\n                   defaultResourceName: 'MyProjectName'\n                  }\n               }`,\n            );\n          }\n\n          keys[0] = snq(() => defaultResourceName);\n        }\n\n        let copy = (keys as any).reduce((acc, val) => {\n          if (acc) {\n            return acc[val];\n          }\n\n          return undefined;\n        }, state.localization.values);\n\n        interpolateParams = interpolateParams.filter(params => params != null);\n        if (copy && interpolateParams && interpolateParams.length) {\n          interpolateParams.forEach(param => {\n            copy = copy.replace(/[\\'\\\"]?\\{[\\d]+\\}[\\'\\\"]?/, param);\n          });\n        }\n\n        return copy || key;\n      },\n    );\n\n    return selector;\n  }\n\n  constructor(private appConfigurationService: ApplicationConfigurationService, private store: Store) {}\n\n  @Action(GetAppConfiguration)\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\n    return this.appConfigurationService.getConfiguration().pipe(\n      tap(configuration =>\n        patchState({\n          ...configuration,\n        }),\n      ),\n      switchMap(configuration => {\n        let defaultLang: string = configuration.setting.values['Abp.Localization.DefaultLanguage'];\n\n        if (defaultLang.includes(';')) {\n          defaultLang = defaultLang.split(';')[0];\n        }\n\n        return this.store.selectSnapshot(SessionState.getLanguage) ? of(null) : dispatch(new SetLanguage(defaultLang));\n      }),\n    );\n  }\n\n  @Action(PatchRouteByName)\n  patchRoute({ patchState, getState }: StateContext<Config.State>, { name, newValue }: PatchRouteByName) {\n    let routes: ABP.FullRoute[] = getState().routes;\n\n    const index = routes.findIndex(route => route.name === name);\n\n    routes = patchRouteDeep(routes, name, newValue);\n\n    return patchState({\n      routes,\n    });\n  }\n}\n\nfunction patchRouteDeep(\n  routes: ABP.FullRoute[],\n  name: string,\n  newValue: Partial<ABP.FullRoute>,\n  parentUrl: string = null,\n): ABP.FullRoute[] {\n  routes = routes.map(route => {\n    if (route.name === name) {\n      if (newValue.path) {\n        newValue.url = `${parentUrl}/${newValue.path}`;\n      }\n\n      if (newValue.children && newValue.children.length) {\n        newValue.children = newValue.children.map(child => ({\n          ...child,\n          url: `${parentUrl}/${route.path}/${child.path}`,\n        }));\n      }\n\n      return { ...route, ...newValue };\n    } else if (route.children && route.children.length) {\n      route.children = patchRouteDeep(route.children, name, newValue, (parentUrl || '/') + route.path);\n    }\n\n    return route;\n  });\n\n  if (parentUrl) {\n    // recursive block\n    return routes;\n  }\n\n  return organizeRoutes(routes);\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\n  source: Observable<T>,\n) => {\n  const originalDestroy = componentInstance[destroyMethodName];\n  if (isFunction(originalDestroy) === false) {\n    throw new Error(\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`,\n    );\n  }\n  if (!componentInstance['__takeUntilDestroy']) {\n    componentInstance['__takeUntilDestroy'] = new Subject();\n\n    componentInstance[destroyMethodName] = function() {\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\n      componentInstance['__takeUntilDestroy'].next(true);\n      componentInstance['__takeUntilDestroy'].complete();\n    };\n  }\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\n};\n","import { Component, Input, OnDestroy, Type } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router, UrlSegment } from '@angular/router';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport snq from 'snq';\nimport { eLayoutType } from '../enums/common';\nimport { Config } from '../models/config';\nimport { ABP } from '../models/common';\nimport { ConfigState } from '../states/config.state';\nimport { takeUntilDestroy } from '../utils/rxjs-utils';\n\n@Component({\n  selector: 'abp-dynamic-layout',\n  template: `\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\n\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\n    <ng-template #componentOutlet><ng-container *ngComponentOutlet=\"layout\"></ng-container></ng-template>\n  `,\n})\nexport class DynamicLayoutComponent implements OnDestroy {\n  @Select(ConfigState.getOne('requirements'))\n  requirements$: Observable<Config.Requirements>;\n\n  layout: Type<any>;\n\n  constructor(private router: Router, private route: ActivatedRoute, private store: Store) {\n    const {\n      requirements: { layouts },\n      routes,\n    } = this.store.selectSnapshot(ConfigState.getAll);\n\n    if ((this.route.snapshot.data || {}).layout) {\n      this.layout = layouts\n        .filter(l => !!l)\n        .find((l: any) => snq(() => l.type.toLowerCase().indexOf(this.route.snapshot.data.layout), -1) > -1);\n    }\n\n    this.router.events.pipe(takeUntilDestroy(this)).subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const { segments } = this.router.parseUrl(event.url).root.children.primary;\n\n        const layout = (this.route.snapshot.data || {}).layout || findLayout(segments, routes);\n\n        this.layout = layouts\n          .filter(l => !!l)\n          .find((l: any) => snq(() => l.type.toLowerCase().indexOf(layout), -1) > -1);\n      }\n    });\n  }\n\n  ngOnDestroy() {}\n}\n\nfunction findLayout(segments: UrlSegment[], routes: ABP.FullRoute[]): eLayoutType {\n  let layout = eLayoutType.empty;\n\n  const route = routes\n    .reduce((acc, val) => (val.wrapper ? [...acc, ...val.children] : [...acc, val]), [])\n    .find(r => r.path === segments[0].path);\n\n  if (route) {\n    if (route.layout) {\n      layout = route.layout;\n    }\n\n    if (route.children && route.children.length && segments.length > 1) {\n      const child = route.children.find(c => c.path === segments[1].path);\n\n      if (child && child.layout) {\n        layout = child.layout;\n      }\n    }\n  }\n\n  return layout;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'abp-router-outlet',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class RouterOutletComponent {}\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\n\n@Directive({\n  selector: '[autofocus]',\n})\nexport class AutofocusDirective implements AfterViewInit {\n  @Input('autofocus')\n  delay: number = 0;\n\n  constructor(private elRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\n  }\n}\n","import { AfterContentInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  selector: '[abpEllipsis]',\n})\nexport class EllipsisDirective implements AfterContentInit {\n  @Input('abpEllipsis')\n  width: string;\n\n  @HostBinding('title')\n  @Input()\n  title: string;\n\n  @Input('abpEllipsisEnabled')\n  enabled = true;\n\n  @HostBinding('class.abp-ellipsis-inline')\n  get inlineClass() {\n    return this.enabled && this.width;\n  }\n\n  @HostBinding('class.abp-ellipsis')\n  get class() {\n    return this.enabled && !this.width;\n  }\n\n  @HostBinding('style.max-width')\n  get maxWidth() {\n    return this.enabled && this.width ? this.width || '170px' : undefined;\n  }\n\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\n\n  ngAfterContentInit() {\n    setTimeout(() => {\n      const title = this.title;\n      this.title = title || (this.elRef.nativeElement as HTMLElement).innerText;\n\n      if (this.title !== title) {\n        this.cdRef.detectChanges();\n      }\n    }, 0);\n  }\n}\n","import {\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  IterableChangeRecord,\n  IterableChanges,\n  IterableDiffer,\n  IterableDiffers,\n  OnChanges,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n} from '@angular/core';\nimport compare from 'just-compare';\nimport clone from 'just-clone';\n\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\n\nclass AbpForContext {\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\n}\n\nclass RecordView {\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\n}\n\n@Directive({\n  selector: '[abpFor]',\n})\nexport class ForDirective implements OnChanges {\n  @Input('abpForOf')\n  items: any[];\n\n  @Input('abpForOrderBy')\n  orderBy: string;\n\n  @Input('abpForOrderDir')\n  orderDir: 'ASC' | 'DESC';\n\n  @Input('abpForFilterBy')\n  filterBy: string;\n\n  @Input('abpForFilterVal')\n  filterVal: any;\n\n  @Input('abpForTrackBy')\n  trackBy;\n\n  @Input('abpForCompareBy')\n  compareBy: CompareFn;\n\n  @Input('abpForEmptyRef')\n  emptyRef: TemplateRef<any>;\n\n  private differ: IterableDiffer<any>;\n\n  private isShowEmptyRef: boolean;\n\n  get compareFn(): CompareFn {\n    return this.compareBy || compare;\n  }\n\n  get trackByFn(): TrackByFunction<any> {\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\n  }\n\n  constructor(\n    private tempRef: TemplateRef<AbpForContext>,\n    private vcRef: ViewContainerRef,\n    private differs: IterableDiffers,\n  ) {}\n\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\n    const rw: RecordView[] = [];\n\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\n      if (record.previousIndex == null) {\n        const view = this.vcRef.createEmbeddedView(\n          this.tempRef,\n          new AbpForContext(null, -1, -1, this.items),\n          currentIndex,\n        );\n\n        rw.push(new RecordView(record, view));\n      } else if (currentIndex == null) {\n        this.vcRef.remove(previousIndex);\n      } else {\n        const view = this.vcRef.get(previousIndex);\n        this.vcRef.move(view, currentIndex);\n\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\n      }\n    });\n\n    for (let i = 0, l = rw.length; i < l; i++) {\n      rw[i].view.context.$implicit = rw[i].record.item;\n    }\n  }\n\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\n      viewRef.context.index = i;\n      viewRef.context.count = l;\n      viewRef.context.list = this.items;\n    }\n\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\n      viewRef.context.$implicit = record.item;\n    });\n  }\n\n  private projectItems(items: any[]): void {\n    if (!items.length && this.emptyRef) {\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\n      this.isShowEmptyRef = true;\n\n      return;\n    }\n\n    if (this.emptyRef && this.isShowEmptyRef) {\n      this.vcRef.clear();\n      this.isShowEmptyRef = false;\n    }\n\n    if (!this.differ && items) {\n      this.differ = this.differs.find(items).create(this.trackByFn);\n    }\n\n    if (this.differ) {\n      const changes = this.differ.diff(items);\n\n      if (changes) {\n        this.iterateOverAppliedOperations(changes);\n        this.iterateOverAttachedViews(changes);\n      }\n    }\n  }\n\n  private sortItems(items: any[]) {\n    if (this.orderBy) {\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\n    } else {\n      items.sort();\n    }\n  }\n\n  ngOnChanges() {\n    let items = clone(this.items) as any[];\n    if (!Array.isArray(items)) return;\n\n    const compareFn = this.compareFn;\n\n    if (typeof this.filterBy !== 'undefined') {\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\n    }\n\n    switch (this.orderDir) {\n      case 'ASC':\n        this.sortItems(items);\n        this.projectItems(items);\n        break;\n\n      case 'DESC':\n        this.sortItems(items);\n        items.reverse();\n        this.projectItems(items);\n        break;\n\n      default:\n        this.projectItems(items);\n    }\n  }\n}\n","export function noop() {\n  const fn = function() {};\n  return fn;\n}\n","export function uuid(a?: any): string {\n  return a\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Self,\n} from '@angular/core';\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { takeUntilDestroy } from '../utils';\n\ntype Controls = { [key: string]: FormControl } | FormGroup[];\n\n@Directive({\n  selector: 'form[ngSubmit][formGroup]',\n})\nexport class FormSubmitDirective implements OnInit, OnDestroy {\n  @Input()\n  notValidateOnSubmit: string | boolean;\n\n  @Output()\n  ngSubmit = new EventEmitter();\n\n  executedNgSubmit: boolean = false;\n\n  constructor(\n    @Self() private formGroupDirective: FormGroupDirective,\n    private host: ElementRef<HTMLFormElement>,\n    private cdRef: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    this.formGroupDirective.ngSubmit.pipe(takeUntilDestroy(this)).subscribe(() => {\n      this.markAsDirty();\n      this.executedNgSubmit = true;\n    });\n\n    fromEvent(this.host.nativeElement as HTMLElement, 'keyup')\n      .pipe(\n        debounceTime(200),\n        filter((key: KeyboardEvent) => key && key.key === 'Enter'),\n        takeUntilDestroy(this),\n      )\n      .subscribe(() => {\n        if (!this.executedNgSubmit) {\n          this.host.nativeElement.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));\n        }\n\n        this.executedNgSubmit = false;\n      });\n\n    fromEvent(this.host.nativeElement, 'submit')\n      .pipe(\n        takeUntilDestroy(this),\n        filter(() => !this.notValidateOnSubmit && typeof this.notValidateOnSubmit !== 'string'),\n      )\n      .subscribe(() => {\n        if (!this.executedNgSubmit) {\n          this.markAsDirty();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {}\n\n  markAsDirty() {\n    const { form } = this.formGroupDirective;\n\n    setDirty(form.controls as { [key: string]: FormControl });\n    form.markAsDirty();\n\n    this.cdRef.detectChanges();\n  }\n}\n\nfunction setDirty(controls: Controls) {\n  if (Array.isArray(controls)) {\n    controls.forEach(group => {\n      setDirty(group.controls as { [key: string]: FormControl });\n    });\n    return;\n  }\n\n  Object.keys(controls).forEach(key => {\n    controls[key].markAsDirty();\n    controls[key].updateValueAndValidity();\n  });\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\nimport { takeUntilDestroy } from '../utils';\n\n@Directive({\n  selector: '[abpPermission]',\n})\nexport class PermissionDirective implements OnInit, OnDestroy {\n  @Input('abpPermission') condition: string;\n\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2, private store: Store) {}\n\n  ngOnInit() {\n    if (this.condition) {\n      this.store\n        .select(ConfigState.getGrantedPolicy(this.condition))\n        .pipe(takeUntilDestroy(this))\n        .subscribe(isGranted => {\n          if (!isGranted) {\n            this.renderer.removeChild(\n              (this.elRef.nativeElement as HTMLElement).parentElement,\n              this.elRef.nativeElement,\n            );\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {}\n}\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport snq from 'snq';\n\n@Directive({\n  selector: '[abpVisibility]',\n})\nexport class VisibilityDirective implements AfterViewInit {\n  @Input('abpVisibility')\n  focusedElement: HTMLElement;\n\n  @Input()\n  mutationObserverEnabled: boolean = true;\n\n  completed$ = new Subject<boolean>();\n\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    let observer: MutationObserver;\n    if (this.mutationObserverEnabled) {\n      observer = new MutationObserver(mutations => {\n        mutations.forEach(mutation => {\n          if (!mutation.target) return;\n\n          const htmlNodes = snq(\n            () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\n            [],\n          );\n\n          if (!htmlNodes.length) {\n            this.removeFromDOM();\n            this.disconnect();\n          } else {\n            setTimeout(() => {\n              this.disconnect();\n            }, 0);\n          }\n        });\n      });\n\n      observer.observe(this.focusedElement, {\n        childList: true,\n      });\n    } else {\n      setTimeout(() => {\n        const htmlNodes = snq(\n          () => Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\n          [],\n        );\n\n        if (!htmlNodes.length) this.removeFromDOM();\n      }, 0);\n    }\n\n    this.completed$.subscribe(() => observer.disconnect());\n  }\n\n  disconnect() {\n    this.completed$.next();\n    this.completed$.complete();\n  }\n\n  removeFromDOM() {\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\n  }\n}\n","export const enum eLayoutType {\n  account = 'account',\n  application = 'application',\n  empty = 'empty',\n  setting = 'setting',\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { Observable } from 'rxjs';\nimport { Navigate } from '@ngxs/router-plugin';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private oauthService: OAuthService, private store: Store, private router: Router) {}\n\n  canActivate(_: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean | UrlTree {\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\n    if (hasValidAccessToken) {\n      return hasValidAccessToken;\n    }\n\n    return this.router.createUrlTree(['/account/login'], { state: { redirectUrl: state.url } });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { ConfigState } from '../states';\nimport { tap } from 'rxjs/operators';\nimport { RestOccurError } from '../actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionGuard implements CanActivate {\n  constructor(private store: Store) {}\n\n  canActivate({ data }: ActivatedRouteSnapshot): Observable<boolean> {\n    const resource = data.requiredPolicy as string;\n    return this.store.select(ConfigState.getGrantedPolicy(resource)).pipe(\n      tap(access => {\n        if (!access) {\n          this.store.dispatch(new RestOccurError({ status: 403 }));\n        }\n      }),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { Store } from '@ngxs/store';\nimport { SessionState } from '../states';\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n  constructor(private oAuthService: OAuthService, private store: Store) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    this.store.dispatch(new StartLoader(request));\n\n    const headers = {} as any;\n\n    const token = this.oAuthService.getAccessToken();\n    if (!request.headers.has('Authorization') && token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\n    if (!request.headers.has('Accept-Language') && lang) {\n      headers['Accept-Language'] = lang;\n    }\n\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\n    if (!request.headers.has('__tenant') && tenant) {\n      headers['__tenant'] = tenant.id;\n    }\n\n    return next\n      .handle(\n        request.clone({\n          setHeaders: headers,\n        }),\n      )\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\n  }\n}\n","export namespace ApplicationConfiguration {\n  export interface Response {\n    localization: Localization;\n    auth: Auth;\n    setting: Setting;\n    currentUser: CurrentUser;\n    features: Features;\n  }\n\n  export interface Localization {\n    values: LocalizationValue;\n    languages: Language[];\n  }\n\n  export interface LocalizationValue {\n    [key: string]: { [key: string]: string };\n  }\n\n  export interface Language {\n    cultureName: string;\n    uiCultureName: string;\n    displayName: string;\n    flagIcon: string;\n  }\n\n  export interface Auth {\n    policies: Policy;\n    grantedPolicies: Policy;\n  }\n\n  export interface Policy {\n    [key: string]: boolean;\n  }\n\n  export interface Setting {\n    values: { [key: string]: 'Abp.Localization.DefaultLanguage' };\n  }\n\n  export interface CurrentUser {\n    isAuthenticated: boolean;\n    id: string;\n    tenantId: string;\n    userName: string;\n  }\n\n  export interface Features {\n    values: Setting;\n  }\n}\n","import { Config } from './config';\nimport { eLayoutType } from '../enums/common';\n\nexport namespace ABP {\n  export interface Root {\n    environment: Partial<Config.Environment>;\n    requirements: Config.Requirements;\n  }\n\n  export type PagedResponse<T> = {\n    totalCount: number;\n  } & PagedItemsResponse<T>;\n\n  export interface PagedItemsResponse<T> {\n    items: T[];\n  }\n\n  export interface PageQueryParams {\n    filter?: string;\n    sorting?: string;\n    skipCount?: number;\n    maxResultCount?: number;\n  }\n\n  export interface Route {\n    children?: Route[];\n    invisible?: boolean;\n    layout?: eLayoutType;\n    name: string;\n    order?: number;\n    parentName?: string;\n    path: string;\n    requiredPolicy?: string;\n    iconClass?: string;\n  }\n\n  export interface FullRoute extends Route {\n    url?: string;\n    wrapper?: boolean;\n  }\n\n  export interface BasicItem {\n    id: string;\n    name: string;\n  }\n}\n","import { AuthConfig } from 'angular-oauth2-oidc';\nimport { Type } from '@angular/core';\nimport { ApplicationConfiguration } from './application-configuration';\nimport { ABP } from './common';\n\nexport namespace Config {\n  export type State = ApplicationConfiguration.Response &\n    ABP.Root & { environment: Environment } & {\n      routes: ABP.FullRoute[];\n      flattedRoutes: ABP.FullRoute[];\n    };\n\n  export interface Environment {\n    application: Application;\n    production: boolean;\n    oAuthConfig: AuthConfig;\n    apis: Apis;\n    localization: { defaultResourceName: string };\n  }\n\n  export interface Application {\n    name: string;\n    logoUrl?: string;\n  }\n\n  export interface Apis {\n    [key: string]: { [key: string]: string };\n  }\n\n  export interface Requirements {\n    layouts: Type<any>[];\n  }\n}\n","import { HttpHeaders, HttpParams } from '@angular/common/http';\n\nexport namespace Rest {\n  export interface Config {\n    skipHandleError?: boolean;\n    observe?: Observe;\n  }\n\n  export const enum Observe {\n    Body = 'body',\n    Events = 'events',\n    Response = 'response',\n  }\n\n  export const enum ResponseType {\n    ArrayBuffer = 'arraybuffer',\n    Blob = 'blob',\n    JSON = 'json',\n    Text = 'text',\n  }\n\n  export interface Request<T> {\n    body?: T;\n    headers?:\n      | HttpHeaders\n      | {\n          [header: string]: string | string[];\n        };\n    method: string;\n    params?:\n      | HttpParams\n      | {\n          [param: string]: any;\n        };\n    reportProgress?: boolean;\n    responseType?: ResponseType;\n    url: string;\n    withCredentials?: boolean;\n  }\n}\n","import { ABP } from '../models';\n\nexport namespace Session {\n  export interface State {\n    language: string;\n    tenant: ABP.BasicItem;\n  }\n}\n","export namespace Profile {\n  export interface State {\n    profile: Response;\n  }\n\n  export interface Response {\n    userName: string;\n    email: string;\n    name: string;\n    surname: string;\n    phoneNumber: string;\n  }\n\n  export interface ChangePasswordRequest {\n    currentPassword: string;\n    newPassword: string;\n  }\n}\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Router, Routes } from '@angular/router';\nimport { actionMatcher, InitState, NgxsNextPluginFn, NgxsPlugin, setValue, UpdateState } from '@ngxs/store';\nimport snq from 'snq';\nimport { ABP } from '../../models';\nimport { organizeRoutes } from '../../utils/route-utils';\nimport clone from 'just-clone';\n\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\n\n@Injectable()\nexport class ConfigPlugin implements NgxsPlugin {\n  private initialized: boolean = false;\n\n  constructor(@Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root, private router: Router) {}\n\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\n    const matches = actionMatcher(event);\n    const isInitAction = matches(InitState) || matches(UpdateState);\n\n    // const layouts = snq(() => this.options.requirements.layouts.filter(layout => layout instanceof Type), []);\n    if (isInitAction && !this.initialized) {\n      let { routes, wrappers } = transformRoutes(this.router.config);\n      routes = organizeRoutes(routes, wrappers);\n      const flattedRoutes = flatRoutes(clone(routes));\n      state = setValue(state, 'ConfigState', {\n        ...(state.ConfigState && { ...state.ConfigState }),\n        ...this.options,\n        routes,\n        flattedRoutes,\n      });\n\n      this.initialized = true;\n    }\n\n    return next(state, event);\n  }\n}\n\nfunction transformRoutes(routes: Routes = [], wrappers: ABP.FullRoute[] = []): any {\n  const abpRoutes: ABP.FullRoute[] = routes\n    .filter(route => {\n      return snq(() => route.data.routes.routes.find(r => r.path === route.path), false);\n    })\n    .reduce((acc, val) => [...acc, ...val.data.routes.routes], []);\n\n  wrappers = abpRoutes.filter(ar => ar.wrapper);\n  const transformed = [] as ABP.FullRoute[];\n  routes\n    .filter(route => (route.data || {}).routes && (route.component || route.loadChildren))\n    .forEach(route => {\n      const abpPackage = abpRoutes.find(\n        abp => abp.path.toLowerCase() === route.path.toLowerCase() && snq(() => route.data.routes.routes.length, false),\n      );\n      const { length } = transformed;\n\n      if (abpPackage) {\n        transformed.push(abpPackage);\n      }\n\n      if (transformed.length === length) {\n        transformed.push({\n          ...route.data.routes,\n          path: route.path,\n          name: snq(() => route.data.routes.name, route.path),\n          children: route.data.routes.children || [],\n        } as ABP.FullRoute);\n      }\n    });\n\n  return { routes: setUrls(transformed), wrappers };\n}\n\nfunction setUrls(routes: ABP.FullRoute[], parentUrl?: string): ABP.FullRoute[] {\n  if (parentUrl) {\n    // this if block using for only recursive call\n\n    return routes.map(route => ({\n      ...route,\n      url: `${parentUrl}/${route.path}`,\n      ...(route.children &&\n        route.children.length && {\n          children: setUrls(route.children, `${parentUrl}/${route.path}`),\n        }),\n    }));\n  }\n\n  return routes.map(route => ({\n    ...route,\n    url: `/${route.path}`,\n    ...(route.children &&\n      route.children.length && {\n        children: setUrls(route.children, `/${route.path}`),\n      }),\n  }));\n}\n\nfunction flatRoutes(routes: ABP.FullRoute[]): ABP.FullRoute[] {\n  const flat = (r: ABP.FullRoute[]) => {\n    return r.reduce((acc, val) => {\n      let value: ABP.FullRoute[] = [val];\n      if (val.children) {\n        value = [val, ...flat(val.children)];\n      }\n\n      return [...acc, ...value];\n    }, []);\n  };\n\n  return flat(routes);\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfigService {\n  constructor(private store: Store) {}\n\n  getAll() {\n    return this.store.selectSnapshot(ConfigState.getAll);\n  }\n\n  getOne(key: string) {\n    return this.store.selectSnapshot(ConfigState.getOne(key));\n  }\n\n  getDeep(keys: string[] | string) {\n    return this.store.selectSnapshot(ConfigState.getDeep(keys));\n  }\n\n  getSetting(key: string) {\n    return this.store.selectSnapshot(ConfigState.getSetting(key));\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { uuid } from '../utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyLoadService {\n  loadedLibraries: { [url: string]: ReplaySubject<void> } = {};\n\n  load(\n    url: string,\n    type: 'script' | 'style',\n    content: string = '',\n    targetQuery: string = 'body',\n    position: InsertPosition = 'afterend',\n  ): Observable<void> {\n    if (!url && !content) return;\n    const key = url ? url.slice(url.lastIndexOf('/') + 1) : uuid();\n\n    if (this.loadedLibraries[key]) {\n      return this.loadedLibraries[key].asObservable();\n    }\n\n    this.loadedLibraries[key] = new ReplaySubject();\n\n    let library;\n    if (type === 'script') {\n      library = document.createElement('script');\n      library.type = 'text/javascript';\n      if (url) {\n        (library as HTMLScriptElement).src = url;\n      }\n\n      (library as HTMLScriptElement).text = content;\n    } else if (url) {\n      library = document.createElement('link');\n      library.type = 'text/css';\n      (library as HTMLLinkElement).rel = 'stylesheet';\n\n      if (url) {\n        (library as HTMLLinkElement).href = url;\n      }\n    } else {\n      library = document.createElement('style');\n      (library as HTMLStyleElement).textContent = content;\n    }\n\n    library.onload = () => {\n      this.loadedLibraries[key].next();\n      this.loadedLibraries[key].complete();\n    };\n\n    document.querySelector(targetQuery).insertAdjacentElement(position, library);\n\n    return this.loadedLibraries[key].asObservable();\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Config } from '../models';\n\nexport function environmentFactory(environment: Config.Environment) {\n  return {\n    ...environment,\n  };\n}\n\nexport function configFactory(config: Config.Requirements) {\n  return {\n    ...config,\n  };\n}\n\nexport const ENVIRONMENT = new InjectionToken('ENVIRONMENT');\n\nexport const CONFIG = new InjectionToken('CONFIG');\n","import { Directive, Output, Renderer2, ElementRef, OnInit, EventEmitter, Input } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { takeUntilDestroy } from '@ngx-validate/core';\n\n@Directive({\n  selector: '[input.debounce]',\n})\nexport class InputEventDebounceDirective implements OnInit {\n  @Input() debounce: number = 300;\n\n  @Output('input.debounce') debounceEvent = new EventEmitter<Event>();\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  ngOnInit(): void {\n    fromEvent(this.el.nativeElement, 'input')\n      .pipe(\n        debounceTime(this.debounce),\n        takeUntilDestroy(this),\n      )\n      .subscribe((event: Event) => {\n        this.debounceEvent.emit(event);\n      });\n  }\n}\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, Renderer2 } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { takeUntilDestroy } from '@ngx-validate/core';\n\n@Directive({\n  selector: '[click.stop]',\n})\nexport class ClickEventStopPropagationDirective implements OnInit {\n  @Output('click.stop') stopPropEvent = new EventEmitter<MouseEvent>();\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  ngOnInit(): void {\n    fromEvent(this.el.nativeElement, 'click')\n      .pipe(takeUntilDestroy(this))\n      .subscribe((event: MouseEvent) => {\n        event.stopPropagation();\n        this.stopPropEvent.emit(event);\n      });\n  }\n}\n","import { Pipe, PipeTransform, OnDestroy } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { ConfigState } from '../states';\nimport { takeUntilDestroy } from '../utils';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Pipe({\n  name: 'abpLocalization',\n  pure: false, // required to update the value\n})\nexport class LocalizationPipe implements PipeTransform, OnDestroy {\n  initialValue: string = '';\n\n  value: string;\n\n  destroy$ = new Subject();\n\n  constructor(private store: Store) {}\n\n  transform(value: string = '', ...interpolateParams: string[]): string {\n    if (this.initialValue !== value) {\n      this.initialValue = value;\n      this.destroy$.next();\n\n      this.store\n        .select(\n          ConfigState.getCopy(\n            value,\n            ...interpolateParams.reduce((acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]), []),\n          ),\n        )\n        .pipe(\n          takeUntil(this.destroy$),\n          takeUntilDestroy(this),\n          distinctUntilChanged(),\n        )\n        .subscribe(copy => (this.value = copy));\n    }\n\n    return this.value;\n  }\n\n  ngOnDestroy() {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'abpSort',\n    pure: false\n})\nexport class SortPipe implements PipeTransform {\n    transform(value: any[], sortOrder: string): any {\n        sortOrder = sortOrder.toLowerCase();\n        if(sortOrder === \"desc\") return value.reverse();\n        else return value;\n    }\n}","import { LOCALE_ID, Provider } from '@angular/core';\nimport localesMapping from '../constants/different-locales';\nimport { LocalizationService } from '../services/localization.service';\n\nexport class LocaleId extends String {\n  constructor(private localizationService: LocalizationService) {\n    super();\n  }\n\n  toString(): string {\n    const { currentLang } = this.localizationService;\n    return localesMapping[currentLang] || currentLang;\n  }\n\n  valueOf(): string {\n    return this.toString();\n  }\n}\n\nexport const LocaleProvider: Provider = {\n  provide: LOCALE_ID,\n  useClass: LocaleId,\n  deps: [LocalizationService],\n};\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\nimport { RouterOutletComponent } from './components/router-outlet.component';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\nimport { EllipsisDirective } from './directives/ellipsis.directive';\nimport { FormSubmitDirective } from './directives/form-submit.directive';\nimport { PermissionDirective } from './directives/permission.directive';\nimport { ClickEventStopPropagationDirective } from './directives/stop-propagation.directive';\nimport { VisibilityDirective } from './directives/visibility.directive';\nimport { ApiInterceptor } from './interceptors/api.interceptor';\nimport { ABP } from './models/common';\nimport { LocalizationPipe } from './pipes/localization.pipe';\nimport { SortPipe } from './pipes/sort.pipe';\nimport { LocaleProvider } from './providers/locale.provider';\nimport { ConfigState } from './states/config.state';\nimport { ProfileState } from './states/profile.state';\nimport { SessionState } from './states/session.state';\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config/config.plugin';\nimport { ForDirective } from './directives/for.directive';\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\n\n@NgModule({\n  imports: [\n    NgxsModule.forFeature([ProfileState, SessionState, ConfigState]),\n    NgxsStoragePluginModule.forRoot({ key: 'SessionState' }),\n    NgxsRouterPluginModule.forRoot(),\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n  ],\n  declarations: [\n    RouterOutletComponent,\n    DynamicLayoutComponent,\n    AutofocusDirective,\n    EllipsisDirective,\n    ForDirective,\n    FormSubmitDirective,\n    LocalizationPipe,\n    SortPipe,\n    PermissionDirective,\n    VisibilityDirective,\n    InputEventDebounceDirective,\n    ClickEventStopPropagationDirective,\n    AbstractNgModelComponent,\n  ],\n  exports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    RouterOutletComponent,\n    DynamicLayoutComponent,\n    AutofocusDirective,\n    EllipsisDirective,\n    ForDirective,\n    FormSubmitDirective,\n    LocalizationPipe,\n    SortPipe,\n    PermissionDirective,\n    VisibilityDirective,\n    InputEventDebounceDirective,\n    LocalizationPipe,\n    ClickEventStopPropagationDirective,\n    AbstractNgModelComponent,\n  ],\n  providers: [LocalizationPipe],\n  entryComponents: [RouterOutletComponent, DynamicLayoutComponent],\n})\nexport class CoreModule {\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        LocaleProvider,\n        {\n          provide: NGXS_PLUGINS,\n          useClass: ConfigPlugin,\n          multi: true,\n        },\n        {\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\n          useValue: options,\n        },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: ApiInterceptor,\n          multi: true,\n        },\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          deps: [Injector],\n          useFactory: getInitialData,\n        },\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          deps: [Injector],\n          useFactory: localeInitializer,\n        },\n      ],\n    };\n  }\n}\n"],"names":["tslib_1.__decorate","differentLocales","noop","takeUntilDestroy","tslib_1.__extends"],"mappings":"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"}