{"version":3,"file":"abp-ng.account.config.js","sources":["ng://@abp/ng.account.config/lib/services/account-config.service.ts","ng://@abp/ng.account.config/lib/account-config.module.ts"],"sourcesContent":["import { eLayoutType, RestService, addAbpRoutes } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountConfigService {\n  constructor(private router: Router, private restService: RestService) {\n    addAbpRoutes({\n      name: 'AbpAccount::Menu:Account',\n      path: 'account',\n      invisible: true,\n      layout: eLayoutType.application,\n      children: [\n        { path: 'login', name: 'AbpAccount::Login', order: 1 },\n        { path: 'register', name: 'AbpAccount::Register', order: 2 },\n        { path: 'manage-profile', name: 'AbpAccount::ManageYourProfile', order: 3 },\n      ],\n    });\n  }\n}\n","import { CoreModule, noop } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { APP_INITIALIZER, InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { AccountConfigService } from './services/account-config.service';\n\nexport interface AccountConfigOptions {\n  redirectUrl?: string;\n}\n\nexport function accountOptionsFactory(options: AccountConfigOptions) {\n  return {\n    redirectUrl: '/',\n    ...options,\n  };\n}\n\nexport const ACCOUNT_OPTIONS = new InjectionToken('ACCOUNT_OPTIONS');\n\n@NgModule({\n  imports: [CoreModule, ThemeSharedModule],\n  providers: [{ provide: APP_INITIALIZER, multi: true, deps: [AccountConfigService], useFactory: noop }],\n})\nexport class AccountConfigModule {\n  static forRoot(options = {} as AccountConfigOptions): ModuleWithProviders {\n    return {\n      ngModule: AccountConfigModule,\n      providers: [\n        { provide: ACCOUNT_OPTIONS, useValue: options },\n        {\n          provide: 'ACCOUNT_OPTIONS',\n          useFactory: accountOptionsFactory,\n          deps: [ACCOUNT_OPTIONS],\n        },\n      ],\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;IAQE,8BAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAClE,YAAY,CAAC;YACX,IAAI,EAAE,0BAA0B;YAChC,IAAI,EAAE,SAAS;YACf,SAAS,EAAE,IAAI;YACf,MAAM;YACN,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,mBAAmB,EAAE,KAAK,EAAE,CAAC,EAAE;gBACtD,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,sBAAsB,EAAE,KAAK,EAAE,CAAC,EAAE;gBAC5D,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,+BAA+B,EAAE,KAAK,EAAE,CAAC,EAAE;aAC5E;SACF,CAAC,CAAC;KACJ;;gBAhBF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBAJQ,MAAM;gBAFO,WAAW;;;+BAAjC;CAIA,IAiBC;;;;;;IAba,sCAAsB;;;;;IAAE,2CAAgC;;;;;;;;;;ACHtE,mCAEC;;;IADC,2CAAqB;;;;;;AAGvB,SAAgB,qBAAqB,CAAC,OAA6B;IACjE,kBACE,WAAW,EAAE,GAAG,IACb,OAAO,EACV;CACH;;AAED,IAAa,eAAe,GAAG,IAAI,cAAc,CAAC,iBAAiB,CAAC;SAI6B,IAAI;AAFrG;IAAA;KAkBC;;;;;IAbQ,2BAAO;;;;IAAd,UAAe,OAAoC;QAApC,wBAAA,EAAA,6BAAU,EAAE,EAAwB;QACjD,OAAO;YACL,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,OAAO,EAAE;gBAC/C;oBACE,OAAO,EAAE,iBAAiB;oBAC1B,UAAU,EAAE,qBAAqB;oBACjC,IAAI,EAAE,CAAC,eAAe,CAAC;iBACxB;aACF;SACF,CAAC;KACH;;gBAjBF,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,UAAU,EAAE,iBAAiB,CAAC;oBACxC,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,oBAAoB,CAAC,EAAE,UAAU,IAAM,EAAE,CAAC;iBACvG;;IAeD,0BAAC;CAlBD;;;;;;;;;;;;;;"}