{
  "culture": "zh-Hans",
  "texts": {
    "GetStarted": "开始",
    "Create": "创建",
    "NewProject": "新工程",
    "DirectDownload": "直接下载",
    "ProjectName": "项目名称",
    "ProjectType": "项目类型",
    "DatabaseProvider": "数据库提供者",
    "NTier": "N层",
    "IncludeUserInterface": "包含用户界面",
    "CreateNow": "现在创建",
    "TheStartupProject": "启动项目",
    "Tutorial": "教程",
    "UsingCLI": "使用CLI",
    "SeeDetails": "见详细",
    "AbpShortDescription": "ABP是用于创建现代Web应用程序的完整架构和强大的基础设施! 遵循最佳实践和约定，为你提供SOLID开发经验.",
    "SourceCodeUpper": "源代码",
    "LatestReleaseLogs": "最新发布日志",
    "Infrastructure": "基础设施",
    "Architecture": "架构",
    "Modular": "模块化",
    "DontRepeatYourself": "不要重复工作",
    "DeveloperFocused": "专注于开发者",
    "FullStackApplicationInfrastructure": "全栈应用程序基础设施",
    "DomainDrivenDesign": "领域驱动设计",
    "DomainDrivenDesignExplanation": "根据DDD模式和准则进行设计和开发. 为你的应用程序提供分层模型.",
    "Authorization": "授权",
    "AuthorizationExplanation": "具有用户,角色和细粒度权限系统的高级授权. 建立在Microsoft Identity库上.",
    "MultiTenancy": "多租户",
    "MultiTenancyExplanationShort": "SaaS应用程序变得简单! 从数据库到UI的多租户集成.",
    "CrossCuttingConcerns": "横切关注点",
    "CrossCuttingConcernsExplanationShort": "完整的基础架构,用于授权,验证,异常处理,缓存,审计日志记录,事务管理等.",
    "BuiltInBundlingMinification": "内置Bundling & Minification",
    "BuiltInBundlingMinificationExplanation": "无需使用外部工具进行Bundling & Minification. ABP提供了一种更简单,动态,功能强大,模块化和内置的方式!",
    "VirtualFileSystem": "虚拟文件系统",
    "VirtualFileSystemExplanation": "将视图,脚本,样式,图像...嵌入到包/库中,并在不同的应用程序中重复使用.",
    "Theming": "主题",
    "ThemingExplanationShort": "使用和定制基于bootstrap的标准UI主题,或创建自己的主题.",
    "BootstrapTagHelpersDynamicForms": "Bootstrap Tag Helpers和动态表单",
    "BootstrapTagHelpersDynamicFormsExplanation": "与其手动重复编写Bootstrap的组件,不如使用ABP的Tag Helpers利用智能感知来简化它. 动态表单可以从C#类创建完整的表单.",
    "HTTPAPIsDynamicProxies": "HTTP APIs和动态代理",
    "HTTPAPIsDynamicProxiesExplanation": "自动将应用程序服务公开为REST样式的HTTP API,并与动态JavaScript和C#代理一起使用.",
    "CompleteArchitectureInfo": "现代架构用来创建可维护的软件解决方案.",
    "DomainDrivenDesignBasedLayeringModelExplanation": "帮助你实现基于DDD的分层架构并构建可维护的代码库.",
    "DomainDrivenDesignBasedLayeringModelExplanationCont": "提供启动模板,抽象,基类,服务,文档和指南以帮助你开发基于DDD模式和准则的应用程序.",
    "MicroserviceCompatibleModelExplanation": "核心框架和预构建模块在设计时就考虑了微服务架构.",
    "MicroserviceCompatibleModelExplanationCont": "提供基础结构,集成,示例和文档,以更轻松地实现微服务解决方案,而如果你要使用整体应用程序,也不会带来额外的复杂性.",
    "ModularInfo": "ABP提供了完整的模块化系统,使你能够开发可重复使用的应用程序模块.",
    "PreBuiltModulesThemes": "预构建模块和主题",
    "PreBuiltModulesThemesExplanation": "开源和商业模块和主题已准备好在你的业务应用程序中使用.",
    "NuGetNPMPackages": "NuGet和NPM包",
    "NuGetNPMPackagesExplanation": "作为NuGet和NPM包分发.易于安装和升级.",
    "ExtensibleReplaceable": "可扩展/可替换",
    "ExtensibleReplaceableExplanation": "所有服务和模块在设计时都考虑了可扩展性.您可以替换服务,页面,样式,组件...",
    "CrossCuttingConcernsExplanation2": "保持代码整洁,专注于你自己的业务代码.",
    "CrossCuttingConcernsExplanation3": "不要浪费时间一次又一次地实现通用的应用程序要求.",
    "AuthenticationAuthorization": "认证与授权",
    "ExceptionHandling": "异常处理",
    "Validation": "验证",
    "DatabaseConnection": "数据库连接",
    "TransactionManagement": "事务管理",
    "AuditLogging": "审计日志",
    "Caching": "缓存",
    "Multitenancy": "多租户",
    "DataFiltering": "数据过滤",
    "ConventionOverConfiguration": "约定优于配置",
    "ConventionOverConfigurationExplanation": "默认情况下,ABP使用最小或零配置实现通用的应用程序约定.",
    "ConventionOverConfigurationExplanationList1": "自动注册已知服务以进行依赖项注入.",
    "ConventionOverConfigurationExplanationList2": "通过命名约定将应用程序服务公开为HTTP API.",
    "ConventionOverConfigurationExplanationList3": "为C#和JavaScript创建动态HTTP客户端代理.",
    "ConventionOverConfigurationExplanationList4": "为您的实体提供默认仓储库.",
    "ConventionOverConfigurationExplanationList5": "根据Web请求或应用程序服务方法管理工作单元.",
    "ConventionOverConfigurationExplanationList6": "为实体发布创建,更新和删除事件.",
    "BaseClasses": "基类",
    "BaseClassesExplanation": "通用应用程序模式的预构建基类.",
    "DeveloperFocusedExplanation": "ABP是为了开发者",
    "DeveloperFocusedExplanationCont": "它旨在简化你的日常软件开发,同时又不限制你在需要时进行底层工作。",
    "SeeAllFeatures": "查看所有功能",
    "CLI_CommandLineInterface": "CLI (命令行界面)",
    "CLI_CommandLineInterfaceExplanation": "CLI会自动创建新项目并将模块添加到你的应用程序.",
    "StartupTemplates": "启动模板",
    "StartupTemplatesExplanation": "各种启动模板为你提供了完整配置的解决方案,以快速启动你的开发.",
    "BasedOnFamiliarTools": "基于熟悉的工具",
    "BasedOnFamiliarToolsExplanation": "建立在你已经知道的流行工具之上并与之集成.学习曲线低,适应性强,舒适的开发.",
    "ORMIndependent": "ORM独立",
    "ORMIndependentExplanation": "核心框架独立于ORM/数据库,并且可以与任何数据源一起使用.Entity Framework Core和MongoDB提供程序已经可用.",
    "Features": "功能",
    "ABPCLI": "ABP CLI",
    "Modularity": "模块化",
    "BootstrapTagHelpers": "Bootstrap 标签助手",
    "DynamicForms": "动态表单",
    "BundlingMinification": "Bundling & Minification",
    "BackgroundJobs": "后台作业",
    "BackgroundJobsExplanation": "定义简单的类以在队列中在后台执行作业. 使用内置的作业管理器或集成你自己的作业管理器. <a href=\"{0}\">Hangfire</a> & <a href=\"{1}\">RabbitMQ</a>集成已经可用.",
    "DDDInfrastructure": "DDD基础设施",
    "DomainDrivenDesignInfrastructure": "Domain Driven Design基础设施",
    "AutoRESTAPIs": "自动REST APIs",
    "DynamicClientProxies": "动态客户端代理",
    "DistributedEventBus": "分布式事件总线",
    "DistributedEventBusWithRabbitMQIntegration": "具有RabbitMQ集成的分布式事件总线",
    "TestInfrastructure": "测试基础设施",
    "AuditLoggingEntityHistories": "审计日志和实体历史",
    "ObjectToObjectMapping": "对象映射",
    "ObjectToObjectMappingExplanation": "<a href=\"{0}\">对象到对象映射</a> 抽象AutoMapper集成.",
    "EmailSMSAbstractions": "电子邮件和短信抽象",
    "EmailSMSAbstractionsWithTemplatingSupport": "具有模板支持的电子邮件和短信抽象",
    "Localization": "本土化",
    "SettingManagement": "设置管理",
    "ExtensionMethods": "扩展方法",
    "ExtensionMethodsHelpers": "扩展方法和助手",
    "AspectOrientedProgramming": "面向切面的编程",
    "DependencyInjection": "依赖注入",
    "DependencyInjectionByConventions": "依据约定的依赖注入",
    "ABPCLIExplanation": "ABP CLI(命令行界面)是用于对ABP解决方案执行常见操作的命令行工具.",
    "ModularityExplanation": "ABP提供了一个完整的基础设施来构建你自己的应用程序模块,这些模块可能具有实体,服务,数据库集成,API,UI组件等.",
    "MultiTenancyExplanation": "ABP框架不仅支持开发多租户应用程序,而且使你的代码几乎无需知道多租户.",
    "MultiTenancyExplanation2": "可以自动确定当前租户,将不同租户的数据相互隔离.",
    "MultiTenancyExplanation3": "支持单一数据库,或每个租户单独数据库或者混合方式.",
    "MultiTenancyExplanation4": "你专注于业务代码，并让该框架为你处理多租户.",
    "BootstrapTagHelpersExplanation": "与其手动编写重复细节的bootstrap组件,不如使用ABP的tag helper来简化它并利用智能感知.你当然也可以在需要时直接使用Bootstrap.",
    "DynamicFormsExplanation": "动态表单和tag helpers可从作为模型的C#类创建完整的表单.",
    "AuthenticationAuthorizationExplanation": "集成到ASP.NET Core Identity和IdentityServer4的丰富身份验证和授权选项.提供可扩展且详细的权限系统.",
    "CrossCuttingConcernsExplanation": "不要重复自己一次又一次地实现所有这些常见的东西.专注于你的业务代码,并让ABP按照约定自动执行.",
    "DatabaseConnectionTransactionManagement": "数据库连接和事务管理",
    "CorrelationIdTracking": "关联ID跟踪",
    "BundlingMinificationExplanation": "ABP提供了一个简单,动态,功能强大,模块化的内置Bundling & Minification系统.",
    "VirtualFileSystemnExplanation": "虚拟文件系统使管理文件系统(磁盘)上不存在的文件成为可能.它主要用于将(js,css,image,cshtml...)文件嵌入到程序集中,并在运行时像物理文件一样使用它们.",
    "ThemingExplanation": "主题系统允许通过基于最新的Bootstrap框架定义一组通用基础库和布局来独立开发应用程序和模块主题.",
    "DomainDrivenDesignInfrastructureExplanation": "基于域驱动设计模式和准则构建分层应用程序的完整基础设施;",
    "Specification": "规范",
    "Repository": "仓储",
    "DomainService": "领域服务",
    "ValueObject": "值对象",
    "ApplicationService": "应用程序服务",
    "DataTransferObject": "数据传输对象",
    "AggregateRootEntity": "聚合根, 实体",
    "AutoRESTAPIsExplanation": "ABP可以按照约定自动将你的应用程序服务配置为API控制器.",
    "DynamicClientProxiesExplanation": "从JavaScript和C#客户端轻松使用你的API.",
    "DistributedEventBusWithRabbitMQIntegrationExplanation": "使用带有RabbitMQ集成的内置分布式事件总线,可以轻松发布和使用分布式事件.",
    "TestInfrastructureExplanation": "框架已经考虑了单元和集成测试.为你提供基类,使其更容易.启动模板已预先配置用于测试.",
    "AuditLoggingEntityHistoriesExplanation": "针对关键业务应用程序的内置审计日志记录.请求,服务,方法级别的审计日志记录以及具有属性级别详细信息的实体历史记录.",
    "EmailSMSAbstractionsWithTemplatingSupportExplanation": "IEmailSender和ISmsSender抽象使你的应用程序逻辑与基础设施解耦.先进的电子邮件模板系统允许创建和本地化电子邮件模板,并在需要时轻松使用.",
    "LocalizationExplanation": "本地化系统允许在纯JSON文件中创建资源,并使用它们来本地化UI.它支持继承,扩展和JavaScript集成等高级方案,同时与AspNet Core的本地化系统完全兼容.",
    "SettingManagementExplanation": "定义应用程序的设置,并根据当前配置,租户和用户在运行时获取值.",
    "ExtensionMethodsHelpersExplanation": "即使是琐碎的代码部分,也不要重复.标准类型的扩展方法和助手使你的代码更加清晰和易于编写.",
    "AspectOrientedProgrammingExplanation": "提供合适的基础设施来创建动态代理并实现面向切面的编程.拦截任何类,并在每次方法执行之前和之后执行代码.",
    "DependencyInjectionByConventionsExplanation": "无需手动注册类以进行依赖项注入.按照约定自动注册常用服务类型.对于其他类型的服务,你可以使用接口和属性来使其变得更轻松和就位.",
    "DataFilteringExplanation": "定义和使用数据过滤器,这些过滤器在你从数据库中查询实体时会自动应用.当你实现简单的接口时,可立即使用软删除功能和多租户过滤器.",
    "PublishEvents": "发布事件",
    "HandleEvents": "处理事件",
    "AndMore": "更多...",
    "Code": "编码",
    "Result": "结果",
    "SeeTheDocumentForMoreInformation": "查看<a href=\"{1}\">{0} 文档</a>获得更多信息",
    "IndexPageHeroSection": "<span class=\"third-line shine2\"><strong>asp.net core的</strong></span><span class=\"first-line shine\"><strong>开源</strong></span><span class=\"second-line text-uppercase\">Web应用程序<br />框架 </span>",
    "UiFramework": "UI框架",
    "EmailAddress": "电子邮件地址",
    "Mobile": "移动",
    "ReactNative": "React Native",
    "Strong": "强大的",
    "Complete": "完整的",
    "BasedLayeringModel": "基于分层模型",
    "Microservice": "微服务",
    "Compatible": "兼容",
    "MeeTTheABPCommunityInfo": "我们的使命是创建一个环境使开发人员可以在文章,教程,案例研究等方面互相帮助并结识志趣相投的人.",
    "JoinTheABPCommunityInfo": "参与充满活力的社区并成为ABP框架的贡献者",
    "AllArticles": "所有的文章",
    "SubmitYourArticle": "提交你的文章",
    "DynamicClientProxyDocument": "参阅<a href=\"{0}\">JavaScript</a> & <a href=\"{1}\">C#</a>的动态客户端代理文档.",
    "EmailSMSAbstractionsDocument": "参阅<a href=\"{0}\">emailing</a> 和 <a href=\"{1}\">SMS sending</a> 文档获得更多信息.",
    "CreateProjectWizard": "此向导让你从启动模板创建一个新项目,该启动模板已正确配置为可以快速启动你的项目.",
    "TieredOption": "创建一个分层解决方案,其中Web和Http API层在物理上是分离的. 如果没有选中则创建一个不那么复杂且适合大多数场景的分层解决方案.",
    "SeparateIdentityServerOption": "将服务器端分离为两个应用程序:第一个应用程序用于身份服务器,第二个应用程序用于服务器端HTTP API.",
    "UseslatestPreVersion": "使用最新的预发布版本",
    "ReadTheDocumentation": "<span class=\"text-primary\">阅读</span><span class=\"text-success\">文档</span>",
    "Documentation": "文档",
    "GettingStartedTutorial": "入门教程",
    "ApplicationDevelopmentTutorial": "应用程序开发教程",
    "TheStartupTemplate": "启动模板",
    "InstallABPCLIInfo": "ABP CLI是使用ABP框架启动新解决方案的最快方式. 使用命令行窗口安装ABP CLI:",
    "DifferentLevelOfNamespaces": "你可以使用不同级别的名称空间. 例如 BookStore, Acme.BookStore 或 Acme.Retail.BookStore",
    "ABPCLIExamplesInfo": "<strong>new</strong>命令创建一个 <strong>分层的MVC应用程序</strong> 使用 <strong>Entity Framework Core</strong> 做为数据库提供程序. 它还有其他选项. 示例:",
    "SeeCliDocumentForMoreInformation": "参阅 <a href=\"{0}\">ABP CLI 文档</a> 获得更多选项或选择上方的 \"直接下载\" 标签.",
    "Optional": "可选的",
    "LocalFrameworkRef": "保留框架包的本地项目引用."
  }
}