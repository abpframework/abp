{
  "name": "Volo.Abp.Account.Application",
  "hash": "e8bdb7f8ca8a3b2a4ec489d44506ffe4",
  "contents": [
    {
      "namespace": "Volo.Abp.Account",
      "dependsOnModules": [
        {
          "declaringAssemblyName": "Volo.Abp.Account.Application.Contracts",
          "namespace": "Volo.Abp.Account",
          "name": "AbpAccountApplicationContractsModule"
        },
        {
          "declaringAssemblyName": "Volo.Abp.Identity.Application",
          "namespace": "Volo.Abp.Identity",
          "name": "AbpIdentityApplicationModule"
        },
        {
          "declaringAssemblyName": "Volo.Abp.UI.Navigation",
          "namespace": "Volo.Abp.UI.Navigation",
          "name": "AbpUiNavigationModule"
        },
        {
          "declaringAssemblyName": "Volo.Abp.Emailing",
          "namespace": "Volo.Abp.Emailing",
          "name": "AbpEmailingModule"
        }
      ],
      "contentType": "abpModule",
      "name": "AbpAccountApplicationModule",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.Account",
      "baseClass": {
        "name": "ApplicationService",
        "namespace": "Volo.Abp.Application.Services",
        "declaringAssemblyName": "Volo.Abp.Ddd.Application"
      },
      "implementingInterfaces": [
        {
          "name": "IApplicationService",
          "namespace": "Volo.Abp.Application.Services",
          "declaringAssemblyName": "Volo.Abp.Ddd.Application.Contracts"
        },
        {
          "name": "IRemoteService",
          "namespace": "Volo.Abp",
          "declaringAssemblyName": "Volo.Abp.Core"
        },
        {
          "name": "IAvoidDuplicateCrossCuttingConcerns",
          "namespace": "Volo.Abp.Aspects",
          "declaringAssemblyName": "Volo.Abp.Core"
        },
        {
          "name": "IValidationEnabled",
          "namespace": "Volo.Abp.Validation",
          "declaringAssemblyName": "Volo.Abp.Validation"
        },
        {
          "name": "IUnitOfWorkEnabled",
          "namespace": "Volo.Abp.Uow",
          "declaringAssemblyName": "Volo.Abp.Uow"
        },
        {
          "name": "IAuditingEnabled",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IGlobalFeatureCheckingEnabled",
          "namespace": "Volo.Abp.GlobalFeatures",
          "declaringAssemblyName": "Volo.Abp.GlobalFeatures"
        },
        {
          "name": "ITransientDependency",
          "namespace": "Volo.Abp.DependencyInjection",
          "declaringAssemblyName": "Volo.Abp.Core"
        },
        {
          "name": "IAccountAppService",
          "namespace": "Volo.Abp.Account",
          "declaringAssemblyName": "Volo.Abp.Account.Application.Contracts"
        }
      ],
      "methods": [
        {
          "returnType": "IdentityUserDto",
          "isAsync": true,
          "name": "RegisterAsync",
          "summary": null,
          "parameters": [
            {
              "type": "RegisterDto",
              "name": "input",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "SendPasswordResetCodeAsync",
          "summary": null,
          "parameters": [
            {
              "type": "SendPasswordResetCodeDto",
              "name": "input",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Boolean",
          "isAsync": true,
          "name": "VerifyPasswordResetTokenAsync",
          "summary": null,
          "parameters": [
            {
              "type": "VerifyPasswordResetTokenInput",
              "name": "input",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "ResetPasswordAsync",
          "summary": null,
          "parameters": [
            {
              "type": "ResetPasswordDto",
              "name": "input",
              "isOptional": false
            }
          ]
        }
      ],
      "contentType": "applicationService",
      "name": "AccountAppService",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.Account",
      "baseClass": {
        "name": "IdentityAppServiceBase",
        "namespace": "Volo.Abp.Identity",
        "declaringAssemblyName": "Volo.Abp.Identity.Application"
      },
      "implementingInterfaces": [
        {
          "name": "IApplicationService",
          "namespace": "Volo.Abp.Application.Services",
          "declaringAssemblyName": "Volo.Abp.Ddd.Application.Contracts"
        },
        {
          "name": "IRemoteService",
          "namespace": "Volo.Abp",
          "declaringAssemblyName": "Volo.Abp.Core"
        },
        {
          "name": "IAvoidDuplicateCrossCuttingConcerns",
          "namespace": "Volo.Abp.Aspects",
          "declaringAssemblyName": "Volo.Abp.Core"
        },
        {
          "name": "IValidationEnabled",
          "namespace": "Volo.Abp.Validation",
          "declaringAssemblyName": "Volo.Abp.Validation"
        },
        {
          "name": "IUnitOfWorkEnabled",
          "namespace": "Volo.Abp.Uow",
          "declaringAssemblyName": "Volo.Abp.Uow"
        },
        {
          "name": "IAuditingEnabled",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IGlobalFeatureCheckingEnabled",
          "namespace": "Volo.Abp.GlobalFeatures",
          "declaringAssemblyName": "Volo.Abp.GlobalFeatures"
        },
        {
          "name": "ITransientDependency",
          "namespace": "Volo.Abp.DependencyInjection",
          "declaringAssemblyName": "Volo.Abp.Core"
        },
        {
          "name": "IProfileAppService",
          "namespace": "Volo.Abp.Account",
          "declaringAssemblyName": "Volo.Abp.Account.Application.Contracts"
        }
      ],
      "methods": [
        {
          "returnType": "ProfileDto",
          "isAsync": true,
          "name": "GetAsync",
          "summary": null,
          "parameters": []
        },
        {
          "returnType": "ProfileDto",
          "isAsync": true,
          "name": "UpdateAsync",
          "summary": null,
          "parameters": [
            {
              "type": "UpdateProfileDto",
              "name": "input",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "ChangePasswordAsync",
          "summary": null,
          "parameters": [
            {
              "type": "ChangePasswordInput",
              "name": "input",
              "isOptional": false
            }
          ]
        }
      ],
      "contentType": "applicationService",
      "name": "ProfileAppService",
      "summary": null
    },
    {
      "defaultValue": "true",
      "displayName": "Is self-registration enabled",
      "description": "Whether a user can register the account by him or herself.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Account.IsSelfRegistrationEnabled",
      "summary": null
    },
    {
      "defaultValue": "true",
      "displayName": "Authenticate with a local account",
      "description": "Indicates if the server will allow users to authenticate with a local account.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Account.EnableLocalLogin",
      "summary": null
    }
  ]
}