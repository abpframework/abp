{
  "name": "Volo.Abp.Identity.Domain",
  "hash": "69da4e978edf6e3c783718262ba092e6",
  "contents": [
    {
      "namespace": "Volo.Abp.Identity",
      "dependsOnModules": [
        {
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain",
          "namespace": "Volo.Abp.Domain",
          "name": "AbpDddDomainModule"
        },
        {
          "declaringAssemblyName": "Volo.Abp.Identity.Domain.Shared",
          "namespace": "Volo.Abp.Identity",
          "name": "AbpIdentityDomainSharedModule"
        },
        {
          "declaringAssemblyName": "Volo.Abp.Users.Domain",
          "namespace": "Volo.Abp.Users",
          "name": "AbpUsersDomainModule"
        },
        {
          "declaringAssemblyName": "Volo.Abp.AutoMapper",
          "namespace": "Volo.Abp.AutoMapper",
          "name": "AbpAutoMapperModule"
        }
      ],
      "contentType": "abpModule",
      "name": "AbpIdentityDomainModule",
      "summary": null
    },
    {
      "baseClass": {
        "name": "AggregateRoot<Guid>",
        "namespace": "Volo.Abp.Domain.Entities",
        "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IHasExtraProperties",
          "namespace": "Volo.Abp.Data",
          "declaringAssemblyName": "Volo.Abp.ObjectExtending"
        },
        {
          "name": "IHasConcurrencyStamp",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Data"
        }
      ],
      "methods": [
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "SetName",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "name",
              "isOptional": false
            }
          ]
        }
      ],
      "namespace": "Volo.Abp.Identity",
      "primaryKeyType": "Guid",
      "collectionProperties": {},
      "navigationProperties": {},
      "contentType": "aggregateRoot",
      "name": "IdentityClaimType",
      "summary": null
    },
    {
      "baseClass": {
        "name": "BasicAggregateRoot<Guid>",
        "namespace": "Volo.Abp.Domain.Entities",
        "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        }
      ],
      "methods": [],
      "namespace": "Volo.Abp.Identity",
      "primaryKeyType": "Guid",
      "collectionProperties": {},
      "navigationProperties": {},
      "contentType": "aggregateRoot",
      "name": "IdentityLinkUser",
      "summary": null
    },
    {
      "baseClass": {
        "name": "AggregateRoot<Guid>",
        "namespace": "Volo.Abp.Domain.Entities",
        "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IHasExtraProperties",
          "namespace": "Volo.Abp.Data",
          "declaringAssemblyName": "Volo.Abp.ObjectExtending"
        },
        {
          "name": "IHasConcurrencyStamp",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Data"
        },
        {
          "name": "IMultiTenant",
          "namespace": "Volo.Abp.MultiTenancy",
          "declaringAssemblyName": "Volo.Abp.MultiTenancy"
        }
      ],
      "methods": [
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "AddClaim",
          "summary": null,
          "parameters": [
            {
              "type": "IGuidGenerator",
              "name": "guidGenerator",
              "isOptional": false
            },
            {
              "type": "Claim",
              "name": "claim",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "AddClaims",
          "summary": null,
          "parameters": [
            {
              "type": "IGuidGenerator",
              "name": "guidGenerator",
              "isOptional": false
            },
            {
              "type": "IEnumerable<Claim>",
              "name": "claims",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "IdentityRoleClaim",
          "isAsync": false,
          "name": "FindClaim",
          "summary": null,
          "parameters": [
            {
              "type": "Claim",
              "name": "claim",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "RemoveClaim",
          "summary": null,
          "parameters": [
            {
              "type": "Claim",
              "name": "claim",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "ChangeName",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "name",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "String",
          "isAsync": false,
          "name": "ToString",
          "summary": null,
          "parameters": []
        }
      ],
      "namespace": "Volo.Abp.Identity",
      "primaryKeyType": "Guid",
      "collectionProperties": {
        "claims": {
          "name": "IdentityRoleClaim",
          "namespace": "Volo.Abp.Identity",
          "declaringAssemblyName": "Volo.Abp.Identity.Domain"
        }
      },
      "navigationProperties": {},
      "contentType": "aggregateRoot",
      "name": "IdentityRole",
      "summary": "Represents a role in the identity system"
    },
    {
      "baseClass": {
        "name": "AggregateRoot<Guid>",
        "namespace": "Volo.Abp.Domain.Entities",
        "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IHasExtraProperties",
          "namespace": "Volo.Abp.Data",
          "declaringAssemblyName": "Volo.Abp.ObjectExtending"
        },
        {
          "name": "IHasConcurrencyStamp",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Data"
        },
        {
          "name": "IMultiTenant",
          "namespace": "Volo.Abp.MultiTenancy",
          "declaringAssemblyName": "Volo.Abp.MultiTenancy"
        }
      ],
      "methods": [],
      "namespace": "Volo.Abp.Identity",
      "primaryKeyType": "Guid",
      "collectionProperties": {},
      "navigationProperties": {},
      "contentType": "aggregateRoot",
      "name": "IdentitySecurityLog",
      "summary": null
    },
    {
      "baseClass": {
        "name": "FullAuditedAggregateRoot<Guid>",
        "namespace": "Volo.Abp.Domain.Entities.Auditing",
        "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IHasExtraProperties",
          "namespace": "Volo.Abp.Data",
          "declaringAssemblyName": "Volo.Abp.ObjectExtending"
        },
        {
          "name": "IHasConcurrencyStamp",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Data"
        },
        {
          "name": "ICreationAuditedObject",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IHasCreationTime",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IMayHaveCreator",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IAuditedObject",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IModificationAuditedObject",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IHasModificationTime",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IFullAuditedObject",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IDeletionAuditedObject",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IHasDeletionTime",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "ISoftDelete",
          "namespace": "Volo.Abp",
          "declaringAssemblyName": "Volo.Abp.Core"
        },
        {
          "name": "IUser",
          "namespace": "Volo.Abp.Users",
          "declaringAssemblyName": "Volo.Abp.Users.Domain"
        },
        {
          "name": "IMultiTenant",
          "namespace": "Volo.Abp.MultiTenancy",
          "declaringAssemblyName": "Volo.Abp.MultiTenancy"
        }
      ],
      "methods": [
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "AddRole",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "roleId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "RemoveRole",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "roleId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Boolean",
          "isAsync": false,
          "name": "IsInRole",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "roleId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "AddClaim",
          "summary": null,
          "parameters": [
            {
              "type": "IGuidGenerator",
              "name": "guidGenerator",
              "isOptional": false
            },
            {
              "type": "Claim",
              "name": "claim",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "AddClaims",
          "summary": null,
          "parameters": [
            {
              "type": "IGuidGenerator",
              "name": "guidGenerator",
              "isOptional": false
            },
            {
              "type": "IEnumerable<Claim>",
              "name": "claims",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "IdentityUserClaim",
          "isAsync": false,
          "name": "FindClaim",
          "summary": null,
          "parameters": [
            {
              "type": "Claim",
              "name": "claim",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "ReplaceClaim",
          "summary": null,
          "parameters": [
            {
              "type": "Claim",
              "name": "claim",
              "isOptional": false
            },
            {
              "type": "Claim",
              "name": "newClaim",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "RemoveClaims",
          "summary": null,
          "parameters": [
            {
              "type": "IEnumerable<Claim>",
              "name": "claims",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "RemoveClaim",
          "summary": null,
          "parameters": [
            {
              "type": "Claim",
              "name": "claim",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "AddLogin",
          "summary": null,
          "parameters": [
            {
              "type": "UserLoginInfo",
              "name": "login",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "RemoveLogin",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "loginProvider",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "providerKey",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "IdentityUserToken",
          "isAsync": false,
          "name": "FindToken",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "loginProvider",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "name",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "SetToken",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "loginProvider",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "name",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "value",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "RemoveToken",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "loginProvider",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "name",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "AddOrganizationUnit",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "organizationUnitId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "RemoveOrganizationUnit",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "organizationUnitId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Boolean",
          "isAsync": false,
          "name": "IsInOrganizationUnit",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "organizationUnitId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "SetEmailConfirmed",
          "summary": null,
          "parameters": [
            {
              "type": "Boolean",
              "name": "confirmed",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "SetPhoneNumberConfirmed",
          "summary": null,
          "parameters": [
            {
              "type": "Boolean",
              "name": "confirmed",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "SetPhoneNumber",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "phoneNumber",
              "isOptional": false
            },
            {
              "type": "Boolean",
              "name": "confirmed",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "SetIsActive",
          "summary": null,
          "parameters": [
            {
              "type": "Boolean",
              "name": "isActive",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "String",
          "isAsync": false,
          "name": "ToString",
          "summary": null,
          "parameters": []
        }
      ],
      "namespace": "Volo.Abp.Identity",
      "primaryKeyType": "Guid",
      "collectionProperties": {
        "roles": {
          "name": "IdentityUserRole",
          "namespace": "Volo.Abp.Identity",
          "declaringAssemblyName": "Volo.Abp.Identity.Domain"
        },
        "claims": {
          "name": "IdentityUserClaim",
          "namespace": "Volo.Abp.Identity",
          "declaringAssemblyName": "Volo.Abp.Identity.Domain"
        },
        "logins": {
          "name": "IdentityUserLogin",
          "namespace": "Volo.Abp.Identity",
          "declaringAssemblyName": "Volo.Abp.Identity.Domain"
        },
        "tokens": {
          "name": "IdentityUserToken",
          "namespace": "Volo.Abp.Identity",
          "declaringAssemblyName": "Volo.Abp.Identity.Domain"
        },
        "organizationUnits": {
          "name": "IdentityUserOrganizationUnit",
          "namespace": "Volo.Abp.Identity",
          "declaringAssemblyName": "Volo.Abp.Identity.Domain"
        }
      },
      "navigationProperties": {},
      "contentType": "aggregateRoot",
      "name": "IdentityUser",
      "summary": null
    },
    {
      "baseClass": {
        "name": "FullAuditedAggregateRoot<Guid>",
        "namespace": "Volo.Abp.Domain.Entities.Auditing",
        "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
      },
      "implementingInterfaces": [
        {
          "name": "IEntity",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IEntity<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot<Guid>",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IAggregateRoot",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IGeneratesDomainEvents",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
        },
        {
          "name": "IHasExtraProperties",
          "namespace": "Volo.Abp.Data",
          "declaringAssemblyName": "Volo.Abp.ObjectExtending"
        },
        {
          "name": "IHasConcurrencyStamp",
          "namespace": "Volo.Abp.Domain.Entities",
          "declaringAssemblyName": "Volo.Abp.Data"
        },
        {
          "name": "ICreationAuditedObject",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IHasCreationTime",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IMayHaveCreator",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IAuditedObject",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IModificationAuditedObject",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IHasModificationTime",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IFullAuditedObject",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IDeletionAuditedObject",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "IHasDeletionTime",
          "namespace": "Volo.Abp.Auditing",
          "declaringAssemblyName": "Volo.Abp.Auditing.Contracts"
        },
        {
          "name": "ISoftDelete",
          "namespace": "Volo.Abp",
          "declaringAssemblyName": "Volo.Abp.Core"
        },
        {
          "name": "IMultiTenant",
          "namespace": "Volo.Abp.MultiTenancy",
          "declaringAssemblyName": "Volo.Abp.MultiTenancy"
        }
      ],
      "methods": [
        {
          "returnType": "String",
          "isAsync": false,
          "name": "CreateCode",
          "summary": null,
          "parameters": [
            {
              "type": "Int32[]",
              "name": "numbers",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "String",
          "isAsync": false,
          "name": "AppendCode",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "parentCode",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "childCode",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "String",
          "isAsync": false,
          "name": "GetRelativeCode",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "code",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "parentCode",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "String",
          "isAsync": false,
          "name": "CalculateNextCode",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "code",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "String",
          "isAsync": false,
          "name": "GetLastUnitCode",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "code",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "String",
          "isAsync": false,
          "name": "GetParentCode",
          "summary": null,
          "parameters": [
            {
              "type": "String",
              "name": "code",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "AddRole",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "roleId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": false,
          "name": "RemoveRole",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "roleId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Boolean",
          "isAsync": false,
          "name": "IsInRole",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "roleId",
              "isOptional": false
            }
          ]
        }
      ],
      "namespace": "Volo.Abp.Identity",
      "primaryKeyType": "Guid",
      "collectionProperties": {
        "roles": {
          "name": "OrganizationUnitRole",
          "namespace": "Volo.Abp.Identity",
          "declaringAssemblyName": "Volo.Abp.Identity.Domain"
        }
      },
      "navigationProperties": {},
      "contentType": "aggregateRoot",
      "name": "OrganizationUnit",
      "summary": "Represents an organization unit (OU)."
    },
    {
      "namespace": "Volo.Abp.Identity",
      "baseClass": {
        "name": "DomainService",
        "namespace": "Volo.Abp.Domain.Services",
        "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
      },
      "methods": [
        {
          "returnType": "IdentityClaimType",
          "isAsync": true,
          "name": "CreateAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityClaimType",
              "name": "claimType",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "IdentityClaimType",
          "isAsync": true,
          "name": "UpdateAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityClaimType",
              "name": "claimType",
              "isOptional": false
            }
          ]
        }
      ],
      "contentType": "domainService",
      "name": "IdentityClaimTypeManager",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.Identity",
      "baseClass": {
        "name": "DomainService",
        "namespace": "Volo.Abp.Domain.Services",
        "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
      },
      "methods": [
        {
          "returnType": "List<IdentityLinkUser>",
          "isAsync": true,
          "name": "GetListAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityLinkUserInfo",
              "name": "linkUserInfo",
              "isOptional": false
            },
            {
              "type": "Boolean",
              "name": "includeIndirect",
              "isOptional": true
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "LinkAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityLinkUserInfo",
              "name": "sourceLinkUser",
              "isOptional": false
            },
            {
              "type": "IdentityLinkUserInfo",
              "name": "targetLinkUser",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "Boolean",
          "isAsync": true,
          "name": "IsLinkedAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityLinkUserInfo",
              "name": "sourceLinkUser",
              "isOptional": false
            },
            {
              "type": "IdentityLinkUserInfo",
              "name": "targetLinkUser",
              "isOptional": false
            },
            {
              "type": "Boolean",
              "name": "includeIndirect",
              "isOptional": true
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "UnlinkAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityLinkUserInfo",
              "name": "sourceLinkUser",
              "isOptional": false
            },
            {
              "type": "IdentityLinkUserInfo",
              "name": "targetLinkUser",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "String",
          "isAsync": true,
          "name": "GenerateLinkTokenAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityLinkUserInfo",
              "name": "targetLinkUser",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "tokenPurpose",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "Boolean",
          "isAsync": true,
          "name": "VerifyLinkTokenAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityLinkUserInfo",
              "name": "targetLinkUser",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "token",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "tokenPurpose",
              "isOptional": false
            },
            {
              "type": "CancellationToken",
              "name": "cancellationToken",
              "isOptional": true
            }
          ]
        }
      ],
      "contentType": "domainService",
      "name": "IdentityLinkUserManager",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.Identity",
      "baseClass": {
        "name": "RoleManager<IdentityRole>",
        "namespace": "Microsoft.AspNetCore.Identity",
        "declaringAssemblyName": "Microsoft.Extensions.Identity.Core"
      },
      "methods": [
        {
          "returnType": "IdentityRole",
          "isAsync": true,
          "name": "GetByIdAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "id",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "IdentityResult",
          "isAsync": true,
          "name": "SetRoleNameAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityRole",
              "name": "role",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "name",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "IdentityResult",
          "isAsync": true,
          "name": "DeleteAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityRole",
              "name": "role",
              "isOptional": false
            }
          ]
        }
      ],
      "contentType": "domainService",
      "name": "IdentityRoleManager",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.Identity",
      "baseClass": {
        "name": "UserManager<IdentityUser>",
        "namespace": "Microsoft.AspNetCore.Identity",
        "declaringAssemblyName": "Microsoft.Extensions.Identity.Core"
      },
      "methods": [
        {
          "returnType": "IdentityResult",
          "isAsync": true,
          "name": "CreateAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityUser",
              "name": "user",
              "isOptional": false
            },
            {
              "type": "String",
              "name": "password",
              "isOptional": false
            },
            {
              "type": "Boolean",
              "name": "validatePassword",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "IdentityUser",
          "isAsync": true,
          "name": "GetByIdAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "id",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "IdentityResult",
          "isAsync": true,
          "name": "SetRolesAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityUser",
              "name": "user",
              "isOptional": false
            },
            {
              "type": "IEnumerable<String>",
              "name": "roleNames",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Boolean",
          "isAsync": true,
          "name": "IsInOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "userId",
              "isOptional": false
            },
            {
              "type": "Guid",
              "name": "ouId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Boolean",
          "isAsync": true,
          "name": "IsInOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityUser",
              "name": "user",
              "isOptional": false
            },
            {
              "type": "OrganizationUnit",
              "name": "ou",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "AddToOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "userId",
              "isOptional": false
            },
            {
              "type": "Guid",
              "name": "ouId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "AddToOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityUser",
              "name": "user",
              "isOptional": false
            },
            {
              "type": "OrganizationUnit",
              "name": "ou",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "RemoveFromOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "userId",
              "isOptional": false
            },
            {
              "type": "Guid",
              "name": "ouId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "RemoveFromOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityUser",
              "name": "user",
              "isOptional": false
            },
            {
              "type": "OrganizationUnit",
              "name": "ou",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "SetOrganizationUnitsAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "userId",
              "isOptional": false
            },
            {
              "type": "Guid[]",
              "name": "organizationUnitIds",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "SetOrganizationUnitsAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityUser",
              "name": "user",
              "isOptional": false
            },
            {
              "type": "Guid[]",
              "name": "organizationUnitIds",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "List<OrganizationUnit>",
          "isAsync": true,
          "name": "GetOrganizationUnitsAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityUser",
              "name": "user",
              "isOptional": false
            },
            {
              "type": "Boolean",
              "name": "includeDetails",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "List<IdentityUser>",
          "isAsync": true,
          "name": "GetUsersInOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "OrganizationUnit",
              "name": "organizationUnit",
              "isOptional": false
            },
            {
              "type": "Boolean",
              "name": "includeChildren",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "IdentityResult",
          "isAsync": true,
          "name": "AddDefaultRolesAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityUser",
              "name": "user",
              "isOptional": false
            }
          ]
        }
      ],
      "contentType": "domainService",
      "name": "IdentityUserManager",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.Identity",
      "baseClass": {
        "name": "DomainService",
        "namespace": "Volo.Abp.Domain.Services",
        "declaringAssemblyName": "Volo.Abp.Ddd.Domain"
      },
      "methods": [
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "CreateAsync",
          "summary": null,
          "parameters": [
            {
              "type": "OrganizationUnit",
              "name": "organizationUnit",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "UpdateAsync",
          "summary": null,
          "parameters": [
            {
              "type": "OrganizationUnit",
              "name": "organizationUnit",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "String",
          "isAsync": true,
          "name": "GetNextChildCodeAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Nullable<Guid>",
              "name": "parentId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "OrganizationUnit",
          "isAsync": true,
          "name": "GetLastChildOrNullAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Nullable<Guid>",
              "name": "parentId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "DeleteAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "id",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "MoveAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "id",
              "isOptional": false
            },
            {
              "type": "Nullable<Guid>",
              "name": "parentId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "String",
          "isAsync": true,
          "name": "GetCodeOrDefaultAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "id",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "List<OrganizationUnit>",
          "isAsync": true,
          "name": "FindChildrenAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Nullable<Guid>",
              "name": "parentId",
              "isOptional": false
            },
            {
              "type": "Boolean",
              "name": "recursive",
              "isOptional": true
            }
          ]
        },
        {
          "returnType": "Boolean",
          "isAsync": true,
          "name": "IsInOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityUser",
              "name": "user",
              "isOptional": false
            },
            {
              "type": "OrganizationUnit",
              "name": "ou",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "AddRoleToOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "roleId",
              "isOptional": false
            },
            {
              "type": "Guid",
              "name": "ouId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "AddRoleToOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityRole",
              "name": "role",
              "isOptional": false
            },
            {
              "type": "OrganizationUnit",
              "name": "ou",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "RemoveRoleFromOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "Guid",
              "name": "roleId",
              "isOptional": false
            },
            {
              "type": "Guid",
              "name": "ouId",
              "isOptional": false
            }
          ]
        },
        {
          "returnType": "Void",
          "isAsync": true,
          "name": "RemoveRoleFromOrganizationUnitAsync",
          "summary": null,
          "parameters": [
            {
              "type": "IdentityRole",
              "name": "role",
              "isOptional": false
            },
            {
              "type": "OrganizationUnit",
              "name": "organizationUnit",
              "isOptional": false
            }
          ]
        }
      ],
      "contentType": "domainService",
      "name": "OrganizationUnitManager",
      "summary": "Performs domain logic for Organization Units."
    },
    {
      "namespace": "Volo.Abp.Identity",
      "entityAnalyzeModel": {
        "namespace": "Volo.Abp.Identity",
        "primaryKeyType": "Guid",
        "collectionProperties": {},
        "navigationProperties": {},
        "contentType": "entity",
        "name": "IdentityClaimType",
        "summary": null
      },
      "contentType": "repositoryInterface",
      "name": "IIdentityClaimTypeRepository",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.Identity",
      "entityAnalyzeModel": {
        "namespace": "Volo.Abp.Identity",
        "primaryKeyType": "Guid",
        "collectionProperties": {},
        "navigationProperties": {},
        "contentType": "entity",
        "name": "IdentityLinkUser",
        "summary": null
      },
      "contentType": "repositoryInterface",
      "name": "IIdentityLinkUserRepository",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.Identity",
      "entityAnalyzeModel": {
        "namespace": "Volo.Abp.Identity",
        "primaryKeyType": "Guid",
        "collectionProperties": {
          "claims": {
            "name": "IdentityRoleClaim",
            "namespace": "Volo.Abp.Identity",
            "declaringAssemblyName": "Volo.Abp.Identity.Domain"
          }
        },
        "navigationProperties": {},
        "contentType": "entity",
        "name": "IdentityRole",
        "summary": "Represents a role in the identity system"
      },
      "contentType": "repositoryInterface",
      "name": "IIdentityRoleRepository",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.Identity",
      "entityAnalyzeModel": {
        "namespace": "Volo.Abp.Identity",
        "primaryKeyType": "Guid",
        "collectionProperties": {},
        "navigationProperties": {},
        "contentType": "entity",
        "name": "IdentitySecurityLog",
        "summary": null
      },
      "contentType": "repositoryInterface",
      "name": "IIdentitySecurityLogRepository",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.Identity",
      "entityAnalyzeModel": {
        "namespace": "Volo.Abp.Identity",
        "primaryKeyType": "Guid",
        "collectionProperties": {
          "roles": {
            "name": "IdentityUserRole",
            "namespace": "Volo.Abp.Identity",
            "declaringAssemblyName": "Volo.Abp.Identity.Domain"
          },
          "claims": {
            "name": "IdentityUserClaim",
            "namespace": "Volo.Abp.Identity",
            "declaringAssemblyName": "Volo.Abp.Identity.Domain"
          },
          "logins": {
            "name": "IdentityUserLogin",
            "namespace": "Volo.Abp.Identity",
            "declaringAssemblyName": "Volo.Abp.Identity.Domain"
          },
          "tokens": {
            "name": "IdentityUserToken",
            "namespace": "Volo.Abp.Identity",
            "declaringAssemblyName": "Volo.Abp.Identity.Domain"
          },
          "organizationUnits": {
            "name": "IdentityUserOrganizationUnit",
            "namespace": "Volo.Abp.Identity",
            "declaringAssemblyName": "Volo.Abp.Identity.Domain"
          }
        },
        "navigationProperties": {},
        "contentType": "entity",
        "name": "IdentityUser",
        "summary": null
      },
      "contentType": "repositoryInterface",
      "name": "IIdentityUserRepository",
      "summary": null
    },
    {
      "namespace": "Volo.Abp.Identity",
      "entityAnalyzeModel": {
        "namespace": "Volo.Abp.Identity",
        "primaryKeyType": "Guid",
        "collectionProperties": {
          "roles": {
            "name": "OrganizationUnitRole",
            "namespace": "Volo.Abp.Identity",
            "declaringAssemblyName": "Volo.Abp.Identity.Domain"
          }
        },
        "navigationProperties": {},
        "contentType": "entity",
        "name": "OrganizationUnit",
        "summary": "Represents an organization unit (OU)."
      },
      "contentType": "repositoryInterface",
      "name": "IOrganizationUnitRepository",
      "summary": null
    },
    {
      "defaultValue": "6",
      "displayName": "Required length",
      "description": "The minimum length a password must be.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.Password.RequiredLength",
      "summary": null
    },
    {
      "defaultValue": "1",
      "displayName": "Required unique characters number",
      "description": "The minimum number of unique characters which a password must contain.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.Password.RequiredUniqueChars",
      "summary": null
    },
    {
      "defaultValue": "True",
      "displayName": "Required non-alphanumeric character",
      "description": "If passwords must contain a non-alphanumeric character.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.Password.RequireNonAlphanumeric",
      "summary": null
    },
    {
      "defaultValue": "True",
      "displayName": "Required lower case character",
      "description": "If passwords must contain a lower case ASCII character.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.Password.RequireLowercase",
      "summary": null
    },
    {
      "defaultValue": "True",
      "displayName": "Required upper case character",
      "description": "If passwords must contain a upper case ASCII character.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.Password.RequireUppercase",
      "summary": null
    },
    {
      "defaultValue": "True",
      "displayName": "Required digit",
      "description": "If passwords must contain a digit.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.Password.RequireDigit",
      "summary": null
    },
    {
      "defaultValue": "True",
      "displayName": "Enabled for new users",
      "description": "Whether a new user can be locked out.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.Lockout.AllowedForNewUsers",
      "summary": null
    },
    {
      "defaultValue": "300",
      "displayName": "Lockout duration(seconds)",
      "description": "The duration a user is locked out for when a lockout occurs.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.Lockout.LockoutDuration",
      "summary": null
    },
    {
      "defaultValue": "5",
      "displayName": "Max failed access attempts",
      "description": "The number of failed access attempts allowed before a user is locked out, assuming lock out is enabled.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.Lockout.MaxFailedAccessAttempts",
      "summary": null
    },
    {
      "defaultValue": "False",
      "displayName": "Require confirmed email",
      "description": "Whether a confirmed email address is required to sign in.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.SignIn.RequireConfirmedEmail",
      "summary": null
    },
    {
      "defaultValue": "True",
      "displayName": "Allow users to confirm their phone number",
      "description": "Whether the phoneNumber can be confirmed by the user.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.SignIn.EnablePhoneNumberConfirmation",
      "summary": null
    },
    {
      "defaultValue": "False",
      "displayName": "Require confirmed phone number",
      "description": "Whether a confirmed telephone number is required to sign in.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.SignIn.RequireConfirmedPhoneNumber",
      "summary": null
    },
    {
      "defaultValue": "True",
      "displayName": "Allow users to change their usernames",
      "description": "Whether the username can be updated by the user.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.User.IsUserNameUpdateEnabled",
      "summary": null
    },
    {
      "defaultValue": "True",
      "displayName": "Allow users to change their email addresses",
      "description": "Whether the email can be updated by the user.",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.User.IsEmailUpdateEnabled",
      "summary": null
    },
    {
      "defaultValue": "2147483647",
      "displayName": "Maximum allowed organization unit membership count for a user",
      "description": "Maximum allowed organization unit membership count for a user",
      "isVisibleToClient": true,
      "isInherited": true,
      "isEncrypted": false,
      "contentType": "setting",
      "name": "Abp.Identity.OrganizationUnit.MaxUserMembershipCount",
      "summary": null
    }
  ]
}