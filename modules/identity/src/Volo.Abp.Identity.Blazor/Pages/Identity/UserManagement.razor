@page "/identity/users"
@attribute [Authorize(IdentityPermissions.Users.Default)]
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Volo.Abp.Identity.Localization
@using Volo.Abp.PermissionManagement.Blazor.Components
@inherits UserManagementBase
@inject IStringLocalizer<IdentityResource> L

@* ************************* PAGE HEADER ************************* *@
<Row>
    <Column ColumnSize="ColumnSize.Is6">
        <h1>@L["Users"]</h1>
    </Column>
    <Column ColumnSize="ColumnSize.Is6">
        @if (HasCreatePermission)
        {
            <Paragraph Alignment="TextAlignment.Right">
                <Button Color="Color.Primary" Clicked="OpenCreateModalAsync">@L["NewUser"]</Button>
            </Paragraph>
        }
    </Column>
</Row>

@* ************************* DATA GRID ************************* *@
<DataGrid TItem="IdentityUserDto"
          Data="Entities"
          ReadData="OnDataGridReadAsync"
          TotalItems="TotalCount"
          ShowPager="true"
          PageSize="PageSize">
    <DataGridColumns>
        @if (ShouldShowEntityActions)
        {
            <DataGridColumn Width="150px" TItem="IdentityUserDto" Field="@nameof(IdentityUserDto.UserName)" Sortable="false" Caption="@L["Actions"].Value">
                <DisplayTemplate>
                    <Dropdown>
                        <DropdownToggle Color="Color.Primary">
                            @L["Actions"]
                        </DropdownToggle>
                        <DropdownMenu>
                            @if (HasUpdatePermission)
                            {
                                <DropdownItem Clicked="() => OpenEditModalAsync(context.As<IdentityUserDto>().Id)">@L["Edit"]</DropdownItem>
                            }
                            @if (HasManagePermissionsPermission)
                            {
                                <DropdownItem Clicked="() => PermissionManagementModal.OpenAsync(PermissionProviderName, context.As<IdentityUserDto>().Id.ToString())">@L["Permissions"]</DropdownItem>
                            }
                            @if (HasDeletePermission)
                            {
                                <DropdownDivider/>
                                <DropdownItem Clicked="() => DeleteEntityAsync(context.As<IdentityUserDto>())">@L["Delete"]</DropdownItem>
                            }
                        </DropdownMenu>
                    </Dropdown>
                </DisplayTemplate>
            </DataGridColumn>
        }
        <DataGridColumn TItem="IdentityUserDto" Field="@nameof(IdentityUserDto.UserName)" Caption="@L["UserName"].Value">
            <DisplayTemplate>
                @(context.As<IdentityUserDto>().UserName)
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="IdentityUserDto" Field="@nameof(IdentityUserDto.Email)" Caption="@L["Email"].Value">
            <DisplayTemplate>
                @(context.As<IdentityUserDto>().Email)
            </DisplayTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="IdentityUserDto" Field="@nameof(IdentityUserDto.PhoneNumber)" Caption="@L["PhoneNumber"].Value">
            <DisplayTemplate>
                @(context.As<IdentityUserDto>().PhoneNumber)
            </DisplayTemplate>
        </DataGridColumn>
    </DataGridColumns>
</DataGrid>

@* ************************* CREATE MODAL ************************* *@
@if (HasCreatePermission)
{
    <Modal @ref="CreateModal">
        <ModalBackdrop/>
        <ModalContent IsCentered="true">
            <ModalHeader>
                <ModalTitle>@L["NewUser"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <EditForm id="IdentityUserCreateForm" Model="@NewEntity" OnValidSubmit="CreateEntityAsync">
                    <Tabs @bind-SelectedTab="@CreateModalSelectedTab">
                        <Items>
                            <Tab Name="UserInformations">@L["UserInformations"]</Tab>
                            <Tab Name="Roles">@L["Roles"]</Tab>
                        </Items>
                        <Content>
                            <TabPanel Name="UserInformations">
                                <Field>
                                    <FieldLabel>@L["DisplayName:UserName"]</FieldLabel>
                                    <TextEdit @bind-text="NewEntity.UserName"/>
                                </Field>
                                <Field>
                                    <FieldLabel>@L["DisplayName:Name"]</FieldLabel>
                                    <TextEdit @bind-text="NewEntity.Name"/>
                                </Field>
                                <Field>
                                    <FieldLabel>@L["DisplayName:Surname"]</FieldLabel>
                                    <TextEdit @bind-text="NewEntity.Surname"/>
                                </Field>
                                <Field>
                                    <FieldLabel>@L["DisplayName:Password"]</FieldLabel>
                                    <TextEdit Role="TextRole.Password" @bind-text="NewEntity.Password"/>
                                </Field>
                                <Field>
                                    <FieldLabel>@L["DisplayName:Email"]</FieldLabel>
                                    <TextEdit @bind-text="NewEntity.Email"/>
                                </Field>
                                <Field>
                                    <FieldLabel>@L["DisplayName:PhoneNumber"]</FieldLabel>
                                    <TextEdit @bind-text="NewEntity.PhoneNumber"/>
                                </Field>
                                <Field>
                                    <Check TValue="bool" @bind-checked="@NewEntity.LockoutEnabled">@L["DisplayName:LockoutEnabled"]</Check>
                                </Field>
                            </TabPanel>
                            <TabPanel Name="Roles">
                                @if (NewUserRoles != null)
                                {
                                    @foreach (var role in NewUserRoles)
                                    {
                                        <Field>
                                            <input type="hidden" @bind-value="@role.Name"/>
                                            <Check TValue="bool" @bind-checked="@role.IsAssigned">@role.Name</Check>
                                        </Field>
                                    }
                                }
                            </TabPanel>
                        </Content>
                    </Tabs>
                </EditForm>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                <Button form="IdentityUserCreateForm" Color="Color.Primary" Clicked="CreateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
}

@* ************************* EDIT MODAL ************************* *@
@if (HasUpdatePermission)
{
    <Modal @ref="EditModal">
        <ModalBackdrop/>
        <ModalContent IsCentered="true">
            <ModalHeader>
                <ModalTitle>@L["Edit"]</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <EditForm id="IdentityUserEditForm" Model="@EditingEntity" OnValidSubmit="UpdateEntityAsync">
                    <input type="hidden" name="ConcurrencyStamp" @bind-value="EditingEntity.ConcurrencyStamp"/>

                    <Tabs @bind-SelectedTab="@EditModalSelectedTab">
                        <Items>
                            <Tab Name="UserInformations">@L["UserInformations"]</Tab>
                            <Tab Name="Roles">@L["Roles"]</Tab>
                        </Items>
                        <Content>
                            <TabPanel Name="UserInformations">
                                <Field>
                                    <FieldLabel>@L["DisplayName:UserName"]</FieldLabel>
                                    <TextEdit @bind-text="EditingEntity.UserName"/>
                                </Field>
                                <Field>
                                    <FieldLabel>@L["DisplayName:Name"]</FieldLabel>
                                    <TextEdit @bind-text="EditingEntity.Name"/>
                                </Field>
                                <Field>
                                    <FieldLabel>@L["DisplayName:Surname"]</FieldLabel>
                                    <TextEdit @bind-text="EditingEntity.Surname"/>
                                </Field>
                                <Field>
                                    <FieldLabel>@L["DisplayName:Password"]</FieldLabel>
                                    <TextEdit Role="TextRole.Password" @bind-text="EditingEntity.Password"/>
                                </Field>
                                <Field>
                                    <FieldLabel>@L["DisplayName:Email"]</FieldLabel>
                                    <TextEdit @bind-text="EditingEntity.Email"/>
                                </Field>
                                <Field>
                                    <FieldLabel>@L["DisplayName:PhoneNumber"]</FieldLabel>
                                    <TextEdit @bind-text="EditingEntity.PhoneNumber"/>
                                </Field>
                                <Field>
                                    <Check TValue="bool" @bind-checked="EditingEntity.LockoutEnabled">@L["DisplayName:LockoutEnabled"]</Check>
                                </Field>
                            </TabPanel>
                            <TabPanel Name="Roles">
                                @if (EditUserRoles != null)
                                {
                                    @foreach (var role in EditUserRoles)
                                    {
                                        <Field>
                                            <input type="hidden" @bind-value="@role.Name"/>
                                            <Check TValue="bool" @bind-checked="@role.IsAssigned">@role.Name</Check>
                                        </Field>
                                    }
                                }
                            </TabPanel>
                        </Content>
                    </Tabs>
                </EditForm>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseEditModalAsync">@L["Cancel"]</Button>
                <Button form="IdentityUserEditForm" Color="Color.Primary" Clicked="UpdateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
}

<PermissionManagementModal @ref="PermissionManagementModal"/>