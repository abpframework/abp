// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using System;
using System.Threading.Tasks;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Modeling;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.CmsKit.Admin.Menus;
using Volo.CmsKit.Menus;

// ReSharper disable once CheckNamespace
namespace Volo.CmsKit.Admin.Menus.ClientProxies;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IMenuItemAdminAppService), typeof(MenuItemAdminClientProxy))]
public partial class MenuItemAdminClientProxy : ClientProxyBase<IMenuItemAdminAppService>, IMenuItemAdminAppService
{
    public virtual async Task<ListResultDto<MenuItemDto>> GetListAsync()
    {
        return await RequestAsync<ListResultDto<MenuItemDto>>(nameof(GetListAsync));
    }

    public virtual async Task<MenuItemDto> GetAsync(Guid id)
    {
        return await RequestAsync<MenuItemDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<MenuItemDto> CreateAsync(MenuItemCreateInput input)
    {
        return await RequestAsync<MenuItemDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(MenuItemCreateInput), input }
        });
    }

    public virtual async Task<MenuItemDto> UpdateAsync(Guid id, MenuItemUpdateInput input)
    {
        return await RequestAsync<MenuItemDto>(nameof(UpdateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id },
            { typeof(MenuItemUpdateInput), input }
        });
    }

    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task MoveMenuItemAsync(Guid id, MenuItemMoveInput input)
    {
        await RequestAsync(nameof(MoveMenuItemAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id },
            { typeof(MenuItemMoveInput), input }
        });
    }

    public virtual async Task<PagedResultDto<PageLookupDto>> GetPageLookupAsync(PageLookupInputDto input)
    {
        return await RequestAsync<PagedResultDto<PageLookupDto>>(nameof(GetPageLookupAsync), new ClientProxyRequestTypeValue
        {
            { typeof(PageLookupInputDto), input }
        });
    }
}
