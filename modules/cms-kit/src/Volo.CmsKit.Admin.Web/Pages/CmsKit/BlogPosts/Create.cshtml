@page

@using System.Globalization
@using Microsoft.AspNetCore.Authorization
@using Volo.Abp.AspNetCore.Mvc.UI.Packages.TuiEditor
@using Volo.Abp.AspNetCore.Mvc.UI.Theme.Shared.Pages.Shared.Components.AbpPageToolbar
@using Volo.CmsKit.Admin.Web.Pages
@using Volo.CmsKit.Admin.Web.Menus
@using Volo.CmsKit.Admin.Web.Pages.CmsKit.BlogPosts
@using Volo.CmsKit.Admin.Web.Pages.CmsKit.Tags.Components.TagEditor
@using Volo.CmsKit.Blogs
@using Volo.Abp.AspNetCore.Mvc.UI.Packages.Uppy
@using Volo.Abp.AspNetCore.Mvc.UI.Packages.Slugify
@using Volo.CmsKit.Permissions

@inherits CmsKitAdminPageBase
@inject IAuthorizationService AuthorizationService
@model CreateModel

@{
    PageLayout.Content.Title = L["BlogPosts"].Value;
    PageLayout.Content.BreadCrumb.Add(L["Menu:CMS"].Value);
    PageLayout.Content.MenuItemName = CmsKitAdminMenus.BlogPosts.BlogPostsMenu;
}

@section scripts {
    <abp-script-bundle>
        <abp-script type="typeof(TuiEditorScriptContributor)"/>
        <abp-script type="typeof(UppyScriptContributor)"/>
        <abp-script type="typeof(SlugifyScriptContributor)"/>
        <abp-script src="/client-proxies/cms-kit-common-proxy.js"/>
        <abp-script src="/client-proxies/cms-kit-admin-proxy.js"/>
        <abp-script src="/Pages/CmsKit/BlogPosts/create.js"/>
        <abp-script src="/Pages/CmsKit/Contents/addWidgetModal.js" />
    </abp-script-bundle>
}

@section styles {
    <abp-style-bundle>
        <abp-style type="typeof(TuiEditorStyleContributor)"/>
        <abp-style src="/Pages/CmsKit/BlogPosts/create.css"/>
    </abp-style-bundle>
}

@section content_toolbar {
    @await Component.InvokeAsync(typeof(AbpPageToolbarViewComponent), new { pageName = typeof(CreateModel).FullName })
}

<abp-card>
    <abp-card-header title="@L["New"].Value"></abp-card-header>
    <abp-card-body>
        <div class="mb-3">
            <label class="form-label">@L["CoverImage"]</label>
            <input type="file" id="BlogPostCoverImage" class="form-control" />
        </div>

        <abp-dynamic-form abp-model="ViewModel" asp-page="/CmsKit/BlogPosts/Create" id="form-blog-post-create">
            <div class="mb-3">
                <label class="form-label" asp-for="ViewModel.BlogId"></label>
                <select asp-for="ViewModel.BlogId" id="BlogSelectionSelect" class="form-control"></select>
                <span asp-validation-for="ViewModel.BlogId"></span>
            </div>

            <abp-input asp-for="ViewModel.Title" />

            <abp-input asp-for="ViewModel.Slug" />

            <abp-form-content />

            <div class="content-editor cms-kit-editor"
                 id="ContentEditor"
                 data-input-id="@Html.IdFor(x => x.ViewModel.Content)"
                 data-language="@(CultureInfo.CurrentUICulture.TwoLetterISOLanguageName)">
            </div>
            <input type="hidden" id="ViewModel_Status" name="ViewModel.Status" value="" class="form-control ">
        </abp-dynamic-form>

        <div id="blog-post-tags-wrapper">

            <hr />

            @await Component.InvokeAsync(typeof(TagEditorViewComponent), new
            {
                entityType = BlogPostConsts.EntityType,
                displaySubmitButton = false
            })
        </div>

    </abp-card-body>
    <abp-card-footer>
        <abp-button button-type="Primary" type="button" text="@L["SaveAsDraft"].Value" id="button-blog-post-create" />
        @if ((await AuthorizationService.AuthorizeAsync(CmsKitAdminPermissions.BlogPosts.Publish)).Succeeded)
        {
            <abp-button button-type="Primary" type="button" text="@L["Publish"].Value" id="button-blog-post-publish"/>
        }else
        {
            <abp-button button-type="Primary" type="button" text="@L["SendToReviewToPublish"].Value" id="button-blog-post-send-to-review"/>
        }
    </abp-card-footer>
</abp-card>
<input hidden id="GeneratedWidgetText" />